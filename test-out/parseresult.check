/*****************************************
  Emitting Generated Code                  
*******************************************/
class test1 extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x1 = new ParseResultInt(x0,false,10)
val x2 = println(x1)
x2
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultInt(3,false,10)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class testMap extends ((Int)=>(Unit)) {
def apply(x8:Int): Unit = {
val x10 = x8 * 2
val x11 = new ParseResultInt(x10,false,10)
val x12 = println(x11)
x12
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultInt(6,false,10)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class testMapFail extends ((Int)=>(Unit)) {
def apply(x20:Int): Unit = {
val x21 = new ParseResultInt(0,true,x20)
val x22 = println(x21)
x22
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultInt(0,true,3)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class testOrElseLeft extends ((Int)=>(Unit)) {
def apply(x28:Int): Unit = {
val x30 = new ParseResultInt(2,false,x28)
val x31 = println(x30)
x31
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultInt(2,false,3)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class testOrElseRight extends ((Int)=>(Unit)) {
def apply(x38:Int): Unit = {
val x39 = new ParseResultInt(x38,false,10)
val x41 = println(x39)
x41
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultInt(3,false,10)
