/*****************************************
  Emitting Generated Code                  
*******************************************/
class test1 extends ((Array[Char], Array[Char])=>(Boolean)) {
def apply(x0:Array[Char], x1:Array[Char]): Boolean = {
val x2 = x0.length
val x4 = x1.length
val x5 = x2 == x4
val x31 = if (x5) {
var x6: Int = 0
var x7: Boolean = true
val x28 = while ({val x8 = x6
val x10 = x7
val x9 = x8 < x2
val x11 = x9 && x10
x11}) {
val x13 = x6
val x14 = x13 + 0
val x15 = x0(x14)
val x16 = x15.toInt
val x17 = x16 | 32
val x18 = x17.toChar
val x19 = x1(x13)
val x21 = x18 == x19
val x24 = if (x21) {
()
} else {
x7 = false
()
}
val x25 = x13 + 1
x6 = x25
()
}
val x29 = x7
x29
} else {
false
}
x31
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
false
true
false
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test2 extends ((Array[Char])=>(Boolean)) {
def apply(x0:Array[Char]): Boolean = {
val x1 = x0.length
val x3 = Array('a','b')
val x4 = x3.length
val x5 = x1 == x4
val x31 = if (x5) {
var x6: Int = 0
var x7: Boolean = true
val x28 = while ({val x8 = x6
val x10 = x7
val x9 = x8 < x1
val x11 = x9 && x10
x11}) {
val x13 = x6
val x14 = x13 + 0
val x15 = x0(x14)
val x16 = x15.toInt
val x17 = x16 | 32
val x18 = x17.toChar
val x19 = x3(x13)
val x21 = x18 == x19
val x24 = if (x21) {
()
} else {
x7 = false
()
}
val x25 = x13 + 1
x6 = x25
()
}
val x29 = x7
x29
} else {
false
}
x31
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
false
/*****************************************
  Emitting Generated Code                  
*******************************************/
class test3(px3:Array[Char]) extends ((Array[Char])=>(Boolean)) {
def apply(x0:Array[Char]): Boolean = {
val x1 = x0.length
val x3 = px3 // static data: Array(h,e,l,l,o)
val x4 = x3.length
val x5 = x1 == x4
val x31 = if (x5) {
var x6: Int = 0
var x7: Boolean = true
val x28 = while ({val x8 = x6
val x10 = x7
val x9 = x8 < x1
val x11 = x9 && x10
x11}) {
val x13 = x6
val x14 = x13 + 0
val x15 = x0(x14)
val x16 = x15.toInt
val x17 = x16 | 32
val x18 = x17.toChar
val x19 = x3(x13)
val x21 = x18 == x19
val x24 = if (x21) {
()
} else {
x7 = false
()
}
val x25 = x13 + 1
x6 = x25
()
}
val x29 = x7
x29
} else {
false
}
x31
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
true
false
true
