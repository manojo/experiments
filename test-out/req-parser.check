/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqTypeParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: java.lang.String = null
var x3: Boolean = true
var x4: Int = -1
var x7: java.lang.String = ""
var x8: Boolean = false
var x9: Int = 0
var x11: Int = -1
var x12: Boolean = true
var x13: Int = 0
val x22 = x0.length
val x54 = while ({val x14 = x12
val x15 = x11
val x16 = x13
val x17 = x15 != x16
val x18 = x14 && x17
x18}) {
val x20 = x13
x11 = x20
val x23 = x20 >= x22
val x52 = if (x23) {
x12 = false
()
} else {
val x27 = x0(x20)
val x28 = x27 >= 'a'
val x29 = x27 <= 'z'
val x30 = x28 && x29
val x31 = x27 >= 'A'
val x32 = x27 <= 'Z'
val x33 = x31 && x32
val x34 = x30 || x33
val x50 = if (x34) {
val x37 = x7
val x38 = x8
val x39 = x9
val x41 = x37+x27
x7 = x41
x8 = false
val x35 = x20 + 1
x9 = x35
x13 = x35
()
} else {
x12 = false
()
}
x50
}
x52
}
val x55 = x7
val x56 = x8
val x57 = x9
val x67 = if (x56) {
val x58 = new ParseResultString(x55,x56,x57)
x58
} else {
val x59 = collection.mutable.HashSet[java.lang.String]("connect","copy","checkout","delete","get","head","lock","merge","mkactivity","mkcol","move","msearch","notify","options","post","propfind","proppatch","put","report","subscribe","trace","unlock","unsubscribe")
val x60 = x59.contains(x55)
val x62 = if (x60) {
x55
} else {
null
}
val x63 = if (x60) {
x56
} else {
true
}
val x64 = if (x60) {
x57
} else {
x57
}
val x65 = new ParseResultString(x62,x63,x64)
x65
}
val x68 = x67.res
x2 = x68
val x70 = x67.empty
x3 = x70
val x72 = x67.next
x4 = x72
val x74 = x2
val x75 = x3
val x76 = x4
val x77 = new ParseResultString(x74,x75,x76)
val x78 = println(x77)
x78
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultString(connect,false,7)
ParseResultString(copy,false,4)
ParseResultString(checkout,false,8)
ParseResultString(delete,false,6)
ParseResultString(get,false,3)
ParseResultString(head,false,4)
ParseResultString(lock,false,4)
ParseResultString(merge,false,5)
ParseResultString(mkactivity,false,10)
ParseResultString(mkcol,false,5)
ParseResultString(move,false,4)
ParseResultString(msearch,false,7)
ParseResultString(notify,false,6)
ParseResultString(options,false,7)
ParseResultString(post,false,4)
ParseResultString(propfind,false,8)
ParseResultString(proppatch,false,9)
ParseResultString(put,false,3)
ParseResultString(report,false,6)
ParseResultString(subscribe,false,9)
ParseResultString(trace,false,5)
ParseResultString(unlock,false,6)
ParseResultString(unsubscribe,false,11)
ParseResultString(null,true,4)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class hostParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: Anon1863173035 = null
var x3: Boolean = true
var x4: Int = -1
val x7 = x0.length
val x8 = 0 >= x7
val x267 = if (x8) {
x2 = null
x3 = true
x4 = 0
()
} else {
val x18 = x0(0)
val x19 = x18 >= '0'
val x20 = x18 <= '9'
val x21 = x19 && x20
val x22 = x18 >= 'a'
val x23 = x18 <= 'z'
val x24 = x22 && x23
val x25 = x18 >= 'A'
val x26 = x18 <= 'Z'
val x27 = x25 && x26
val x28 = x24 || x27
val x29 = x21 || x28
val x30 = x18 == '-'
val x31 = x29 || x30
val x32 = x18 == '.'
val x33 = x31 || x32
val x265 = if (x33) {
var x37: java.lang.String = ""
var x38: Boolean = false
val x34 = 0 + 1
var x39: Int = x34
var x41: Int = -1
var x42: Boolean = true
var x43: Int = x34
val x91 = while ({val x44 = x42
val x45 = x41
val x46 = x43
val x47 = x45 != x46
val x48 = x44 && x47
x48}) {
val x50 = x43
x41 = x50
val x52 = x50 >= x7
val x89 = if (x52) {
x42 = false
()
} else {
val x56 = x0(x50)
val x57 = x56 >= '0'
val x58 = x56 <= '9'
val x59 = x57 && x58
val x60 = x56 >= 'a'
val x61 = x56 <= 'z'
val x62 = x60 && x61
val x63 = x56 >= 'A'
val x64 = x56 <= 'Z'
val x65 = x63 && x64
val x66 = x62 || x65
val x67 = x59 || x66
val x68 = x56 == '-'
val x69 = x67 || x68
val x70 = x56 == '.'
val x71 = x69 || x70
val x87 = if (x71) {
val x74 = x37
val x75 = x38
val x76 = x39
val x78 = x74+x56
x37 = x78
x38 = false
val x72 = x50 + 1
x39 = x72
x43 = x72
()
} else {
x42 = false
()
}
x87
}
x89
}
val x92 = x37
val x93 = x38
val x94 = x39
val x99 = if (x93) {
true
} else {
false
}
val x108 = if (x99) {
true
} else {
false
}
val x259 = if (x108) {
x2 = null
x3 = true
x4 = 0
()
} else {
val x100 = if (x93) {
0
} else {
x94
}
val x109 = if (x99) {
x100
} else {
x100
}
val x115 = x109 >= x7
val x257 = if (x115) {
val x107 = if (x99) {
null
} else {
val x98 = if (x93) {
null
} else {
val x96 = new Tuple2CharString(x18,x92)
x96
}
val x103 = x98._1
val x104 = x98._2
val x105 = x103+x104
x105
}
val x123 = new Anon1863173035("",x107,"","","",80)
x2 = x123
x3 = false
x4 = x109
()
} else {
val x129 = x0(x109)
val x130 = x129 == ':'
val x255 = if (x130) {
val x131 = x109 + 1
val x133 = x131 >= x7
val x249 = if (x133) {
val x107 = if (x99) {
null
} else {
val x98 = if (x93) {
null
} else {
val x96 = new Tuple2CharString(x18,x92)
x96
}
val x103 = x98._1
val x104 = x98._2
val x105 = x103+x104
x105
}
val x123 = new Anon1863173035("",x107,"","","",80)
x2 = x123
x3 = false
x4 = x131
()
} else {
val x143 = x0(x131)
val x144 = x143 >= '0'
val x145 = x143 <= '9'
val x146 = x144 && x145
val x247 = if (x146) {
val x149 = x143 - '0'
val x150 = x149.toInt
var x152: Int = x150
var x153: Boolean = false
val x147 = x131 + 1
var x154: Int = x147
var x156: Int = -1
var x157: Boolean = true
var x158: Int = x147
val x199 = while ({val x159 = x157
val x160 = x156
val x161 = x158
val x162 = x160 != x161
val x163 = x159 && x162
x163}) {
val x165 = x158
x156 = x165
val x167 = x165 >= x7
val x197 = if (x167) {
x157 = false
()
} else {
val x172 = x0(x165)
val x173 = x172 >= '0'
val x174 = x172 <= '9'
val x175 = x173 && x174
val x195 = if (x175) {
val x181 = x152
val x182 = x153
val x183 = x154
val x178 = x172 - '0'
val x179 = x178.toInt
val x185 = x181 * 10
val x186 = x185 + x179
x152 = x186
x153 = false
val x176 = x165 + 1
x154 = x176
x158 = x176
()
} else {
x157 = false
()
}
x195
}
x197
}
val x200 = x152
val x201 = x153
val x202 = x154
val x205 = if (x201) {
true
} else {
x201
}
val x214 = if (x205) {
false
} else {
false
}
val x220 = if (x214) {
true
} else {
false
}
val x235 = if (x220) {
null
} else {
val x219 = if (x214) {
null
} else {
val x107 = if (x99) {
null
} else {
val x98 = if (x93) {
null
} else {
val x96 = new Tuple2CharString(x18,x92)
x96
}
val x103 = x98._1
val x104 = x98._2
val x105 = x103+x104
x105
}
val x211 = if (x205) {
val x118 = null.asInstanceOf[Int]
x118
} else {
val x204 = if (x201) {
0
} else {
x200
}
x204
}
val x212 = if (x205) {
false
} else {
true
}
val x213 = new OptionInt(x211,x212)
val x217 = new Tuple2StringOptionInt(x107,x213)
x217
}
val x225 = x219._2
val x226 = x225.defined
val x230 = if (x226) {
""
} else {
""
}
val x224 = x219._1
val x231 = if (x226) {
x224
} else {
x224
}
val x232 = if (x226) {
val x227 = x225.value
x227
} else {
80
}
val x233 = new Anon1863173035(x230,x231,x230,x230,x230,x232)
x233
}
x2 = x235
val x236 = if (x220) {
true
} else {
false
}
x3 = x236
val x221 = if (x214) {
0
} else {
val x206 = if (x201) {
x131
} else {
x202
}
val x215 = if (x205) {
x206
} else {
x206
}
x215
}
val x237 = if (x220) {
x221
} else {
x221
}
x4 = x237
()
} else {
val x107 = if (x99) {
null
} else {
val x98 = if (x93) {
null
} else {
val x96 = new Tuple2CharString(x18,x92)
x96
}
val x103 = x98._1
val x104 = x98._2
val x105 = x103+x104
x105
}
val x123 = new Anon1863173035("",x107,"","","",80)
x2 = x123
x3 = false
x4 = x131
()
}
x247
}
x249
} else {
val x107 = if (x99) {
null
} else {
val x98 = if (x93) {
null
} else {
val x96 = new Tuple2CharString(x18,x92)
x96
}
val x103 = x98._1
val x104 = x98._2
val x105 = x103+x104
x105
}
val x123 = new Anon1863173035("",x107,"","","",80)
x2 = x123
x3 = false
x4 = x109
()
}
x255
}
x257
}
x259
} else {
x2 = null
x3 = true
x4 = 0
()
}
x265
}
val x268 = x2
val x269 = x3
val x270 = x4
val x271 = new ParseResultAnon1863173035(x268,x269,x270)
val x272 = println(x271)
x272
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,90),false,17)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,14)
ParseResultAnon1863173035(null,true,0)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,15)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqFragmentParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: Anon1863173035 = null
var x3: Boolean = true
var x4: Int = -1
var x8: java.lang.String = ""
var x9: Boolean = false
var x10: Int = 0
var x12: Int = -1
var x13: Boolean = true
var x14: Int = 0
val x23 = x0.length
val x49 = while ({val x15 = x13
val x16 = x12
val x17 = x14
val x18 = x16 != x17
val x19 = x15 && x18
x19}) {
val x21 = x14
x12 = x21
val x24 = x21 >= x23
val x47 = if (x24) {
x13 = false
()
} else {
val x28 = x0(x21)
val x29 = x28 == '#'
val x45 = if (x29) {
val x32 = x8
val x33 = x9
val x34 = x10
val x36 = x32+x28
x8 = x36
x9 = false
val x30 = x21 + 1
x10 = x30
x14 = x30
()
} else {
x13 = false
()
}
x45
}
x47
}
val x50 = x8
val x51 = x9
val x52 = x10
val x119 = if (x51) {
x2 = null
x3 = true
x4 = 0
()
} else {
var x61: java.lang.String = ""
var x62: Boolean = false
var x63: Int = x52
var x65: Int = -1
var x66: Boolean = true
var x67: Int = x52
val x103 = while ({val x68 = x66
val x69 = x65
val x70 = x67
val x71 = x69 != x70
val x72 = x68 && x71
x72}) {
val x74 = x67
x65 = x74
val x76 = x74 >= x23
val x101 = if (x76) {
x66 = false
()
} else {
val x80 = x0(x74)
val x81 = x80 > ' '
val x82 = x80 != ''
val x83 = x81 && x82
val x99 = if (x83) {
val x86 = x61
val x87 = x62
val x88 = x63
val x90 = x86+x80
x61 = x90
x62 = false
val x84 = x74 + 1
x63 = x84
x67 = x84
()
} else {
x66 = false
()
}
x99
}
x101
}
val x104 = x61
val x105 = x62
val x106 = x63
val x111 = if (x105) {
null
} else {
val x109 = new Anon1863173035("","","","",x104,80)
x109
}
x2 = x111
val x112 = if (x105) {
true
} else {
false
}
x3 = x112
val x113 = if (x105) {
x106
} else {
x106
}
x4 = x113
()
}
val x120 = x2
val x121 = x3
val x122 = x4
val x123 = new ParseResultAnon1863173035(x120,x121,x122)
val x124 = println(x123)
x124
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,,3adsfd.html,80),false,13)
ParseResultAnon1863173035(Anon1863173035(,,,,3asfd#adf,80),false,11)
ParseResultAnon1863173035(Anon1863173035(,,,,asdf,80),false,4)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class qStringParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: Anon1863173035 = null
var x3: Boolean = true
var x4: Int = -1
var x8: java.lang.String = ""
var x9: Boolean = false
var x10: Int = 0
var x12: Int = -1
var x13: Boolean = true
var x14: Int = 0
val x23 = x0.length
val x49 = while ({val x15 = x13
val x16 = x12
val x17 = x14
val x18 = x16 != x17
val x19 = x15 && x18
x19}) {
val x21 = x14
x12 = x21
val x24 = x21 >= x23
val x47 = if (x24) {
x13 = false
()
} else {
val x28 = x0(x21)
val x29 = x28 == '?'
val x45 = if (x29) {
val x32 = x8
val x33 = x9
val x34 = x10
val x36 = x32+x28
x8 = x36
x9 = false
val x30 = x21 + 1
x10 = x30
x14 = x30
()
} else {
x13 = false
()
}
x45
}
x47
}
val x50 = x8
val x51 = x9
val x52 = x10
val x298 = if (x51) {
x2 = null
x3 = true
x4 = 0
()
} else {
var x62: java.lang.String = ""
var x63: Boolean = false
var x64: Int = x52
var x66: Int = -1
var x67: Boolean = true
var x68: Int = x52
val x106 = while ({val x69 = x67
val x70 = x66
val x71 = x68
val x72 = x70 != x71
val x73 = x69 && x72
x73}) {
val x75 = x68
x66 = x75
val x77 = x75 >= x23
val x104 = if (x77) {
x67 = false
()
} else {
val x81 = x0(x75)
val x82 = x81 > ' '
val x83 = x81 != '#'
val x84 = x82 && x83
val x85 = x81 != ''
val x86 = x84 && x85
val x102 = if (x86) {
val x89 = x62
val x90 = x63
val x91 = x64
val x93 = x89+x81
x62 = x93
x63 = false
val x87 = x75 + 1
x64 = x87
x68 = x87
()
} else {
x67 = false
()
}
x102
}
x104
}
val x107 = x62
val x108 = x63
val x109 = x64
val x296 = if (x108) {
x2 = null
x3 = true
x4 = 0
()
} else {
val x115 = x109 >= x23
val x294 = if (x115) {
val x123 = new Anon1863173035("","","",x107,"",80)
x2 = x123
x3 = false
x4 = x109
()
} else {
val x129 = x0(x109)
val x130 = x129 == '#'
val x292 = if (x130) {
var x134: java.lang.String = ""
var x135: Boolean = false
val x131 = x109 + 1
var x136: Int = x131
var x138: Int = -1
var x139: Boolean = true
var x140: Int = x131
val x174 = while ({val x141 = x139
val x142 = x138
val x143 = x140
val x144 = x142 != x143
val x145 = x141 && x144
x145}) {
val x147 = x140
x138 = x147
val x149 = x147 >= x23
val x172 = if (x149) {
x139 = false
()
} else {
val x153 = x0(x147)
val x154 = x153 == '#'
val x170 = if (x154) {
val x157 = x134
val x158 = x135
val x159 = x136
val x161 = x157+x153
x134 = x161
x135 = false
val x155 = x147 + 1
x136 = x155
x140 = x155
()
} else {
x139 = false
()
}
x170
}
x172
}
val x175 = x134
val x176 = x135
val x177 = x136
val x286 = if (x176) {
val x123 = new Anon1863173035("","","",x107,"",80)
x2 = x123
x3 = false
x4 = x131
()
} else {
var x189: java.lang.String = ""
var x190: Boolean = false
var x191: Int = x177
var x193: Int = -1
var x194: Boolean = true
var x195: Int = x177
val x231 = while ({val x196 = x194
val x197 = x193
val x198 = x195
val x199 = x197 != x198
val x200 = x196 && x199
x200}) {
val x202 = x195
x193 = x202
val x204 = x202 >= x23
val x229 = if (x204) {
x194 = false
()
} else {
val x208 = x0(x202)
val x209 = x208 > ' '
val x210 = x208 != ''
val x211 = x209 && x210
val x227 = if (x211) {
val x214 = x189
val x215 = x190
val x216 = x191
val x218 = x214+x208
x189 = x218
x190 = false
val x212 = x202 + 1
x191 = x212
x195 = x212
()
} else {
x194 = false
()
}
x227
}
x229
}
val x232 = x189
val x233 = x190
val x234 = x191
val x240 = if (x233) {
true
} else {
false
}
val x249 = if (x240) {
false
} else {
false
}
val x255 = if (x249) {
true
} else {
false
}
val x278 = if (x255) {
null
} else {
val x254 = if (x249) {
null
} else {
val x246 = if (x240) {
val x118 = null.asInstanceOf[Anon1863173035]
x118
} else {
val x239 = if (x233) {
null
} else {
val x237 = new Anon1863173035("","","","",x232,80)
x237
}
x239
}
val x247 = if (x240) {
false
} else {
true
}
val x248 = new OptionAnon1863173035(x246,x247)
val x252 = new Tuple2StringOptionAnon1863173035(x107,x248)
x252
}
val x260 = x254._2
val x261 = x260.defined
val x270 = if (x261) {
val x262 = x260.value
val x263 = x262.schema
x263
} else {
""
}
val x271 = if (x261) {
val x262 = x260.value
val x264 = x262.hostName
x264
} else {
""
}
val x272 = if (x261) {
val x262 = x260.value
val x265 = x262.path
x265
} else {
""
}
val x259 = x254._1
val x273 = if (x261) {
x259
} else {
x259
}
val x274 = if (x261) {
val x262 = x260.value
val x266 = x262.fragment
x266
} else {
""
}
val x275 = if (x261) {
val x262 = x260.value
val x267 = x262.port
x267
} else {
80
}
val x276 = new Anon1863173035(x270,x271,x272,x273,x274,x275)
x276
}
x2 = x278
val x279 = if (x255) {
true
} else {
false
}
x3 = x279
val x256 = if (x249) {
0
} else {
val x241 = if (x233) {
x234
} else {
x234
}
val x250 = if (x240) {
x241
} else {
x241
}
x250
}
val x280 = if (x255) {
x256
} else {
x256
}
x4 = x280
()
}
x286
} else {
val x123 = new Anon1863173035("","","",x107,"",80)
x2 = x123
x3 = false
x4 = x109
()
}
x292
}
x294
}
x296
}
val x299 = x2
val x300 = x3
val x301 = x4
val x302 = new ParseResultAnon1863173035(x299,x300,x301)
val x303 = println(x302)
x303
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,asdf,80),false,17)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asd,,80),false,3)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqPathParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: Anon1863173035 = null
var x3: Boolean = true
var x4: Int = -1
var x482: java.lang.String = ""
var x483: Boolean = false
var x484: Int = 0
var x486: Int = -1
var x487: Boolean = true
var x488: Int = 0
val x19 = x0.length
val x528 = while ({val x489 = x487
val x490 = x486
val x491 = x488
val x492 = x490 != x491
val x493 = x489 && x492
x493}) {
val x495 = x488
x486 = x495
val x497 = x495 >= x19
val x526 = if (x497) {
x487 = false
()
} else {
val x501 = x0(x495)
val x502 = x501 > ' '
val x503 = x501 != '#'
val x504 = x502 && x503
val x505 = x501 != '?'
val x506 = x504 && x505
val x507 = x501 != ''
val x508 = x506 && x507
val x524 = if (x508) {
val x511 = x482
val x512 = x483
val x513 = x484
val x515 = x511+x501
x482 = x515
x483 = false
val x509 = x495 + 1
x484 = x509
x488 = x509
()
} else {
x487 = false
()
}
x524
}
x526
}
val x529 = x482
val x530 = x483
val x531 = x484
val x949 = if (x530) {
x2 = null
x3 = true
x4 = 0
()
} else {
val x140 = null.asInstanceOf[Anon1863173035]
val x334 = {x13: (Int) => 
var x15: Anon1863173035 = null
var x16: Boolean = true
var x17: Int = x13
val x20 = x13 >= x19
val x328 = if (x20) {
x15 = null
x16 = true
x17 = x13
()
} else {
val x26 = x0(x13)
val x27 = x26 == '?'
val x326 = if (x27) {
var x31: java.lang.String = ""
var x32: Boolean = false
val x28 = x13 + 1
var x33: Int = x28
var x35: Int = -1
var x36: Boolean = true
var x37: Int = x28
val x71 = while ({val x38 = x36
val x39 = x35
val x40 = x37
val x41 = x39 != x40
val x42 = x38 && x41
x42}) {
val x44 = x37
x35 = x44
val x46 = x44 >= x19
val x69 = if (x46) {
x36 = false
()
} else {
val x50 = x0(x44)
val x51 = x50 == '?'
val x67 = if (x51) {
val x54 = x31
val x55 = x32
val x56 = x33
val x58 = x54+x50
x31 = x58
x32 = false
val x52 = x44 + 1
x33 = x52
x37 = x52
()
} else {
x36 = false
()
}
x67
}
x69
}
val x72 = x31
val x73 = x32
val x74 = x33
val x320 = if (x73) {
x15 = null
x16 = true
x17 = x28
()
} else {
var x84: java.lang.String = ""
var x85: Boolean = false
var x86: Int = x74
var x88: Int = -1
var x89: Boolean = true
var x90: Int = x74
val x128 = while ({val x91 = x89
val x92 = x88
val x93 = x90
val x94 = x92 != x93
val x95 = x91 && x94
x95}) {
val x97 = x90
x88 = x97
val x99 = x97 >= x19
val x126 = if (x99) {
x89 = false
()
} else {
val x103 = x0(x97)
val x104 = x103 > ' '
val x105 = x103 != '#'
val x106 = x104 && x105
val x107 = x103 != ''
val x108 = x106 && x107
val x124 = if (x108) {
val x111 = x84
val x112 = x85
val x113 = x86
val x115 = x111+x103
x84 = x115
x85 = false
val x109 = x97 + 1
x86 = x109
x90 = x109
()
} else {
x89 = false
()
}
x124
}
x126
}
val x129 = x84
val x130 = x85
val x131 = x86
val x318 = if (x130) {
x15 = null
x16 = true
x17 = x28
()
} else {
val x137 = x131 >= x19
val x316 = if (x137) {
val x145 = new Anon1863173035("","","",x129,"",80)
x15 = x145
x16 = false
x17 = x131
()
} else {
val x151 = x0(x131)
val x152 = x151 == '#'
val x314 = if (x152) {
var x156: java.lang.String = ""
var x157: Boolean = false
val x153 = x131 + 1
var x158: Int = x153
var x160: Int = -1
var x161: Boolean = true
var x162: Int = x153
val x196 = while ({val x163 = x161
val x164 = x160
val x165 = x162
val x166 = x164 != x165
val x167 = x163 && x166
x167}) {
val x169 = x162
x160 = x169
val x171 = x169 >= x19
val x194 = if (x171) {
x161 = false
()
} else {
val x175 = x0(x169)
val x176 = x175 == '#'
val x192 = if (x176) {
val x179 = x156
val x180 = x157
val x181 = x158
val x183 = x179+x175
x156 = x183
x157 = false
val x177 = x169 + 1
x158 = x177
x162 = x177
()
} else {
x161 = false
()
}
x192
}
x194
}
val x197 = x156
val x198 = x157
val x199 = x158
val x308 = if (x198) {
val x145 = new Anon1863173035("","","",x129,"",80)
x15 = x145
x16 = false
x17 = x153
()
} else {
var x211: java.lang.String = ""
var x212: Boolean = false
var x213: Int = x199
var x215: Int = -1
var x216: Boolean = true
var x217: Int = x199
val x253 = while ({val x218 = x216
val x219 = x215
val x220 = x217
val x221 = x219 != x220
val x222 = x218 && x221
x222}) {
val x224 = x217
x215 = x224
val x226 = x224 >= x19
val x251 = if (x226) {
x216 = false
()
} else {
val x230 = x0(x224)
val x231 = x230 > ' '
val x232 = x230 != ''
val x233 = x231 && x232
val x249 = if (x233) {
val x236 = x211
val x237 = x212
val x238 = x213
val x240 = x236+x230
x211 = x240
x212 = false
val x234 = x224 + 1
x213 = x234
x217 = x234
()
} else {
x216 = false
()
}
x249
}
x251
}
val x254 = x211
val x255 = x212
val x256 = x213
val x262 = if (x255) {
true
} else {
false
}
val x271 = if (x262) {
false
} else {
false
}
val x277 = if (x271) {
true
} else {
false
}
val x300 = if (x277) {
null
} else {
val x276 = if (x271) {
null
} else {
val x268 = if (x262) {
x140
} else {
val x261 = if (x255) {
null
} else {
val x259 = new Anon1863173035("","","","",x254,80)
x259
}
x261
}
val x269 = if (x262) {
false
} else {
true
}
val x270 = new OptionAnon1863173035(x268,x269)
val x274 = new Tuple2StringOptionAnon1863173035(x129,x270)
x274
}
val x282 = x276._2
val x283 = x282.defined
val x292 = if (x283) {
val x284 = x282.value
val x285 = x284.schema
x285
} else {
""
}
val x293 = if (x283) {
val x284 = x282.value
val x286 = x284.hostName
x286
} else {
""
}
val x294 = if (x283) {
val x284 = x282.value
val x287 = x284.path
x287
} else {
""
}
val x281 = x276._1
val x295 = if (x283) {
x281
} else {
x281
}
val x296 = if (x283) {
val x284 = x282.value
val x288 = x284.fragment
x288
} else {
""
}
val x297 = if (x283) {
val x284 = x282.value
val x289 = x284.port
x289
} else {
80
}
val x298 = new Anon1863173035(x292,x293,x294,x295,x296,x297)
x298
}
x15 = x300
val x301 = if (x277) {
true
} else {
false
}
x16 = x301
val x278 = if (x271) {
x28
} else {
val x263 = if (x255) {
x256
} else {
x256
}
val x272 = if (x262) {
x263
} else {
x263
}
x272
}
val x302 = if (x277) {
x278
} else {
x278
}
x17 = x302
()
}
x308
} else {
val x145 = new Anon1863173035("","","",x129,"",80)
x15 = x145
x16 = false
x17 = x131
()
}
x314
}
x316
}
x318
}
x320
} else {
x15 = null
x16 = true
x17 = x13
()
}
x326
}
val x329 = x15
val x330 = x16
val x331 = x17
val x332 = new ParseResultAnon1863173035(x329,x330,x331)
x332: ParseResultAnon1863173035
}
val x480 = {x7: (Int) => 
var x9: Anon1863173035 = null
var x10: Boolean = true
var x11: Int = x7
val x335 = x334(x7)
val x336 = x335.empty
val x474 = if (x336) {
val x337 = x7 >= x19
val x466 = if (x337) {
x9 = null
x10 = true
x11 = x7
()
} else {
val x343 = x0(x7)
val x344 = x343 == '#'
val x464 = if (x344) {
var x348: java.lang.String = ""
var x349: Boolean = false
val x345 = x7 + 1
var x350: Int = x345
var x352: Int = -1
var x353: Boolean = true
var x354: Int = x345
val x388 = while ({val x355 = x353
val x356 = x352
val x357 = x354
val x358 = x356 != x357
val x359 = x355 && x358
x359}) {
val x361 = x354
x352 = x361
val x363 = x361 >= x19
val x386 = if (x363) {
x353 = false
()
} else {
val x367 = x0(x361)
val x368 = x367 == '#'
val x384 = if (x368) {
val x371 = x348
val x372 = x349
val x373 = x350
val x375 = x371+x367
x348 = x375
x349 = false
val x369 = x361 + 1
x350 = x369
x354 = x369
()
} else {
x353 = false
()
}
x384
}
x386
}
val x389 = x348
val x390 = x349
val x391 = x350
val x458 = if (x390) {
x9 = null
x10 = true
x11 = x345
()
} else {
var x400: java.lang.String = ""
var x401: Boolean = false
var x402: Int = x391
var x404: Int = -1
var x405: Boolean = true
var x406: Int = x391
val x442 = while ({val x407 = x405
val x408 = x404
val x409 = x406
val x410 = x408 != x409
val x411 = x407 && x410
x411}) {
val x413 = x406
x404 = x413
val x415 = x413 >= x19
val x440 = if (x415) {
x405 = false
()
} else {
val x419 = x0(x413)
val x420 = x419 > ' '
val x421 = x419 != ''
val x422 = x420 && x421
val x438 = if (x422) {
val x425 = x400
val x426 = x401
val x427 = x402
val x429 = x425+x419
x400 = x429
x401 = false
val x423 = x413 + 1
x402 = x423
x406 = x423
()
} else {
x405 = false
()
}
x438
}
x440
}
val x443 = x400
val x444 = x401
val x445 = x402
val x450 = if (x444) {
null
} else {
val x448 = new Anon1863173035("","","","",x443,80)
x448
}
x9 = x450
val x451 = if (x444) {
true
} else {
false
}
x10 = x451
val x452 = if (x444) {
x445
} else {
x445
}
x11 = x452
()
}
x458
} else {
x9 = null
x10 = true
x11 = x7
()
}
x464
}
x466
} else {
val x468 = x335.res
x9 = x468
x10 = x336
val x471 = x335.next
x11 = x471
()
}
val x475 = x9
val x476 = x10
val x477 = x11
val x478 = new ParseResultAnon1863173035(x475,x476,x477)
x478: ParseResultAnon1863173035
}
val x539 = x480(x531)
val x540 = x539.empty
val x549 = if (x540) {
false
} else {
false
}
val x555 = if (x549) {
true
} else {
false
}
val x947 = if (x555) {
x2 = null
x3 = true
val x556 = if (x549) {
0
} else {
val x541 = x539.next
val x550 = if (x540) {
x541
} else {
x541
}
x550
}
x4 = x556
()
} else {
val x556 = if (x549) {
0
} else {
val x541 = x539.next
val x550 = if (x540) {
x541
} else {
x541
}
x550
}
val x563 = x556 >= x19
val x945 = if (x563) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
} else {
val x596 = x0(x556)
val x597 = x596 == 'H'
val x943 = if (x597) {
val x598 = x556 + 1
val x600 = x598 >= x19
val x937 = if (x600) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
} else {
val x608 = x0(x598)
val x609 = x608 == 'T'
val x935 = if (x609) {
val x610 = x598 + 1
val x612 = x610 >= x19
val x929 = if (x612) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
} else {
val x620 = x0(x610)
val x621 = x620 == 'T'
val x927 = if (x621) {
val x622 = x610 + 1
val x624 = x622 >= x19
val x921 = if (x624) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
} else {
val x632 = x0(x622)
val x633 = x632 == 'P'
val x919 = if (x633) {
val x634 = x622 + 1
val x636 = x634 >= x19
val x913 = if (x636) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
} else {
val x644 = x0(x634)
val x645 = x644 == '/'
val x911 = if (x645) {
val x646 = x634 + 1
val x669 = x646 >= x19
val x905 = if (x669) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
} else {
val x680 = x0(x646)
val x681 = x680 >= '0'
val x682 = x680 <= '9'
val x683 = x681 && x682
val x903 = if (x683) {
val x686 = x680 - '0'
val x687 = x686.toInt
var x689: Int = x687
var x690: Boolean = false
val x684 = x646 + 1
var x691: Int = x684
var x693: Int = -1
var x694: Boolean = true
var x695: Int = x684
val x736 = while ({val x696 = x694
val x697 = x693
val x698 = x695
val x699 = x697 != x698
val x700 = x696 && x699
x700}) {
val x702 = x695
x693 = x702
val x704 = x702 >= x19
val x734 = if (x704) {
x694 = false
()
} else {
val x709 = x0(x702)
val x710 = x709 >= '0'
val x711 = x709 <= '9'
val x712 = x710 && x711
val x732 = if (x712) {
val x718 = x689
val x719 = x690
val x720 = x691
val x715 = x709 - '0'
val x716 = x715.toInt
val x722 = x718 * 10
val x723 = x722 + x716
x689 = x723
x690 = false
val x713 = x702 + 1
x691 = x713
x695 = x713
()
} else {
x694 = false
()
}
x732
}
x734
}
val x737 = x689
val x738 = x690
val x739 = x691
val x742 = if (x738) {
true
} else {
x738
}
val x897 = if (x742) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
} else {
val x743 = if (x738) {
x646
} else {
x739
}
val x749 = x743 >= x19
val x895 = if (x749) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
} else {
val x756 = x0(x743)
val x757 = x756 == '.'
val x893 = if (x757) {
val x758 = x743 + 1
val x760 = x758 >= x19
val x887 = if (x760) {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
} else {
val x767 = x0(x758)
val x768 = x767 >= '0'
val x769 = x767 <= '9'
val x770 = x768 && x769
val x885 = if (x770) {
val x773 = x767 - '0'
val x774 = x773.toInt
var x776: Int = x774
var x777: Boolean = false
val x771 = x758 + 1
var x778: Int = x771
var x780: Int = -1
var x781: Boolean = true
var x782: Int = x771
val x823 = while ({val x783 = x781
val x784 = x780
val x785 = x782
val x786 = x784 != x785
val x787 = x783 && x786
x787}) {
val x789 = x782
x780 = x789
val x791 = x789 >= x19
val x821 = if (x791) {
x781 = false
()
} else {
val x796 = x0(x789)
val x797 = x796 >= '0'
val x798 = x796 <= '9'
val x799 = x797 && x798
val x819 = if (x799) {
val x805 = x776
val x806 = x777
val x807 = x778
val x802 = x796 - '0'
val x803 = x802.toInt
val x809 = x805 * 10
val x810 = x809 + x803
x776 = x810
x777 = false
val x800 = x789 + 1
x778 = x800
x782 = x800
()
} else {
x781 = false
()
}
x819
}
x821
}
val x824 = x776
val x825 = x777
val x826 = x778
val x829 = if (x825) {
true
} else {
x825
}
val x835 = if (x829) {
true
} else {
false
}
val x844 = if (x835) {
false
} else {
false
}
val x849 = if (x844) {
true
} else {
false
}
val x873 = if (x849) {
null
} else {
val x848 = if (x844) {
null
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
x554
}
val x854 = x848._2
val x855 = x854.defined
val x865 = if (x855) {
val x856 = x854.value
val x858 = x856.schema
x858
} else {
""
}
val x866 = if (x855) {
val x856 = x854.value
val x859 = x856.hostName
x859
} else {
""
}
val x853 = x848._1
val x857 = "/"+x853
val x867 = if (x855) {
x857
} else {
x857
}
val x868 = if (x855) {
val x856 = x854.value
val x860 = x856.queryString
x860
} else {
""
}
val x869 = if (x855) {
val x856 = x854.value
val x861 = x856.fragment
x861
} else {
""
}
val x870 = if (x855) {
val x856 = x854.value
val x862 = x856.port
x862
} else {
80
}
val x871 = new Anon1863173035(x865,x866,x867,x868,x869,x870)
x871
}
x2 = x873
val x874 = if (x849) {
true
} else {
false
}
x3 = x874
val x850 = if (x844) {
0
} else {
val x836 = if (x829) {
x646
} else {
val x830 = if (x825) {
x758
} else {
x826
}
x830
}
val x845 = if (x835) {
x836
} else {
x836
}
x845
}
val x875 = if (x849) {
x850
} else {
x850
}
x4 = x875
()
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
}
x885
}
x887
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
}
x893
}
x895
}
x897
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x646
()
}
x903
}
x905
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
}
x911
}
x913
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
}
x919
}
x921
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
}
x927
}
x929
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
}
x935
}
x937
} else {
val x554 = if (x549) {
null
} else {
val x546 = if (x540) {
x140
} else {
val x543 = x539.res
x543
}
val x547 = if (x540) {
false
} else {
true
}
val x548 = new OptionAnon1863173035(x546,x547)
val x552 = new Tuple2StringOptionAnon1863173035(x529,x548)
x552
}
val x573 = x554._2
val x574 = x573.defined
val x584 = if (x574) {
val x575 = x573.value
val x577 = x575.schema
x577
} else {
""
}
val x585 = if (x574) {
val x575 = x573.value
val x578 = x575.hostName
x578
} else {
""
}
val x572 = x554._1
val x576 = "/"+x572
val x586 = if (x574) {
x576
} else {
x576
}
val x587 = if (x574) {
val x575 = x573.value
val x579 = x575.queryString
x579
} else {
""
}
val x588 = if (x574) {
val x575 = x573.value
val x580 = x575.fragment
x580
} else {
""
}
val x589 = if (x574) {
val x575 = x573.value
val x581 = x575.port
x581
} else {
80
}
val x590 = new Anon1863173035(x584,x585,x586,x587,x588,x589)
x2 = x590
x3 = false
x4 = x556
()
}
x943
}
x945
}
x947
}
val x950 = x2
val x951 = x3
val x952 = x4
val x953 = new ParseResultAnon1863173035(x950,x951,x952)
val x954 = println(x953)
x954
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,/,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,/,,asdfadsf,80),false,10)
ParseResultAnon1863173035(Anon1863173035(,,/adsfasd.html,asdf,adsf,80),false,24)
ParseResultAnon1863173035(Anon1863173035(,,/asd,,,80),false,3)
nVars=1000
nVars=2000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class urlParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: Anon1863173035 = null
var x3: Boolean = true
var x4: Int = -1
val x19 = x0.length
val x200 = {x13: (Int) => 
var x15: java.lang.String = null
var x16: Boolean = true
var x17: Int = x13
val x20 = x13 >= x19
val x194 = if (x20) {
x15 = null
x16 = true
x17 = x13
()
} else {
val x27 = x0(x13)
val x28 = x27 >= 'a'
val x29 = x27 <= 'z'
val x30 = x28 && x29
val x31 = x27 >= 'A'
val x32 = x27 <= 'Z'
val x33 = x31 && x32
val x34 = x30 || x33
val x192 = if (x34) {
var x38: java.lang.String = ""
var x39: Boolean = false
val x35 = x13 + 1
var x40: Int = x35
var x42: Int = -1
var x43: Boolean = true
var x44: Int = x35
val x84 = while ({val x45 = x43
val x46 = x42
val x47 = x44
val x48 = x46 != x47
val x49 = x45 && x48
x49}) {
val x51 = x44
x42 = x51
val x53 = x51 >= x19
val x82 = if (x53) {
x43 = false
()
} else {
val x57 = x0(x51)
val x58 = x57 >= 'a'
val x59 = x57 <= 'z'
val x60 = x58 && x59
val x61 = x57 >= 'A'
val x62 = x57 <= 'Z'
val x63 = x61 && x62
val x64 = x60 || x63
val x80 = if (x64) {
val x67 = x38
val x68 = x39
val x69 = x40
val x71 = x67+x57
x38 = x71
x39 = false
val x65 = x51 + 1
x40 = x65
x44 = x65
()
} else {
x43 = false
()
}
x80
}
x82
}
val x85 = x38
val x86 = x39
val x87 = x40
val x92 = if (x86) {
true
} else {
false
}
val x101 = if (x92) {
true
} else {
false
}
val x186 = if (x101) {
val x100 = if (x92) {
null
} else {
val x91 = if (x86) {
null
} else {
val x89 = new Tuple2CharString(x27,x85)
x89
}
val x96 = x91._1
val x97 = x91._2
val x98 = x96+x97
x98
}
x15 = x100
x16 = x101
val x93 = if (x86) {
x13
} else {
x87
}
val x102 = if (x92) {
x93
} else {
x93
}
x17 = x102
()
} else {
val x93 = if (x86) {
x13
} else {
x87
}
val x102 = if (x92) {
x93
} else {
x93
}
val x108 = x102 >= x19
val x184 = if (x108) {
x15 = null
x16 = true
x17 = x13
()
} else {
val x116 = x0(x102)
val x117 = x116 == ':'
val x182 = if (x117) {
val x118 = x102 + 1
val x120 = x118 >= x19
val x176 = if (x120) {
x15 = null
x16 = true
x17 = x13
()
} else {
val x128 = x0(x118)
val x129 = x128 == '/'
val x174 = if (x129) {
val x130 = x118 + 1
val x132 = x130 >= x19
val x168 = if (x132) {
x15 = null
x16 = true
x17 = x13
()
} else {
val x140 = x0(x130)
val x141 = x140 == '/'
val x166 = if (x141) {
val x100 = if (x92) {
null
} else {
val x91 = if (x86) {
null
} else {
val x89 = new Tuple2CharString(x27,x85)
x89
}
val x96 = x91._1
val x97 = x91._2
val x98 = x96+x97
x98
}
x15 = x100
x16 = false
val x142 = x130 + 1
x17 = x142
()
} else {
x15 = null
x16 = true
x17 = x13
()
}
x166
}
x168
} else {
x15 = null
x16 = true
x17 = x13
()
}
x174
}
x176
} else {
x15 = null
x16 = true
x17 = x13
()
}
x182
}
x184
}
x186
} else {
x15 = null
x16 = true
x17 = x13
()
}
x192
}
val x195 = x15
val x196 = x16
val x197 = x17
val x198 = new ParseResultString(x195,x196,x197)
x198: ParseResultString
}
val x243 = {x7: (Int) => 
var x9: java.lang.String = null
var x10: Boolean = true
var x11: Int = x7
val x201 = x200(x7)
val x202 = x201.empty
val x237 = if (x202) {
val x203 = x7 >= x19
val x229 = if (x203) {
x9 = null
x10 = true
x11 = x7
()
} else {
val x209 = x0(x7)
val x210 = x209 >= '0'
val x211 = x209 <= '9'
val x212 = x210 && x211
val x213 = x209 == '.'
val x214 = x212 || x213
val x227 = if (x214) {
val x217 = ""+x209
x9 = x217
x10 = false
val x215 = x7 + 1
x11 = x215
()
} else {
x9 = null
x10 = true
x11 = x7
()
}
x227
}
x229
} else {
val x231 = x201.res
x9 = x231
x10 = x202
val x234 = x201.next
x11 = x234
()
}
val x238 = x9
val x239 = x10
val x240 = x11
val x241 = new ParseResultString(x238,x239,x240)
x241: ParseResultString
}
val x1545 = x243(0)
val x1546 = x1545.empty
val x1995 = if (x1546) {
x2 = null
x3 = true
x4 = 0
()
} else {
val x1554 = x1545.next
val x1555 = x1554 >= x19
val x1993 = if (x1555) {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1565 = x1544(x1554)
val x1566 = x1565.empty
val x1572 = if (x1566) {
true
} else {
false
}
val x1598 = if (x1572) {
null
} else {
val x1571 = if (x1566) {
null
} else {
val x399 = new OptionAnon1863173035(x398,false)
val x1562 = x1545.res
val x1563 = new Tuple2StringOptionAnon1863173035(x1562,x399)
val x1567 = x1565.res
val x1568 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1563,x1567)
x1568
}
val x1576 = x1571._1
val x1578 = x1576._1
val x1579 = x1576._2
val x1580 = x1579.defined
val x1590 = if (x1580) {
x1578
} else {
x1578
}
val x1577 = x1571._2
val x1591 = if (x1580) {
val x1581 = x1579.value
val x1582 = x1581.hostName
x1582
} else {
val x1588 = x1577.hostName
x1588
}
val x1583 = x1577.path
val x1592 = if (x1580) {
x1583
} else {
x1583
}
val x1584 = x1577.queryString
val x1593 = if (x1580) {
x1584
} else {
x1584
}
val x1585 = x1577.fragment
val x1594 = if (x1580) {
x1585
} else {
x1585
}
val x1586 = x1577.port
val x1595 = if (x1580) {
x1586
} else {
x1586
}
val x1596 = new Anon1863173035(x1590,x1591,x1592,x1593,x1594,x1595)
x1596
}
x2 = x1598
val x1599 = if (x1572) {
true
} else {
false
}
x3 = x1599
val x1573 = if (x1566) {
0
} else {
val x1569 = x1565.next
x1569
}
val x1600 = if (x1572) {
x1573
} else {
x1573
}
x4 = x1600
()
} else {
val x1606 = x0(x1554)
val x1607 = x1606 >= '0'
val x1608 = x1606 <= '9'
val x1609 = x1607 && x1608
val x1610 = x1606 >= 'a'
val x1611 = x1606 <= 'z'
val x1612 = x1610 && x1611
val x1613 = x1606 >= 'A'
val x1614 = x1606 <= 'Z'
val x1615 = x1613 && x1614
val x1616 = x1612 || x1615
val x1617 = x1609 || x1616
val x1618 = x1606 == '-'
val x1619 = x1617 || x1618
val x1620 = x1606 == '.'
val x1621 = x1619 || x1620
val x1991 = if (x1621) {
var x1625: java.lang.String = ""
var x1626: Boolean = false
val x1622 = x1554 + 1
var x1627: Int = x1622
var x1629: Int = -1
var x1630: Boolean = true
var x1631: Int = x1622
val x1679 = while ({val x1632 = x1630
val x1633 = x1629
val x1634 = x1631
val x1635 = x1633 != x1634
val x1636 = x1632 && x1635
x1636}) {
val x1638 = x1631
x1629 = x1638
val x1640 = x1638 >= x19
val x1677 = if (x1640) {
x1630 = false
()
} else {
val x1644 = x0(x1638)
val x1645 = x1644 >= '0'
val x1646 = x1644 <= '9'
val x1647 = x1645 && x1646
val x1648 = x1644 >= 'a'
val x1649 = x1644 <= 'z'
val x1650 = x1648 && x1649
val x1651 = x1644 >= 'A'
val x1652 = x1644 <= 'Z'
val x1653 = x1651 && x1652
val x1654 = x1650 || x1653
val x1655 = x1647 || x1654
val x1656 = x1644 == '-'
val x1657 = x1655 || x1656
val x1658 = x1644 == '.'
val x1659 = x1657 || x1658
val x1675 = if (x1659) {
val x1662 = x1625
val x1663 = x1626
val x1664 = x1627
val x1666 = x1662+x1644
x1625 = x1666
x1626 = false
val x1660 = x1638 + 1
x1627 = x1660
x1631 = x1660
()
} else {
x1630 = false
()
}
x1675
}
x1677
}
val x1680 = x1625
val x1681 = x1626
val x1682 = x1627
val x1687 = if (x1681) {
true
} else {
false
}
val x1696 = if (x1687) {
true
} else {
false
}
val x1985 = if (x1696) {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1565 = x1544(x1554)
val x1566 = x1565.empty
val x1572 = if (x1566) {
true
} else {
false
}
val x1598 = if (x1572) {
null
} else {
val x1571 = if (x1566) {
null
} else {
val x399 = new OptionAnon1863173035(x398,false)
val x1562 = x1545.res
val x1563 = new Tuple2StringOptionAnon1863173035(x1562,x399)
val x1567 = x1565.res
val x1568 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1563,x1567)
x1568
}
val x1576 = x1571._1
val x1578 = x1576._1
val x1579 = x1576._2
val x1580 = x1579.defined
val x1590 = if (x1580) {
x1578
} else {
x1578
}
val x1577 = x1571._2
val x1591 = if (x1580) {
val x1581 = x1579.value
val x1582 = x1581.hostName
x1582
} else {
val x1588 = x1577.hostName
x1588
}
val x1583 = x1577.path
val x1592 = if (x1580) {
x1583
} else {
x1583
}
val x1584 = x1577.queryString
val x1593 = if (x1580) {
x1584
} else {
x1584
}
val x1585 = x1577.fragment
val x1594 = if (x1580) {
x1585
} else {
x1585
}
val x1586 = x1577.port
val x1595 = if (x1580) {
x1586
} else {
x1586
}
val x1596 = new Anon1863173035(x1590,x1591,x1592,x1593,x1594,x1595)
x1596
}
x2 = x1598
val x1599 = if (x1572) {
true
} else {
false
}
x3 = x1599
val x1573 = if (x1566) {
0
} else {
val x1569 = x1565.next
x1569
}
val x1600 = if (x1572) {
x1573
} else {
x1573
}
x4 = x1600
()
} else {
val x1688 = if (x1681) {
x1554
} else {
x1682
}
val x1697 = if (x1687) {
x1688
} else {
x1688
}
val x1703 = x1697 >= x19
val x1983 = if (x1703) {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1717 = x1544(x1697)
val x1718 = x1717.empty
val x1724 = if (x1718) {
true
} else {
false
}
val x1750 = if (x1724) {
null
} else {
val x1723 = if (x1718) {
null
} else {
val x1562 = x1545.res
val x1695 = if (x1687) {
null
} else {
val x1686 = if (x1681) {
null
} else {
val x1684 = new Tuple2CharString(x1606,x1680)
x1684
}
val x1691 = x1686._1
val x1692 = x1686._2
val x1693 = x1691+x1692
x1693
}
val x1711 = new Anon1863173035("",x1695,"","","",80)
val x1713 = new OptionAnon1863173035(x1711,true)
val x1715 = new Tuple2StringOptionAnon1863173035(x1562,x1713)
val x1719 = x1717.res
val x1720 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1715,x1719)
x1720
}
val x1728 = x1723._1
val x1730 = x1728._1
val x1731 = x1728._2
val x1732 = x1731.defined
val x1742 = if (x1732) {
x1730
} else {
x1730
}
val x1729 = x1723._2
val x1743 = if (x1732) {
val x1733 = x1731.value
val x1734 = x1733.hostName
x1734
} else {
val x1740 = x1729.hostName
x1740
}
val x1735 = x1729.path
val x1744 = if (x1732) {
x1735
} else {
x1735
}
val x1736 = x1729.queryString
val x1745 = if (x1732) {
x1736
} else {
x1736
}
val x1737 = x1729.fragment
val x1746 = if (x1732) {
x1737
} else {
x1737
}
val x1738 = x1729.port
val x1747 = if (x1732) {
x1738
} else {
x1738
}
val x1748 = new Anon1863173035(x1742,x1743,x1744,x1745,x1746,x1747)
x1748
}
x2 = x1750
val x1751 = if (x1724) {
true
} else {
false
}
x3 = x1751
val x1725 = if (x1718) {
0
} else {
val x1721 = x1717.next
x1721
}
val x1752 = if (x1724) {
x1725
} else {
x1725
}
x4 = x1752
()
} else {
val x1758 = x0(x1697)
val x1759 = x1758 == ':'
val x1981 = if (x1759) {
val x1760 = x1697 + 1
val x1762 = x1760 >= x19
val x1975 = if (x1762) {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1770 = x1544(x1760)
val x1771 = x1770.empty
val x1777 = if (x1771) {
true
} else {
false
}
val x1803 = if (x1777) {
null
} else {
val x1776 = if (x1771) {
null
} else {
val x1562 = x1545.res
val x1695 = if (x1687) {
null
} else {
val x1686 = if (x1681) {
null
} else {
val x1684 = new Tuple2CharString(x1606,x1680)
x1684
}
val x1691 = x1686._1
val x1692 = x1686._2
val x1693 = x1691+x1692
x1693
}
val x1711 = new Anon1863173035("",x1695,"","","",80)
val x1713 = new OptionAnon1863173035(x1711,true)
val x1715 = new Tuple2StringOptionAnon1863173035(x1562,x1713)
val x1772 = x1770.res
val x1773 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1715,x1772)
x1773
}
val x1781 = x1776._1
val x1783 = x1781._1
val x1784 = x1781._2
val x1785 = x1784.defined
val x1795 = if (x1785) {
x1783
} else {
x1783
}
val x1782 = x1776._2
val x1796 = if (x1785) {
val x1786 = x1784.value
val x1787 = x1786.hostName
x1787
} else {
val x1793 = x1782.hostName
x1793
}
val x1788 = x1782.path
val x1797 = if (x1785) {
x1788
} else {
x1788
}
val x1789 = x1782.queryString
val x1798 = if (x1785) {
x1789
} else {
x1789
}
val x1790 = x1782.fragment
val x1799 = if (x1785) {
x1790
} else {
x1790
}
val x1791 = x1782.port
val x1800 = if (x1785) {
x1791
} else {
x1791
}
val x1801 = new Anon1863173035(x1795,x1796,x1797,x1798,x1799,x1800)
x1801
}
x2 = x1803
val x1804 = if (x1777) {
true
} else {
false
}
x3 = x1804
val x1778 = if (x1771) {
0
} else {
val x1774 = x1770.next
x1774
}
val x1805 = if (x1777) {
x1778
} else {
x1778
}
x4 = x1805
()
} else {
val x1811 = x0(x1760)
val x1812 = x1811 >= '0'
val x1813 = x1811 <= '9'
val x1814 = x1812 && x1813
val x1973 = if (x1814) {
val x1817 = x1811 - '0'
val x1818 = x1817.toInt
var x1820: Int = x1818
var x1821: Boolean = false
val x1815 = x1760 + 1
var x1822: Int = x1815
var x1824: Int = -1
var x1825: Boolean = true
var x1826: Int = x1815
val x1867 = while ({val x1827 = x1825
val x1828 = x1824
val x1829 = x1826
val x1830 = x1828 != x1829
val x1831 = x1827 && x1830
x1831}) {
val x1833 = x1826
x1824 = x1833
val x1835 = x1833 >= x19
val x1865 = if (x1835) {
x1825 = false
()
} else {
val x1840 = x0(x1833)
val x1841 = x1840 >= '0'
val x1842 = x1840 <= '9'
val x1843 = x1841 && x1842
val x1863 = if (x1843) {
val x1849 = x1820
val x1850 = x1821
val x1851 = x1822
val x1846 = x1840 - '0'
val x1847 = x1846.toInt
val x1853 = x1849 * 10
val x1854 = x1853 + x1847
x1820 = x1854
x1821 = false
val x1844 = x1833 + 1
x1822 = x1844
x1826 = x1844
()
} else {
x1825 = false
()
}
x1863
}
x1865
}
val x1868 = x1820
val x1869 = x1821
val x1870 = x1822
val x1873 = if (x1869) {
true
} else {
x1869
}
val x1882 = if (x1873) {
false
} else {
false
}
val x1888 = if (x1882) {
true
} else {
false
}
val x1904 = if (x1888) {
true
} else {
false
}
val x1913 = if (x1904) {
false
} else {
false
}
val x1919 = if (x1913) {
true
} else {
false
}
val x1967 = if (x1919) {
x2 = null
x3 = true
x4 = 0
()
} else {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1920 = if (x1913) {
0
} else {
val x1889 = if (x1882) {
x1554
} else {
val x1874 = if (x1869) {
x1760
} else {
x1870
}
val x1883 = if (x1873) {
x1874
} else {
x1874
}
x1883
}
val x1905 = if (x1888) {
x1889
} else {
x1889
}
val x1914 = if (x1904) {
x1905
} else {
x1905
}
x1914
}
val x1926 = x1544(x1920)
val x1927 = x1926.empty
val x1933 = if (x1927) {
true
} else {
false
}
val x1959 = if (x1933) {
null
} else {
val x1932 = if (x1927) {
null
} else {
val x1918 = if (x1913) {
null
} else {
val x1562 = x1545.res
val x1910 = if (x1904) {
x398
} else {
val x1903 = if (x1888) {
null
} else {
val x1887 = if (x1882) {
null
} else {
val x1695 = if (x1687) {
null
} else {
val x1686 = if (x1681) {
null
} else {
val x1684 = new Tuple2CharString(x1606,x1680)
x1684
}
val x1691 = x1686._1
val x1692 = x1686._2
val x1693 = x1691+x1692
x1693
}
val x1879 = if (x1873) {
val x1706 = null.asInstanceOf[Int]
x1706
} else {
val x1872 = if (x1869) {
0
} else {
x1868
}
x1872
}
val x1880 = if (x1873) {
false
} else {
true
}
val x1881 = new OptionInt(x1879,x1880)
val x1885 = new Tuple2StringOptionInt(x1695,x1881)
x1885
}
val x1893 = x1887._2
val x1894 = x1893.defined
val x1898 = if (x1894) {
""
} else {
""
}
val x1892 = x1887._1
val x1899 = if (x1894) {
x1892
} else {
x1892
}
val x1900 = if (x1894) {
val x1895 = x1893.value
x1895
} else {
80
}
val x1901 = new Anon1863173035(x1898,x1899,x1898,x1898,x1898,x1900)
x1901
}
x1903
}
val x1911 = if (x1904) {
false
} else {
true
}
val x1912 = new OptionAnon1863173035(x1910,x1911)
val x1916 = new Tuple2StringOptionAnon1863173035(x1562,x1912)
x1916
}
val x1928 = x1926.res
val x1929 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1918,x1928)
x1929
}
val x1937 = x1932._1
val x1939 = x1937._1
val x1940 = x1937._2
val x1941 = x1940.defined
val x1951 = if (x1941) {
x1939
} else {
x1939
}
val x1938 = x1932._2
val x1952 = if (x1941) {
val x1942 = x1940.value
val x1943 = x1942.hostName
x1943
} else {
val x1949 = x1938.hostName
x1949
}
val x1944 = x1938.path
val x1953 = if (x1941) {
x1944
} else {
x1944
}
val x1945 = x1938.queryString
val x1954 = if (x1941) {
x1945
} else {
x1945
}
val x1946 = x1938.fragment
val x1955 = if (x1941) {
x1946
} else {
x1946
}
val x1947 = x1938.port
val x1956 = if (x1941) {
x1947
} else {
x1947
}
val x1957 = new Anon1863173035(x1951,x1952,x1953,x1954,x1955,x1956)
x1957
}
x2 = x1959
val x1960 = if (x1933) {
true
} else {
false
}
x3 = x1960
val x1934 = if (x1927) {
0
} else {
val x1930 = x1926.next
x1930
}
val x1961 = if (x1933) {
x1934
} else {
x1934
}
x4 = x1961
()
}
x1967
} else {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1770 = x1544(x1760)
val x1771 = x1770.empty
val x1777 = if (x1771) {
true
} else {
false
}
val x1803 = if (x1777) {
null
} else {
val x1776 = if (x1771) {
null
} else {
val x1562 = x1545.res
val x1695 = if (x1687) {
null
} else {
val x1686 = if (x1681) {
null
} else {
val x1684 = new Tuple2CharString(x1606,x1680)
x1684
}
val x1691 = x1686._1
val x1692 = x1686._2
val x1693 = x1691+x1692
x1693
}
val x1711 = new Anon1863173035("",x1695,"","","",80)
val x1713 = new OptionAnon1863173035(x1711,true)
val x1715 = new Tuple2StringOptionAnon1863173035(x1562,x1713)
val x1772 = x1770.res
val x1773 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1715,x1772)
x1773
}
val x1781 = x1776._1
val x1783 = x1781._1
val x1784 = x1781._2
val x1785 = x1784.defined
val x1795 = if (x1785) {
x1783
} else {
x1783
}
val x1782 = x1776._2
val x1796 = if (x1785) {
val x1786 = x1784.value
val x1787 = x1786.hostName
x1787
} else {
val x1793 = x1782.hostName
x1793
}
val x1788 = x1782.path
val x1797 = if (x1785) {
x1788
} else {
x1788
}
val x1789 = x1782.queryString
val x1798 = if (x1785) {
x1789
} else {
x1789
}
val x1790 = x1782.fragment
val x1799 = if (x1785) {
x1790
} else {
x1790
}
val x1791 = x1782.port
val x1800 = if (x1785) {
x1791
} else {
x1791
}
val x1801 = new Anon1863173035(x1795,x1796,x1797,x1798,x1799,x1800)
x1801
}
x2 = x1803
val x1804 = if (x1777) {
true
} else {
false
}
x3 = x1804
val x1778 = if (x1771) {
0
} else {
val x1774 = x1770.next
x1774
}
val x1805 = if (x1777) {
x1778
} else {
x1778
}
x4 = x1805
()
}
x1973
}
x1975
} else {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1717 = x1544(x1697)
val x1718 = x1717.empty
val x1724 = if (x1718) {
true
} else {
false
}
val x1750 = if (x1724) {
null
} else {
val x1723 = if (x1718) {
null
} else {
val x1562 = x1545.res
val x1695 = if (x1687) {
null
} else {
val x1686 = if (x1681) {
null
} else {
val x1684 = new Tuple2CharString(x1606,x1680)
x1684
}
val x1691 = x1686._1
val x1692 = x1686._2
val x1693 = x1691+x1692
x1693
}
val x1711 = new Anon1863173035("",x1695,"","","",80)
val x1713 = new OptionAnon1863173035(x1711,true)
val x1715 = new Tuple2StringOptionAnon1863173035(x1562,x1713)
val x1719 = x1717.res
val x1720 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1715,x1719)
x1720
}
val x1728 = x1723._1
val x1730 = x1728._1
val x1731 = x1728._2
val x1732 = x1731.defined
val x1742 = if (x1732) {
x1730
} else {
x1730
}
val x1729 = x1723._2
val x1743 = if (x1732) {
val x1733 = x1731.value
val x1734 = x1733.hostName
x1734
} else {
val x1740 = x1729.hostName
x1740
}
val x1735 = x1729.path
val x1744 = if (x1732) {
x1735
} else {
x1735
}
val x1736 = x1729.queryString
val x1745 = if (x1732) {
x1736
} else {
x1736
}
val x1737 = x1729.fragment
val x1746 = if (x1732) {
x1737
} else {
x1737
}
val x1738 = x1729.port
val x1747 = if (x1732) {
x1738
} else {
x1738
}
val x1748 = new Anon1863173035(x1742,x1743,x1744,x1745,x1746,x1747)
x1748
}
x2 = x1750
val x1751 = if (x1724) {
true
} else {
false
}
x3 = x1751
val x1725 = if (x1718) {
0
} else {
val x1721 = x1717.next
x1721
}
val x1752 = if (x1724) {
x1725
} else {
x1725
}
x4 = x1752
()
}
x1981
}
x1983
}
x1985
} else {
val x398 = null.asInstanceOf[Anon1863173035]
val x592 = {x272: (Int) => 
var x274: Anon1863173035 = null
var x275: Boolean = true
var x276: Int = x272
val x278 = x272 >= x19
val x586 = if (x278) {
x274 = null
x275 = true
x276 = x272
()
} else {
val x284 = x0(x272)
val x285 = x284 == '?'
val x584 = if (x285) {
var x289: java.lang.String = ""
var x290: Boolean = false
val x286 = x272 + 1
var x291: Int = x286
var x293: Int = -1
var x294: Boolean = true
var x295: Int = x286
val x329 = while ({val x296 = x294
val x297 = x293
val x298 = x295
val x299 = x297 != x298
val x300 = x296 && x299
x300}) {
val x302 = x295
x293 = x302
val x304 = x302 >= x19
val x327 = if (x304) {
x294 = false
()
} else {
val x308 = x0(x302)
val x309 = x308 == '?'
val x325 = if (x309) {
val x312 = x289
val x313 = x290
val x314 = x291
val x316 = x312+x308
x289 = x316
x290 = false
val x310 = x302 + 1
x291 = x310
x295 = x310
()
} else {
x294 = false
()
}
x325
}
x327
}
val x330 = x289
val x331 = x290
val x332 = x291
val x578 = if (x331) {
x274 = null
x275 = true
x276 = x286
()
} else {
var x342: java.lang.String = ""
var x343: Boolean = false
var x344: Int = x332
var x346: Int = -1
var x347: Boolean = true
var x348: Int = x332
val x386 = while ({val x349 = x347
val x350 = x346
val x351 = x348
val x352 = x350 != x351
val x353 = x349 && x352
x353}) {
val x355 = x348
x346 = x355
val x357 = x355 >= x19
val x384 = if (x357) {
x347 = false
()
} else {
val x361 = x0(x355)
val x362 = x361 > ' '
val x363 = x361 != '#'
val x364 = x362 && x363
val x365 = x361 != ''
val x366 = x364 && x365
val x382 = if (x366) {
val x369 = x342
val x370 = x343
val x371 = x344
val x373 = x369+x361
x342 = x373
x343 = false
val x367 = x355 + 1
x344 = x367
x348 = x367
()
} else {
x347 = false
()
}
x382
}
x384
}
val x387 = x342
val x388 = x343
val x389 = x344
val x576 = if (x388) {
x274 = null
x275 = true
x276 = x286
()
} else {
val x395 = x389 >= x19
val x574 = if (x395) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
} else {
val x409 = x0(x389)
val x410 = x409 == '#'
val x572 = if (x410) {
var x414: java.lang.String = ""
var x415: Boolean = false
val x411 = x389 + 1
var x416: Int = x411
var x418: Int = -1
var x419: Boolean = true
var x420: Int = x411
val x454 = while ({val x421 = x419
val x422 = x418
val x423 = x420
val x424 = x422 != x423
val x425 = x421 && x424
x425}) {
val x427 = x420
x418 = x427
val x429 = x427 >= x19
val x452 = if (x429) {
x419 = false
()
} else {
val x433 = x0(x427)
val x434 = x433 == '#'
val x450 = if (x434) {
val x437 = x414
val x438 = x415
val x439 = x416
val x441 = x437+x433
x414 = x441
x415 = false
val x435 = x427 + 1
x416 = x435
x420 = x435
()
} else {
x419 = false
()
}
x450
}
x452
}
val x455 = x414
val x456 = x415
val x457 = x416
val x566 = if (x456) {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x411
()
} else {
var x469: java.lang.String = ""
var x470: Boolean = false
var x471: Int = x457
var x473: Int = -1
var x474: Boolean = true
var x475: Int = x457
val x511 = while ({val x476 = x474
val x477 = x473
val x478 = x475
val x479 = x477 != x478
val x480 = x476 && x479
x480}) {
val x482 = x475
x473 = x482
val x484 = x482 >= x19
val x509 = if (x484) {
x474 = false
()
} else {
val x488 = x0(x482)
val x489 = x488 > ' '
val x490 = x488 != ''
val x491 = x489 && x490
val x507 = if (x491) {
val x494 = x469
val x495 = x470
val x496 = x471
val x498 = x494+x488
x469 = x498
x470 = false
val x492 = x482 + 1
x471 = x492
x475 = x492
()
} else {
x474 = false
()
}
x507
}
x509
}
val x512 = x469
val x513 = x470
val x514 = x471
val x520 = if (x513) {
true
} else {
false
}
val x529 = if (x520) {
false
} else {
false
}
val x535 = if (x529) {
true
} else {
false
}
val x558 = if (x535) {
null
} else {
val x534 = if (x529) {
null
} else {
val x526 = if (x520) {
x398
} else {
val x519 = if (x513) {
null
} else {
val x517 = new Anon1863173035("","","","",x512,80)
x517
}
x519
}
val x527 = if (x520) {
false
} else {
true
}
val x528 = new OptionAnon1863173035(x526,x527)
val x532 = new Tuple2StringOptionAnon1863173035(x387,x528)
x532
}
val x540 = x534._2
val x541 = x540.defined
val x550 = if (x541) {
val x542 = x540.value
val x543 = x542.schema
x543
} else {
""
}
val x551 = if (x541) {
val x542 = x540.value
val x544 = x542.hostName
x544
} else {
""
}
val x552 = if (x541) {
val x542 = x540.value
val x545 = x542.path
x545
} else {
""
}
val x539 = x534._1
val x553 = if (x541) {
x539
} else {
x539
}
val x554 = if (x541) {
val x542 = x540.value
val x546 = x542.fragment
x546
} else {
""
}
val x555 = if (x541) {
val x542 = x540.value
val x547 = x542.port
x547
} else {
80
}
val x556 = new Anon1863173035(x550,x551,x552,x553,x554,x555)
x556
}
x274 = x558
val x559 = if (x535) {
true
} else {
false
}
x275 = x559
val x536 = if (x529) {
x286
} else {
val x521 = if (x513) {
x514
} else {
x514
}
val x530 = if (x520) {
x521
} else {
x521
}
x530
}
val x560 = if (x535) {
x536
} else {
x536
}
x276 = x560
()
}
x566
} else {
val x403 = new Anon1863173035("","","",x387,"",80)
x274 = x403
x275 = false
x276 = x389
()
}
x572
}
x574
}
x576
}
x578
} else {
x274 = null
x275 = true
x276 = x272
()
}
x584
}
val x587 = x274
val x588 = x275
val x589 = x276
val x590 = new ParseResultAnon1863173035(x587,x588,x589)
x590: ParseResultAnon1863173035
}
val x738 = {x266: (Int) => 
var x268: Anon1863173035 = null
var x269: Boolean = true
var x270: Int = x266
val x593 = x592(x266)
val x594 = x593.empty
val x732 = if (x594) {
val x595 = x266 >= x19
val x724 = if (x595) {
x268 = null
x269 = true
x270 = x266
()
} else {
val x601 = x0(x266)
val x602 = x601 == '#'
val x722 = if (x602) {
var x606: java.lang.String = ""
var x607: Boolean = false
val x603 = x266 + 1
var x608: Int = x603
var x610: Int = -1
var x611: Boolean = true
var x612: Int = x603
val x646 = while ({val x613 = x611
val x614 = x610
val x615 = x612
val x616 = x614 != x615
val x617 = x613 && x616
x617}) {
val x619 = x612
x610 = x619
val x621 = x619 >= x19
val x644 = if (x621) {
x611 = false
()
} else {
val x625 = x0(x619)
val x626 = x625 == '#'
val x642 = if (x626) {
val x629 = x606
val x630 = x607
val x631 = x608
val x633 = x629+x625
x606 = x633
x607 = false
val x627 = x619 + 1
x608 = x627
x612 = x627
()
} else {
x611 = false
()
}
x642
}
x644
}
val x647 = x606
val x648 = x607
val x649 = x608
val x716 = if (x648) {
x268 = null
x269 = true
x270 = x603
()
} else {
var x658: java.lang.String = ""
var x659: Boolean = false
var x660: Int = x649
var x662: Int = -1
var x663: Boolean = true
var x664: Int = x649
val x700 = while ({val x665 = x663
val x666 = x662
val x667 = x664
val x668 = x666 != x667
val x669 = x665 && x668
x669}) {
val x671 = x664
x662 = x671
val x673 = x671 >= x19
val x698 = if (x673) {
x663 = false
()
} else {
val x677 = x0(x671)
val x678 = x677 > ' '
val x679 = x677 != ''
val x680 = x678 && x679
val x696 = if (x680) {
val x683 = x658
val x684 = x659
val x685 = x660
val x687 = x683+x677
x658 = x687
x659 = false
val x681 = x671 + 1
x660 = x681
x664 = x681
()
} else {
x663 = false
()
}
x696
}
x698
}
val x701 = x658
val x702 = x659
val x703 = x660
val x708 = if (x702) {
null
} else {
val x706 = new Anon1863173035("","","","",x701,80)
x706
}
x268 = x708
val x709 = if (x702) {
true
} else {
false
}
x269 = x709
val x710 = if (x702) {
x703
} else {
x703
}
x270 = x710
()
}
x716
} else {
x268 = null
x269 = true
x270 = x266
()
}
x722
}
x724
} else {
val x726 = x593.res
x268 = x726
x269 = x594
val x729 = x593.next
x270 = x729
()
}
val x733 = x268
val x734 = x269
val x735 = x270
val x736 = new ParseResultAnon1863173035(x733,x734,x735)
x736: ParseResultAnon1863173035
}
val x1221 = {x250: (Int) => 
var x252: Anon1863173035 = null
var x253: Boolean = true
var x254: Int = x250
val x256 = x250 >= x19
val x1215 = if (x256) {
x252 = null
x253 = true
x254 = x250
()
} else {
val x262 = x0(x250)
val x263 = x262 == '/'
val x1213 = if (x263) {
var x740: java.lang.String = ""
var x741: Boolean = false
val x264 = x250 + 1
var x742: Int = x264
var x744: Int = -1
var x745: Boolean = true
var x746: Int = x264
val x786 = while ({val x747 = x745
val x748 = x744
val x749 = x746
val x750 = x748 != x749
val x751 = x747 && x750
x751}) {
val x753 = x746
x744 = x753
val x755 = x753 >= x19
val x784 = if (x755) {
x745 = false
()
} else {
val x759 = x0(x753)
val x760 = x759 > ' '
val x761 = x759 != '#'
val x762 = x760 && x761
val x763 = x759 != '?'
val x764 = x762 && x763
val x765 = x759 != ''
val x766 = x764 && x765
val x782 = if (x766) {
val x769 = x740
val x770 = x741
val x771 = x742
val x773 = x769+x759
x740 = x773
x741 = false
val x767 = x753 + 1
x742 = x767
x746 = x767
()
} else {
x745 = false
()
}
x782
}
x784
}
val x787 = x740
val x788 = x741
val x789 = x742
val x1207 = if (x788) {
x252 = null
x253 = true
x254 = x264
()
} else {
val x797 = x738(x789)
val x798 = x797.empty
val x807 = if (x798) {
false
} else {
false
}
val x813 = if (x807) {
true
} else {
false
}
val x1205 = if (x813) {
x252 = null
x253 = true
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
x254 = x814
()
} else {
val x814 = if (x807) {
x264
} else {
val x799 = x797.next
val x808 = if (x798) {
x799
} else {
x799
}
x808
}
val x821 = x814 >= x19
val x1203 = if (x821) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x854 = x0(x814)
val x855 = x854 == 'H'
val x1201 = if (x855) {
val x856 = x814 + 1
val x858 = x856 >= x19
val x1195 = if (x858) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x866 = x0(x856)
val x867 = x866 == 'T'
val x1193 = if (x867) {
val x868 = x856 + 1
val x870 = x868 >= x19
val x1187 = if (x870) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x878 = x0(x868)
val x879 = x878 == 'T'
val x1185 = if (x879) {
val x880 = x868 + 1
val x882 = x880 >= x19
val x1179 = if (x882) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x890 = x0(x880)
val x891 = x890 == 'P'
val x1177 = if (x891) {
val x892 = x880 + 1
val x894 = x892 >= x19
val x1171 = if (x894) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
} else {
val x902 = x0(x892)
val x903 = x902 == '/'
val x1169 = if (x903) {
val x904 = x892 + 1
val x927 = x904 >= x19
val x1163 = if (x927) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x938 = x0(x904)
val x939 = x938 >= '0'
val x940 = x938 <= '9'
val x941 = x939 && x940
val x1161 = if (x941) {
val x944 = x938 - '0'
val x945 = x944.toInt
var x947: Int = x945
var x948: Boolean = false
val x942 = x904 + 1
var x949: Int = x942
var x951: Int = -1
var x952: Boolean = true
var x953: Int = x942
val x994 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x962 = x960 >= x19
val x992 = if (x962) {
x952 = false
()
} else {
val x967 = x0(x960)
val x968 = x967 >= '0'
val x969 = x967 <= '9'
val x970 = x968 && x969
val x990 = if (x970) {
val x976 = x947
val x977 = x948
val x978 = x949
val x973 = x967 - '0'
val x974 = x973.toInt
val x980 = x976 * 10
val x981 = x980 + x974
x947 = x981
x948 = false
val x971 = x960 + 1
x949 = x971
x953 = x971
()
} else {
x952 = false
()
}
x990
}
x992
}
val x995 = x947
val x996 = x948
val x997 = x949
val x1000 = if (x996) {
true
} else {
x996
}
val x1155 = if (x1000) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1001 = if (x996) {
x904
} else {
x997
}
val x1007 = x1001 >= x19
val x1153 = if (x1007) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1014 = x0(x1001)
val x1015 = x1014 == '.'
val x1151 = if (x1015) {
val x1016 = x1001 + 1
val x1018 = x1016 >= x19
val x1145 = if (x1018) {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
} else {
val x1025 = x0(x1016)
val x1026 = x1025 >= '0'
val x1027 = x1025 <= '9'
val x1028 = x1026 && x1027
val x1143 = if (x1028) {
val x1031 = x1025 - '0'
val x1032 = x1031.toInt
var x1034: Int = x1032
var x1035: Boolean = false
val x1029 = x1016 + 1
var x1036: Int = x1029
var x1038: Int = -1
var x1039: Boolean = true
var x1040: Int = x1029
val x1081 = while ({val x1041 = x1039
val x1042 = x1038
val x1043 = x1040
val x1044 = x1042 != x1043
val x1045 = x1041 && x1044
x1045}) {
val x1047 = x1040
x1038 = x1047
val x1049 = x1047 >= x19
val x1079 = if (x1049) {
x1039 = false
()
} else {
val x1054 = x0(x1047)
val x1055 = x1054 >= '0'
val x1056 = x1054 <= '9'
val x1057 = x1055 && x1056
val x1077 = if (x1057) {
val x1063 = x1034
val x1064 = x1035
val x1065 = x1036
val x1060 = x1054 - '0'
val x1061 = x1060.toInt
val x1067 = x1063 * 10
val x1068 = x1067 + x1061
x1034 = x1068
x1035 = false
val x1058 = x1047 + 1
x1036 = x1058
x1040 = x1058
()
} else {
x1039 = false
()
}
x1077
}
x1079
}
val x1082 = x1034
val x1083 = x1035
val x1084 = x1036
val x1087 = if (x1083) {
true
} else {
x1083
}
val x1093 = if (x1087) {
true
} else {
false
}
val x1102 = if (x1093) {
false
} else {
false
}
val x1107 = if (x1102) {
true
} else {
false
}
val x1131 = if (x1107) {
null
} else {
val x1106 = if (x1102) {
null
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
x812
}
val x1112 = x1106._2
val x1113 = x1112.defined
val x1123 = if (x1113) {
val x1114 = x1112.value
val x1116 = x1114.schema
x1116
} else {
""
}
val x1124 = if (x1113) {
val x1114 = x1112.value
val x1117 = x1114.hostName
x1117
} else {
""
}
val x1111 = x1106._1
val x1115 = "/"+x1111
val x1125 = if (x1113) {
x1115
} else {
x1115
}
val x1126 = if (x1113) {
val x1114 = x1112.value
val x1118 = x1114.queryString
x1118
} else {
""
}
val x1127 = if (x1113) {
val x1114 = x1112.value
val x1119 = x1114.fragment
x1119
} else {
""
}
val x1128 = if (x1113) {
val x1114 = x1112.value
val x1120 = x1114.port
x1120
} else {
80
}
val x1129 = new Anon1863173035(x1123,x1124,x1125,x1126,x1127,x1128)
x1129
}
x252 = x1131
val x1132 = if (x1107) {
true
} else {
false
}
x253 = x1132
val x1108 = if (x1102) {
x264
} else {
val x1094 = if (x1087) {
x904
} else {
val x1088 = if (x1083) {
x1016
} else {
x1084
}
x1088
}
val x1103 = if (x1093) {
x1094
} else {
x1094
}
x1103
}
val x1133 = if (x1107) {
x1108
} else {
x1108
}
x254 = x1133
()
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1143
}
x1145
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1151
}
x1153
}
x1155
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x904
()
}
x1161
}
x1163
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1169
}
x1171
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1177
}
x1179
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1185
}
x1187
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1193
}
x1195
} else {
val x812 = if (x807) {
null
} else {
val x804 = if (x798) {
x398
} else {
val x801 = x797.res
x801
}
val x805 = if (x798) {
false
} else {
true
}
val x806 = new OptionAnon1863173035(x804,x805)
val x810 = new Tuple2StringOptionAnon1863173035(x787,x806)
x810
}
val x831 = x812._2
val x832 = x831.defined
val x842 = if (x832) {
val x833 = x831.value
val x835 = x833.schema
x835
} else {
""
}
val x843 = if (x832) {
val x833 = x831.value
val x836 = x833.hostName
x836
} else {
""
}
val x830 = x812._1
val x834 = "/"+x830
val x844 = if (x832) {
x834
} else {
x834
}
val x845 = if (x832) {
val x833 = x831.value
val x837 = x833.queryString
x837
} else {
""
}
val x846 = if (x832) {
val x833 = x831.value
val x838 = x833.fragment
x838
} else {
""
}
val x847 = if (x832) {
val x833 = x831.value
val x839 = x833.port
x839
} else {
80
}
val x848 = new Anon1863173035(x842,x843,x844,x845,x846,x847)
x252 = x848
x253 = false
x254 = x814
()
}
x1201
}
x1203
}
x1205
}
x1207
} else {
x252 = null
x253 = true
x254 = x250
()
}
x1213
}
val x1216 = x252
val x1217 = x253
val x1218 = x254
val x1219 = new ParseResultAnon1863173035(x1216,x1217,x1218)
x1219: ParseResultAnon1863173035
}
val x1544 = {x244: (Int) => 
var x246: Anon1863173035 = null
var x247: Boolean = true
var x248: Int = x244
val x1222 = x1221(x244)
val x1223 = x1222.empty
val x1538 = if (x1223) {
val x1224 = x244 >= x19
val x1530 = if (x1224) {
x246 = null
x247 = true
x248 = x244
()
} else {
val x1230 = x0(x244)
val x1231 = x1230 == '?'
val x1528 = if (x1231) {
var x1235: java.lang.String = ""
var x1236: Boolean = false
val x1232 = x244 + 1
var x1237: Int = x1232
var x1239: Int = -1
var x1240: Boolean = true
var x1241: Int = x1232
val x1275 = while ({val x1242 = x1240
val x1243 = x1239
val x1244 = x1241
val x1245 = x1243 != x1244
val x1246 = x1242 && x1245
x1246}) {
val x1248 = x1241
x1239 = x1248
val x1250 = x1248 >= x19
val x1273 = if (x1250) {
x1240 = false
()
} else {
val x1254 = x0(x1248)
val x1255 = x1254 == '?'
val x1271 = if (x1255) {
val x1258 = x1235
val x1259 = x1236
val x1260 = x1237
val x1262 = x1258+x1254
x1235 = x1262
x1236 = false
val x1256 = x1248 + 1
x1237 = x1256
x1241 = x1256
()
} else {
x1240 = false
()
}
x1271
}
x1273
}
val x1276 = x1235
val x1277 = x1236
val x1278 = x1237
val x1522 = if (x1277) {
x246 = null
x247 = true
x248 = x1232
()
} else {
var x1288: java.lang.String = ""
var x1289: Boolean = false
var x1290: Int = x1278
var x1292: Int = -1
var x1293: Boolean = true
var x1294: Int = x1278
val x1332 = while ({val x1295 = x1293
val x1296 = x1292
val x1297 = x1294
val x1298 = x1296 != x1297
val x1299 = x1295 && x1298
x1299}) {
val x1301 = x1294
x1292 = x1301
val x1303 = x1301 >= x19
val x1330 = if (x1303) {
x1293 = false
()
} else {
val x1307 = x0(x1301)
val x1308 = x1307 > ' '
val x1309 = x1307 != '#'
val x1310 = x1308 && x1309
val x1311 = x1307 != ''
val x1312 = x1310 && x1311
val x1328 = if (x1312) {
val x1315 = x1288
val x1316 = x1289
val x1317 = x1290
val x1319 = x1315+x1307
x1288 = x1319
x1289 = false
val x1313 = x1301 + 1
x1290 = x1313
x1294 = x1313
()
} else {
x1293 = false
()
}
x1328
}
x1330
}
val x1333 = x1288
val x1334 = x1289
val x1335 = x1290
val x1520 = if (x1334) {
x246 = null
x247 = true
x248 = x1232
()
} else {
val x1341 = x1335 >= x19
val x1518 = if (x1341) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
} else {
val x1353 = x0(x1335)
val x1354 = x1353 == '#'
val x1516 = if (x1354) {
var x1358: java.lang.String = ""
var x1359: Boolean = false
val x1355 = x1335 + 1
var x1360: Int = x1355
var x1362: Int = -1
var x1363: Boolean = true
var x1364: Int = x1355
val x1398 = while ({val x1365 = x1363
val x1366 = x1362
val x1367 = x1364
val x1368 = x1366 != x1367
val x1369 = x1365 && x1368
x1369}) {
val x1371 = x1364
x1362 = x1371
val x1373 = x1371 >= x19
val x1396 = if (x1373) {
x1363 = false
()
} else {
val x1377 = x0(x1371)
val x1378 = x1377 == '#'
val x1394 = if (x1378) {
val x1381 = x1358
val x1382 = x1359
val x1383 = x1360
val x1385 = x1381+x1377
x1358 = x1385
x1359 = false
val x1379 = x1371 + 1
x1360 = x1379
x1364 = x1379
()
} else {
x1363 = false
()
}
x1394
}
x1396
}
val x1399 = x1358
val x1400 = x1359
val x1401 = x1360
val x1510 = if (x1400) {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1355
()
} else {
var x1413: java.lang.String = ""
var x1414: Boolean = false
var x1415: Int = x1401
var x1417: Int = -1
var x1418: Boolean = true
var x1419: Int = x1401
val x1455 = while ({val x1420 = x1418
val x1421 = x1417
val x1422 = x1419
val x1423 = x1421 != x1422
val x1424 = x1420 && x1423
x1424}) {
val x1426 = x1419
x1417 = x1426
val x1428 = x1426 >= x19
val x1453 = if (x1428) {
x1418 = false
()
} else {
val x1432 = x0(x1426)
val x1433 = x1432 > ' '
val x1434 = x1432 != ''
val x1435 = x1433 && x1434
val x1451 = if (x1435) {
val x1438 = x1413
val x1439 = x1414
val x1440 = x1415
val x1442 = x1438+x1432
x1413 = x1442
x1414 = false
val x1436 = x1426 + 1
x1415 = x1436
x1419 = x1436
()
} else {
x1418 = false
()
}
x1451
}
x1453
}
val x1456 = x1413
val x1457 = x1414
val x1458 = x1415
val x1464 = if (x1457) {
true
} else {
false
}
val x1473 = if (x1464) {
false
} else {
false
}
val x1479 = if (x1473) {
true
} else {
false
}
val x1502 = if (x1479) {
null
} else {
val x1478 = if (x1473) {
null
} else {
val x1470 = if (x1464) {
x398
} else {
val x1463 = if (x1457) {
null
} else {
val x1461 = new Anon1863173035("","","","",x1456,80)
x1461
}
x1463
}
val x1471 = if (x1464) {
false
} else {
true
}
val x1472 = new OptionAnon1863173035(x1470,x1471)
val x1476 = new Tuple2StringOptionAnon1863173035(x1333,x1472)
x1476
}
val x1484 = x1478._2
val x1485 = x1484.defined
val x1494 = if (x1485) {
val x1486 = x1484.value
val x1487 = x1486.schema
x1487
} else {
""
}
val x1495 = if (x1485) {
val x1486 = x1484.value
val x1488 = x1486.hostName
x1488
} else {
""
}
val x1496 = if (x1485) {
val x1486 = x1484.value
val x1489 = x1486.path
x1489
} else {
""
}
val x1483 = x1478._1
val x1497 = if (x1485) {
x1483
} else {
x1483
}
val x1498 = if (x1485) {
val x1486 = x1484.value
val x1490 = x1486.fragment
x1490
} else {
""
}
val x1499 = if (x1485) {
val x1486 = x1484.value
val x1491 = x1486.port
x1491
} else {
80
}
val x1500 = new Anon1863173035(x1494,x1495,x1496,x1497,x1498,x1499)
x1500
}
x246 = x1502
val x1503 = if (x1479) {
true
} else {
false
}
x247 = x1503
val x1480 = if (x1473) {
x1232
} else {
val x1465 = if (x1457) {
x1458
} else {
x1458
}
val x1474 = if (x1464) {
x1465
} else {
x1465
}
x1474
}
val x1504 = if (x1479) {
x1480
} else {
x1480
}
x248 = x1504
()
}
x1510
} else {
val x1347 = new Anon1863173035("","","",x1333,"",80)
x246 = x1347
x247 = false
x248 = x1335
()
}
x1516
}
x1518
}
x1520
}
x1522
} else {
x246 = null
x247 = true
x248 = x244
()
}
x1528
}
x1530
} else {
val x1532 = x1222.res
x246 = x1532
x247 = x1223
val x1535 = x1222.next
x248 = x1535
()
}
val x1539 = x246
val x1540 = x247
val x1541 = x248
val x1542 = new ParseResultAnon1863173035(x1539,x1540,x1541)
x1542: ParseResultAnon1863173035
}
val x1565 = x1544(x1554)
val x1566 = x1565.empty
val x1572 = if (x1566) {
true
} else {
false
}
val x1598 = if (x1572) {
null
} else {
val x1571 = if (x1566) {
null
} else {
val x399 = new OptionAnon1863173035(x398,false)
val x1562 = x1545.res
val x1563 = new Tuple2StringOptionAnon1863173035(x1562,x399)
val x1567 = x1565.res
val x1568 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x1563,x1567)
x1568
}
val x1576 = x1571._1
val x1578 = x1576._1
val x1579 = x1576._2
val x1580 = x1579.defined
val x1590 = if (x1580) {
x1578
} else {
x1578
}
val x1577 = x1571._2
val x1591 = if (x1580) {
val x1581 = x1579.value
val x1582 = x1581.hostName
x1582
} else {
val x1588 = x1577.hostName
x1588
}
val x1583 = x1577.path
val x1592 = if (x1580) {
x1583
} else {
x1583
}
val x1584 = x1577.queryString
val x1593 = if (x1580) {
x1584
} else {
x1584
}
val x1585 = x1577.fragment
val x1594 = if (x1580) {
x1585
} else {
x1585
}
val x1586 = x1577.port
val x1595 = if (x1580) {
x1586
} else {
x1586
}
val x1596 = new Anon1863173035(x1590,x1591,x1592,x1593,x1594,x1595)
x1596
}
x2 = x1598
val x1599 = if (x1572) {
true
} else {
false
}
x3 = x1599
val x1573 = if (x1566) {
0
} else {
val x1569 = x1565.next
x1569
}
val x1600 = if (x1572) {
x1573
} else {
x1573
}
x4 = x1600
()
}
x1991
}
x1993
}
val x1996 = x2
val x1997 = x3
val x1998 = x4
val x1999 = new ParseResultAnon1863173035(x1996,x1997,x1998)
val x2000 = println(x1999)
x2000
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=1000
nVars=2000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/URI_scheme,,,80),false,39)
ParseResultAnon1863173035(Anon1863173035(https,developer.mozilla.org,/en-US/docs/Web/JavaScript/Guide/Regular_Expressions,redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions,,80),false,156)
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/List_of_HTTP_headers,,Responses,80),false,59)
ParseResultAnon1863173035(Anon1863173035(ldap,ldap1.example.net,/o=University%20of%20Michigan,,,,80),false,59)
