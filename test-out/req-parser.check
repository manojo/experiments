/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqTypeParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
val x1 = null.asInstanceOf[java.lang.String]
var x3: java.lang.String = x1
var x4: Boolean = true
var x5: Int = -1
var x8: java.lang.String = ""
var x9: Boolean = false
var x10: Int = 0
var x12: Int = -1
var x13: Boolean = true
var x14: Int = 0
val x23 = x0.length
val x56 = while ({val x15 = x13
val x16 = x12
val x17 = x14
val x18 = x16 != x17
val x19 = x15 && x18
x19}) {
val x21 = x14
x12 = x21
val x24 = x21 >= x23
val x54 = if (x24) {
x13 = false
()
} else {
val x29 = x0(x21)
val x30 = x29 >= 'a'
val x31 = x29 <= 'z'
val x32 = x30 && x31
val x33 = x29 >= 'A'
val x34 = x29 <= 'Z'
val x35 = x33 && x34
val x36 = x32 || x35
val x52 = if (x36) {
val x39 = x8
val x40 = x9
val x41 = x10
val x43 = x39+x29
x8 = x43
x9 = false
val x37 = x21 + 1
x10 = x37
x14 = x37
()
} else {
x13 = false
()
}
x52
}
x54
}
val x57 = x8
val x58 = x9
val x59 = x10
val x69 = if (x58) {
val x60 = new ParseResultString(x57,x58,x59)
x60
} else {
val x61 = collection.mutable.HashSet[java.lang.String]("connect","copy","checkout","delete","get","head","lock","merge","mkactivity","mkcol","move","msearch","notify","options","post","propfind","proppatch","put","report","subscribe","trace","unlock","unsubscribe")
val x62 = x61.contains(x57)
val x64 = if (x62) {
x57
} else {
x1
}
val x65 = if (x62) {
x58
} else {
true
}
val x66 = if (x62) {
x59
} else {
x59
}
val x67 = new ParseResultString(x64,x65,x66)
x67
}
val x70 = x69.res
x3 = x70
val x72 = x69.empty
x4 = x72
val x74 = x69.next
x5 = x74
val x76 = x3
val x77 = x4
val x78 = x5
val x79 = new ParseResultString(x76,x77,x78)
val x80 = println(x79)
x80
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultString(connect,false,7)
ParseResultString(copy,false,4)
ParseResultString(checkout,false,8)
ParseResultString(delete,false,6)
ParseResultString(get,false,3)
ParseResultString(head,false,4)
ParseResultString(lock,false,4)
ParseResultString(merge,false,5)
ParseResultString(mkactivity,false,10)
ParseResultString(mkcol,false,5)
ParseResultString(move,false,4)
ParseResultString(msearch,false,7)
ParseResultString(notify,false,6)
ParseResultString(options,false,7)
ParseResultString(post,false,4)
ParseResultString(propfind,false,8)
ParseResultString(proppatch,false,9)
ParseResultString(put,false,3)
ParseResultString(report,false,6)
ParseResultString(subscribe,false,9)
ParseResultString(trace,false,5)
ParseResultString(unlock,false,6)
ParseResultString(unsubscribe,false,11)
ParseResultString(null,true,4)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class hostParse extends ((Array[Char])=>(Unit)) {
def apply(x160:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x163: Anon1863173035 = x161
var x164: Boolean = true
var x165: Int = -1
val x168 = x160.length
val x169 = 0 >= x168
val x430 = if (x169) {
x163 = x161
x164 = true
x165 = 0
()
} else {
val x181 = x160(0)
val x182 = x181 >= '0'
val x183 = x181 <= '9'
val x184 = x182 && x183
val x185 = x181 >= 'a'
val x186 = x181 <= 'z'
val x187 = x185 && x186
val x188 = x181 >= 'A'
val x189 = x181 <= 'Z'
val x190 = x188 && x189
val x191 = x187 || x190
val x192 = x184 || x191
val x193 = x181 == '-'
val x194 = x192 || x193
val x195 = x181 == '.'
val x196 = x194 || x195
val x428 = if (x196) {
var x200: java.lang.String = ""
var x201: Boolean = false
val x197 = 0 + 1
var x202: Int = x197
var x204: Int = -1
var x205: Boolean = true
var x206: Int = x197
val x254 = while ({val x207 = x205
val x208 = x204
val x209 = x206
val x210 = x208 != x209
val x211 = x207 && x210
x211}) {
val x213 = x206
x204 = x213
val x215 = x213 >= x168
val x252 = if (x215) {
x205 = false
()
} else {
val x219 = x160(x213)
val x220 = x219 >= '0'
val x221 = x219 <= '9'
val x222 = x220 && x221
val x223 = x219 >= 'a'
val x224 = x219 <= 'z'
val x225 = x223 && x224
val x226 = x219 >= 'A'
val x227 = x219 <= 'Z'
val x228 = x226 && x227
val x229 = x225 || x228
val x230 = x222 || x229
val x231 = x219 == '-'
val x232 = x230 || x231
val x233 = x219 == '.'
val x234 = x232 || x233
val x250 = if (x234) {
val x237 = x200
val x238 = x201
val x239 = x202
val x241 = x237+x219
x200 = x241
x201 = false
val x235 = x213 + 1
x202 = x235
x206 = x235
()
} else {
x205 = false
()
}
x250
}
x252
}
val x255 = x200
val x256 = x201
val x257 = x202
val x262 = if (x256) {
true
} else {
false
}
val x271 = if (x262) {
true
} else {
false
}
val x422 = if (x271) {
x163 = x161
x164 = true
x165 = 0
()
} else {
val x263 = if (x256) {
0
} else {
x257
}
val x272 = if (x262) {
x263
} else {
x263
}
val x278 = x272 >= x168
val x420 = if (x278) {
val x270 = if (x262) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x261 = if (x256) {
val x171 = null.asInstanceOf[Tuple2CharString]
x171
} else {
val x259 = new Tuple2CharString(x181,x255)
x259
}
val x266 = x261._1
val x267 = x261._2
val x268 = x266+x267
x268
}
val x286 = new Anon1863173035("",x270,"","","",80)
x163 = x286
x164 = false
x165 = x272
()
} else {
val x292 = x160(x272)
val x293 = x292 == ':'
val x418 = if (x293) {
val x294 = x272 + 1
val x296 = x294 >= x168
val x412 = if (x296) {
val x270 = if (x262) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x261 = if (x256) {
val x171 = null.asInstanceOf[Tuple2CharString]
x171
} else {
val x259 = new Tuple2CharString(x181,x255)
x259
}
val x266 = x261._1
val x267 = x261._2
val x268 = x266+x267
x268
}
val x286 = new Anon1863173035("",x270,"","","",80)
x163 = x286
x164 = false
x165 = x294
()
} else {
val x306 = x160(x294)
val x307 = x306 >= '0'
val x308 = x306 <= '9'
val x309 = x307 && x308
val x410 = if (x309) {
val x312 = x306 - '0'
val x313 = x312.toInt
var x315: Int = x313
var x316: Boolean = false
val x310 = x294 + 1
var x317: Int = x310
var x319: Int = -1
var x320: Boolean = true
var x321: Int = x310
val x362 = while ({val x322 = x320
val x323 = x319
val x324 = x321
val x325 = x323 != x324
val x326 = x322 && x325
x326}) {
val x328 = x321
x319 = x328
val x330 = x328 >= x168
val x360 = if (x330) {
x320 = false
()
} else {
val x335 = x160(x328)
val x336 = x335 >= '0'
val x337 = x335 <= '9'
val x338 = x336 && x337
val x358 = if (x338) {
val x344 = x315
val x345 = x316
val x346 = x317
val x341 = x335 - '0'
val x342 = x341.toInt
val x348 = x344 * 10
val x349 = x348 + x342
x315 = x349
x316 = false
val x339 = x328 + 1
x317 = x339
x321 = x339
()
} else {
x320 = false
()
}
x358
}
x360
}
val x363 = x315
val x364 = x316
val x365 = x317
val x368 = if (x364) {
true
} else {
x364
}
val x377 = if (x368) {
false
} else {
false
}
val x383 = if (x377) {
true
} else {
false
}
val x398 = if (x383) {
x161
} else {
val x382 = if (x377) {
val x174 = null.asInstanceOf[Tuple2StringOptionInt]
x174
} else {
val x270 = if (x262) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x261 = if (x256) {
val x171 = null.asInstanceOf[Tuple2CharString]
x171
} else {
val x259 = new Tuple2CharString(x181,x255)
x259
}
val x266 = x261._1
val x267 = x261._2
val x268 = x266+x267
x268
}
val x374 = if (x368) {
val x280 = null.asInstanceOf[Int]
x280
} else {
val x367 = if (x364) {
val x280 = null.asInstanceOf[Int]
x280
} else {
x363
}
x367
}
val x375 = if (x368) {
false
} else {
true
}
val x376 = new OptionInt(x374,x375)
val x380 = new Tuple2StringOptionInt(x270,x376)
x380
}
val x388 = x382._2
val x389 = x388.defined
val x393 = if (x389) {
""
} else {
""
}
val x387 = x382._1
val x394 = if (x389) {
x387
} else {
x387
}
val x395 = if (x389) {
val x390 = x388.value
x390
} else {
80
}
val x396 = new Anon1863173035(x393,x394,x393,x393,x393,x395)
x396
}
x163 = x398
val x399 = if (x383) {
true
} else {
false
}
x164 = x399
val x384 = if (x377) {
0
} else {
val x369 = if (x364) {
x294
} else {
x365
}
val x378 = if (x368) {
x369
} else {
x369
}
x378
}
val x400 = if (x383) {
x384
} else {
x384
}
x165 = x400
()
} else {
val x270 = if (x262) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x261 = if (x256) {
val x171 = null.asInstanceOf[Tuple2CharString]
x171
} else {
val x259 = new Tuple2CharString(x181,x255)
x259
}
val x266 = x261._1
val x267 = x261._2
val x268 = x266+x267
x268
}
val x286 = new Anon1863173035("",x270,"","","",80)
x163 = x286
x164 = false
x165 = x294
()
}
x410
}
x412
} else {
val x270 = if (x262) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x261 = if (x256) {
val x171 = null.asInstanceOf[Tuple2CharString]
x171
} else {
val x259 = new Tuple2CharString(x181,x255)
x259
}
val x266 = x261._1
val x267 = x261._2
val x268 = x266+x267
x268
}
val x286 = new Anon1863173035("",x270,"","","",80)
x163 = x286
x164 = false
x165 = x272
()
}
x418
}
x420
}
x422
} else {
x163 = x161
x164 = true
x165 = 0
()
}
x428
}
val x431 = x163
val x432 = x164
val x433 = x165
val x434 = new ParseResultAnon1863173035(x431,x432,x433)
val x435 = println(x434)
x435
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,90),false,17)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,14)
ParseResultAnon1863173035(null,true,0)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,15)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqFragmentParse extends ((Array[Char])=>(Unit)) {
def apply(x700:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x701: Anon1863173035 = x161
var x702: Boolean = true
var x703: Int = -1
var x705: java.lang.String = ""
var x706: Boolean = false
var x707: Int = 0
var x709: Int = -1
var x710: Boolean = true
var x711: Int = 0
val x720 = x700.length
val x746 = while ({val x712 = x710
val x713 = x709
val x714 = x711
val x715 = x713 != x714
val x716 = x712 && x715
x716}) {
val x718 = x711
x709 = x718
val x721 = x718 >= x720
val x744 = if (x721) {
x710 = false
()
} else {
val x725 = x700(x718)
val x726 = x725 == '#'
val x742 = if (x726) {
val x729 = x705
val x730 = x706
val x731 = x707
val x733 = x729+x725
x705 = x733
x706 = false
val x727 = x718 + 1
x707 = x727
x711 = x727
()
} else {
x710 = false
()
}
x742
}
x744
}
val x747 = x705
val x748 = x706
val x749 = x707
val x814 = if (x748) {
x701 = x161
x702 = true
x703 = 0
()
} else {
var x756: java.lang.String = ""
var x757: Boolean = false
var x758: Int = x749
var x760: Int = -1
var x761: Boolean = true
var x762: Int = x749
val x798 = while ({val x763 = x761
val x764 = x760
val x765 = x762
val x766 = x764 != x765
val x767 = x763 && x766
x767}) {
val x769 = x762
x760 = x769
val x771 = x769 >= x720
val x796 = if (x771) {
x761 = false
()
} else {
val x775 = x700(x769)
val x776 = x775 > ' '
val x777 = x775 != ''
val x778 = x776 && x777
val x794 = if (x778) {
val x781 = x756
val x782 = x757
val x783 = x758
val x785 = x781+x775
x756 = x785
x757 = false
val x779 = x769 + 1
x758 = x779
x762 = x779
()
} else {
x761 = false
()
}
x794
}
x796
}
val x799 = x756
val x800 = x757
val x801 = x758
val x806 = if (x800) {
x161
} else {
val x804 = new Anon1863173035("","","","",x799,80)
x804
}
x701 = x806
val x807 = if (x800) {
true
} else {
false
}
x702 = x807
val x808 = if (x800) {
x801
} else {
x801
}
x703 = x808
()
}
val x815 = x701
val x816 = x702
val x817 = x703
val x818 = new ParseResultAnon1863173035(x815,x816,x817)
val x819 = println(x818)
x819
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,,3adsfd.html,80),false,13)
ParseResultAnon1863173035(Anon1863173035(,,,,3asfd#adf,80),false,11)
ParseResultAnon1863173035(Anon1863173035(,,,,asdf,80),false,4)
nVars=1000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class qStringParse extends ((Array[Char])=>(Unit)) {
def apply(x942:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x943: Anon1863173035 = x161
var x944: Boolean = true
var x945: Int = -1
var x947: java.lang.String = ""
var x948: Boolean = false
var x949: Int = 0
var x951: Int = -1
var x952: Boolean = true
var x953: Int = 0
val x962 = x942.length
val x988 = while ({val x954 = x952
val x955 = x951
val x956 = x953
val x957 = x955 != x956
val x958 = x954 && x957
x958}) {
val x960 = x953
x951 = x960
val x963 = x960 >= x962
val x986 = if (x963) {
x952 = false
()
} else {
val x967 = x942(x960)
val x968 = x967 == '?'
val x984 = if (x968) {
val x971 = x947
val x972 = x948
val x973 = x949
val x975 = x971+x967
x947 = x975
x948 = false
val x969 = x960 + 1
x949 = x969
x953 = x969
()
} else {
x952 = false
()
}
x984
}
x986
}
val x989 = x947
val x990 = x948
val x991 = x949
val x1235 = if (x990) {
x943 = x161
x944 = true
x945 = 0
()
} else {
var x1000: java.lang.String = ""
var x1001: Boolean = false
var x1002: Int = x991
var x1004: Int = -1
var x1005: Boolean = true
var x1006: Int = x991
val x1044 = while ({val x1007 = x1005
val x1008 = x1004
val x1009 = x1006
val x1010 = x1008 != x1009
val x1011 = x1007 && x1010
x1011}) {
val x1013 = x1006
x1004 = x1013
val x1015 = x1013 >= x962
val x1042 = if (x1015) {
x1005 = false
()
} else {
val x1019 = x942(x1013)
val x1020 = x1019 > ' '
val x1021 = x1019 != '#'
val x1022 = x1020 && x1021
val x1023 = x1019 != ''
val x1024 = x1022 && x1023
val x1040 = if (x1024) {
val x1027 = x1000
val x1028 = x1001
val x1029 = x1002
val x1031 = x1027+x1019
x1000 = x1031
x1001 = false
val x1025 = x1013 + 1
x1002 = x1025
x1006 = x1025
()
} else {
x1005 = false
()
}
x1040
}
x1042
}
val x1045 = x1000
val x1046 = x1001
val x1047 = x1002
val x1233 = if (x1046) {
x943 = x161
x944 = true
x945 = 0
()
} else {
val x1053 = x1047 >= x962
val x1231 = if (x1053) {
val x1060 = new Anon1863173035("","","",x1045,"",80)
x943 = x1060
x944 = false
x945 = x1047
()
} else {
val x1066 = x942(x1047)
val x1067 = x1066 == '#'
val x1229 = if (x1067) {
var x1071: java.lang.String = ""
var x1072: Boolean = false
val x1068 = x1047 + 1
var x1073: Int = x1068
var x1075: Int = -1
var x1076: Boolean = true
var x1077: Int = x1068
val x1111 = while ({val x1078 = x1076
val x1079 = x1075
val x1080 = x1077
val x1081 = x1079 != x1080
val x1082 = x1078 && x1081
x1082}) {
val x1084 = x1077
x1075 = x1084
val x1086 = x1084 >= x962
val x1109 = if (x1086) {
x1076 = false
()
} else {
val x1090 = x942(x1084)
val x1091 = x1090 == '#'
val x1107 = if (x1091) {
val x1094 = x1071
val x1095 = x1072
val x1096 = x1073
val x1098 = x1094+x1090
x1071 = x1098
x1072 = false
val x1092 = x1084 + 1
x1073 = x1092
x1077 = x1092
()
} else {
x1076 = false
()
}
x1107
}
x1109
}
val x1112 = x1071
val x1113 = x1072
val x1114 = x1073
val x1223 = if (x1113) {
val x1060 = new Anon1863173035("","","",x1045,"",80)
x943 = x1060
x944 = false
x945 = x1068
()
} else {
var x1126: java.lang.String = ""
var x1127: Boolean = false
var x1128: Int = x1114
var x1130: Int = -1
var x1131: Boolean = true
var x1132: Int = x1114
val x1168 = while ({val x1133 = x1131
val x1134 = x1130
val x1135 = x1132
val x1136 = x1134 != x1135
val x1137 = x1133 && x1136
x1137}) {
val x1139 = x1132
x1130 = x1139
val x1141 = x1139 >= x962
val x1166 = if (x1141) {
x1131 = false
()
} else {
val x1145 = x942(x1139)
val x1146 = x1145 > ' '
val x1147 = x1145 != ''
val x1148 = x1146 && x1147
val x1164 = if (x1148) {
val x1151 = x1126
val x1152 = x1127
val x1153 = x1128
val x1155 = x1151+x1145
x1126 = x1155
x1127 = false
val x1149 = x1139 + 1
x1128 = x1149
x1132 = x1149
()
} else {
x1131 = false
()
}
x1164
}
x1166
}
val x1169 = x1126
val x1170 = x1127
val x1171 = x1128
val x1177 = if (x1170) {
true
} else {
false
}
val x1186 = if (x1177) {
false
} else {
false
}
val x1192 = if (x1186) {
true
} else {
false
}
val x1215 = if (x1192) {
x161
} else {
val x1191 = if (x1186) {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
x993
} else {
val x1183 = if (x1177) {
x161
} else {
val x1176 = if (x1170) {
x161
} else {
val x1174 = new Anon1863173035("","","","",x1169,80)
x1174
}
x1176
}
val x1184 = if (x1177) {
false
} else {
true
}
val x1185 = new OptionAnon1863173035(x1183,x1184)
val x1189 = new Tuple2StringOptionAnon1863173035(x1045,x1185)
x1189
}
val x1197 = x1191._2
val x1198 = x1197.defined
val x1207 = if (x1198) {
val x1199 = x1197.value
val x1200 = x1199.schema
x1200
} else {
""
}
val x1208 = if (x1198) {
val x1199 = x1197.value
val x1201 = x1199.hostName
x1201
} else {
""
}
val x1209 = if (x1198) {
val x1199 = x1197.value
val x1202 = x1199.path
x1202
} else {
""
}
val x1196 = x1191._1
val x1210 = if (x1198) {
x1196
} else {
x1196
}
val x1211 = if (x1198) {
val x1199 = x1197.value
val x1203 = x1199.fragment
x1203
} else {
""
}
val x1212 = if (x1198) {
val x1199 = x1197.value
val x1204 = x1199.port
x1204
} else {
80
}
val x1213 = new Anon1863173035(x1207,x1208,x1209,x1210,x1211,x1212)
x1213
}
x943 = x1215
val x1216 = if (x1192) {
true
} else {
false
}
x944 = x1216
val x1193 = if (x1186) {
0
} else {
val x1178 = if (x1170) {
x1171
} else {
x1171
}
val x1187 = if (x1177) {
x1178
} else {
x1178
}
x1187
}
val x1217 = if (x1192) {
x1193
} else {
x1193
}
x945 = x1217
()
}
x1223
} else {
val x1060 = new Anon1863173035("","","",x1045,"",80)
x943 = x1060
x944 = false
x945 = x1047
()
}
x1229
}
x1231
}
x1233
}
val x1236 = x943
val x1237 = x944
val x1238 = x945
val x1239 = new ParseResultAnon1863173035(x1236,x1237,x1238)
val x1240 = println(x1239)
x1240
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,asdf,80),false,17)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asd,,80),false,3)
nVars=2000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqPathParse extends ((Array[Char])=>(Unit)) {
def apply(x1539:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x1540: Anon1863173035 = x161
var x1541: Boolean = true
var x1542: Int = -1
var x2016: java.lang.String = ""
var x2017: Boolean = false
var x2018: Int = 0
var x2020: Int = -1
var x2021: Boolean = true
var x2022: Int = 0
val x1556 = x1539.length
val x2062 = while ({val x2023 = x2021
val x2024 = x2020
val x2025 = x2022
val x2026 = x2024 != x2025
val x2027 = x2023 && x2026
x2027}) {
val x2029 = x2022
x2020 = x2029
val x2031 = x2029 >= x1556
val x2060 = if (x2031) {
x2021 = false
()
} else {
val x2035 = x1539(x2029)
val x2036 = x2035 > ' '
val x2037 = x2035 != '#'
val x2038 = x2036 && x2037
val x2039 = x2035 != '?'
val x2040 = x2038 && x2039
val x2041 = x2035 != ''
val x2042 = x2040 && x2041
val x2058 = if (x2042) {
val x2045 = x2016
val x2046 = x2017
val x2047 = x2018
val x2049 = x2045+x2035
x2016 = x2049
x2017 = false
val x2043 = x2029 + 1
x2018 = x2043
x2022 = x2043
()
} else {
x2021 = false
()
}
x2058
}
x2060
}
val x2063 = x2016
val x2064 = x2017
val x2065 = x2018
val x2481 = if (x2064) {
x1540 = x161
x1541 = true
x1542 = 0
()
} else {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x1869 = {x1550: (Int) => 
var x1552: Anon1863173035 = x161
var x1553: Boolean = true
var x1554: Int = x1550
val x1557 = x1550 >= x1556
val x1863 = if (x1557) {
x1552 = x161
x1553 = true
x1554 = x1550
()
} else {
val x1563 = x1539(x1550)
val x1564 = x1563 == '?'
val x1861 = if (x1564) {
var x1568: java.lang.String = ""
var x1569: Boolean = false
val x1565 = x1550 + 1
var x1570: Int = x1565
var x1572: Int = -1
var x1573: Boolean = true
var x1574: Int = x1565
val x1608 = while ({val x1575 = x1573
val x1576 = x1572
val x1577 = x1574
val x1578 = x1576 != x1577
val x1579 = x1575 && x1578
x1579}) {
val x1581 = x1574
x1572 = x1581
val x1583 = x1581 >= x1556
val x1606 = if (x1583) {
x1573 = false
()
} else {
val x1587 = x1539(x1581)
val x1588 = x1587 == '?'
val x1604 = if (x1588) {
val x1591 = x1568
val x1592 = x1569
val x1593 = x1570
val x1595 = x1591+x1587
x1568 = x1595
x1569 = false
val x1589 = x1581 + 1
x1570 = x1589
x1574 = x1589
()
} else {
x1573 = false
()
}
x1604
}
x1606
}
val x1609 = x1568
val x1610 = x1569
val x1611 = x1570
val x1855 = if (x1610) {
x1552 = x161
x1553 = true
x1554 = x1565
()
} else {
var x1621: java.lang.String = ""
var x1622: Boolean = false
var x1623: Int = x1611
var x1625: Int = -1
var x1626: Boolean = true
var x1627: Int = x1611
val x1665 = while ({val x1628 = x1626
val x1629 = x1625
val x1630 = x1627
val x1631 = x1629 != x1630
val x1632 = x1628 && x1631
x1632}) {
val x1634 = x1627
x1625 = x1634
val x1636 = x1634 >= x1556
val x1663 = if (x1636) {
x1626 = false
()
} else {
val x1640 = x1539(x1634)
val x1641 = x1640 > ' '
val x1642 = x1640 != '#'
val x1643 = x1641 && x1642
val x1644 = x1640 != ''
val x1645 = x1643 && x1644
val x1661 = if (x1645) {
val x1648 = x1621
val x1649 = x1622
val x1650 = x1623
val x1652 = x1648+x1640
x1621 = x1652
x1622 = false
val x1646 = x1634 + 1
x1623 = x1646
x1627 = x1646
()
} else {
x1626 = false
()
}
x1661
}
x1663
}
val x1666 = x1621
val x1667 = x1622
val x1668 = x1623
val x1853 = if (x1667) {
x1552 = x161
x1553 = true
x1554 = x1565
()
} else {
val x1674 = x1668 >= x1556
val x1851 = if (x1674) {
val x1680 = new Anon1863173035("","","",x1666,"",80)
x1552 = x1680
x1553 = false
x1554 = x1668
()
} else {
val x1686 = x1539(x1668)
val x1687 = x1686 == '#'
val x1849 = if (x1687) {
var x1691: java.lang.String = ""
var x1692: Boolean = false
val x1688 = x1668 + 1
var x1693: Int = x1688
var x1695: Int = -1
var x1696: Boolean = true
var x1697: Int = x1688
val x1731 = while ({val x1698 = x1696
val x1699 = x1695
val x1700 = x1697
val x1701 = x1699 != x1700
val x1702 = x1698 && x1701
x1702}) {
val x1704 = x1697
x1695 = x1704
val x1706 = x1704 >= x1556
val x1729 = if (x1706) {
x1696 = false
()
} else {
val x1710 = x1539(x1704)
val x1711 = x1710 == '#'
val x1727 = if (x1711) {
val x1714 = x1691
val x1715 = x1692
val x1716 = x1693
val x1718 = x1714+x1710
x1691 = x1718
x1692 = false
val x1712 = x1704 + 1
x1693 = x1712
x1697 = x1712
()
} else {
x1696 = false
()
}
x1727
}
x1729
}
val x1732 = x1691
val x1733 = x1692
val x1734 = x1693
val x1843 = if (x1733) {
val x1680 = new Anon1863173035("","","",x1666,"",80)
x1552 = x1680
x1553 = false
x1554 = x1688
()
} else {
var x1746: java.lang.String = ""
var x1747: Boolean = false
var x1748: Int = x1734
var x1750: Int = -1
var x1751: Boolean = true
var x1752: Int = x1734
val x1788 = while ({val x1753 = x1751
val x1754 = x1750
val x1755 = x1752
val x1756 = x1754 != x1755
val x1757 = x1753 && x1756
x1757}) {
val x1759 = x1752
x1750 = x1759
val x1761 = x1759 >= x1556
val x1786 = if (x1761) {
x1751 = false
()
} else {
val x1765 = x1539(x1759)
val x1766 = x1765 > ' '
val x1767 = x1765 != ''
val x1768 = x1766 && x1767
val x1784 = if (x1768) {
val x1771 = x1746
val x1772 = x1747
val x1773 = x1748
val x1775 = x1771+x1765
x1746 = x1775
x1747 = false
val x1769 = x1759 + 1
x1748 = x1769
x1752 = x1769
()
} else {
x1751 = false
()
}
x1784
}
x1786
}
val x1789 = x1746
val x1790 = x1747
val x1791 = x1748
val x1797 = if (x1790) {
true
} else {
false
}
val x1806 = if (x1797) {
false
} else {
false
}
val x1812 = if (x1806) {
true
} else {
false
}
val x1835 = if (x1812) {
x161
} else {
val x1811 = if (x1806) {
x993
} else {
val x1803 = if (x1797) {
x161
} else {
val x1796 = if (x1790) {
x161
} else {
val x1794 = new Anon1863173035("","","","",x1789,80)
x1794
}
x1796
}
val x1804 = if (x1797) {
false
} else {
true
}
val x1805 = new OptionAnon1863173035(x1803,x1804)
val x1809 = new Tuple2StringOptionAnon1863173035(x1666,x1805)
x1809
}
val x1817 = x1811._2
val x1818 = x1817.defined
val x1827 = if (x1818) {
val x1819 = x1817.value
val x1820 = x1819.schema
x1820
} else {
""
}
val x1828 = if (x1818) {
val x1819 = x1817.value
val x1821 = x1819.hostName
x1821
} else {
""
}
val x1829 = if (x1818) {
val x1819 = x1817.value
val x1822 = x1819.path
x1822
} else {
""
}
val x1816 = x1811._1
val x1830 = if (x1818) {
x1816
} else {
x1816
}
val x1831 = if (x1818) {
val x1819 = x1817.value
val x1823 = x1819.fragment
x1823
} else {
""
}
val x1832 = if (x1818) {
val x1819 = x1817.value
val x1824 = x1819.port
x1824
} else {
80
}
val x1833 = new Anon1863173035(x1827,x1828,x1829,x1830,x1831,x1832)
x1833
}
x1552 = x1835
val x1836 = if (x1812) {
true
} else {
false
}
x1553 = x1836
val x1813 = if (x1806) {
x1565
} else {
val x1798 = if (x1790) {
x1791
} else {
x1791
}
val x1807 = if (x1797) {
x1798
} else {
x1798
}
x1807
}
val x1837 = if (x1812) {
x1813
} else {
x1813
}
x1554 = x1837
()
}
x1843
} else {
val x1680 = new Anon1863173035("","","",x1666,"",80)
x1552 = x1680
x1553 = false
x1554 = x1668
()
}
x1849
}
x1851
}
x1853
}
x1855
} else {
x1552 = x161
x1553 = true
x1554 = x1550
()
}
x1861
}
val x1864 = x1552
val x1865 = x1553
val x1866 = x1554
val x1867 = new ParseResultAnon1863173035(x1864,x1865,x1866)
x1867
}
val x2015 = {x1544: (Int) => 
var x1546: Anon1863173035 = x161
var x1547: Boolean = true
var x1548: Int = x1544
val x1870 = x1869(x1544)
val x1871 = x1870.empty
val x2009 = if (x1871) {
val x1872 = x1544 >= x1556
val x2001 = if (x1872) {
x1546 = x161
x1547 = true
x1548 = x1544
()
} else {
val x1878 = x1539(x1544)
val x1879 = x1878 == '#'
val x1999 = if (x1879) {
var x1883: java.lang.String = ""
var x1884: Boolean = false
val x1880 = x1544 + 1
var x1885: Int = x1880
var x1887: Int = -1
var x1888: Boolean = true
var x1889: Int = x1880
val x1923 = while ({val x1890 = x1888
val x1891 = x1887
val x1892 = x1889
val x1893 = x1891 != x1892
val x1894 = x1890 && x1893
x1894}) {
val x1896 = x1889
x1887 = x1896
val x1898 = x1896 >= x1556
val x1921 = if (x1898) {
x1888 = false
()
} else {
val x1902 = x1539(x1896)
val x1903 = x1902 == '#'
val x1919 = if (x1903) {
val x1906 = x1883
val x1907 = x1884
val x1908 = x1885
val x1910 = x1906+x1902
x1883 = x1910
x1884 = false
val x1904 = x1896 + 1
x1885 = x1904
x1889 = x1904
()
} else {
x1888 = false
()
}
x1919
}
x1921
}
val x1924 = x1883
val x1925 = x1884
val x1926 = x1885
val x1993 = if (x1925) {
x1546 = x161
x1547 = true
x1548 = x1880
()
} else {
var x1935: java.lang.String = ""
var x1936: Boolean = false
var x1937: Int = x1926
var x1939: Int = -1
var x1940: Boolean = true
var x1941: Int = x1926
val x1977 = while ({val x1942 = x1940
val x1943 = x1939
val x1944 = x1941
val x1945 = x1943 != x1944
val x1946 = x1942 && x1945
x1946}) {
val x1948 = x1941
x1939 = x1948
val x1950 = x1948 >= x1556
val x1975 = if (x1950) {
x1940 = false
()
} else {
val x1954 = x1539(x1948)
val x1955 = x1954 > ' '
val x1956 = x1954 != ''
val x1957 = x1955 && x1956
val x1973 = if (x1957) {
val x1960 = x1935
val x1961 = x1936
val x1962 = x1937
val x1964 = x1960+x1954
x1935 = x1964
x1936 = false
val x1958 = x1948 + 1
x1937 = x1958
x1941 = x1958
()
} else {
x1940 = false
()
}
x1973
}
x1975
}
val x1978 = x1935
val x1979 = x1936
val x1980 = x1937
val x1985 = if (x1979) {
x161
} else {
val x1983 = new Anon1863173035("","","","",x1978,80)
x1983
}
x1546 = x1985
val x1986 = if (x1979) {
true
} else {
false
}
x1547 = x1986
val x1987 = if (x1979) {
x1980
} else {
x1980
}
x1548 = x1987
()
}
x1993
} else {
x1546 = x161
x1547 = true
x1548 = x1544
()
}
x1999
}
x2001
} else {
val x2003 = x1870.res
x1546 = x2003
x1547 = x1871
val x2006 = x1870.next
x1548 = x2006
()
}
val x2010 = x1546
val x2011 = x1547
val x2012 = x1548
val x2013 = new ParseResultAnon1863173035(x2010,x2011,x2012)
x2013
}
val x2071 = x2015(x2065)
val x2072 = x2071.empty
val x2081 = if (x2072) {
false
} else {
false
}
val x2087 = if (x2081) {
true
} else {
false
}
val x2479 = if (x2087) {
x1540 = x161
x1541 = true
val x2088 = if (x2081) {
0
} else {
val x2073 = x2071.next
val x2082 = if (x2072) {
x2073
} else {
x2073
}
x2082
}
x1542 = x2088
()
} else {
val x2088 = if (x2081) {
0
} else {
val x2073 = x2071.next
val x2082 = if (x2072) {
x2073
} else {
x2073
}
x2082
}
val x2095 = x2088 >= x1556
val x2477 = if (x2095) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
} else {
val x2128 = x1539(x2088)
val x2129 = x2128 == 'H'
val x2475 = if (x2129) {
val x2130 = x2088 + 1
val x2132 = x2130 >= x1556
val x2469 = if (x2132) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
} else {
val x2140 = x1539(x2130)
val x2141 = x2140 == 'T'
val x2467 = if (x2141) {
val x2142 = x2130 + 1
val x2144 = x2142 >= x1556
val x2461 = if (x2144) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
} else {
val x2152 = x1539(x2142)
val x2153 = x2152 == 'T'
val x2459 = if (x2153) {
val x2154 = x2142 + 1
val x2156 = x2154 >= x1556
val x2453 = if (x2156) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
} else {
val x2164 = x1539(x2154)
val x2165 = x2164 == 'P'
val x2451 = if (x2165) {
val x2166 = x2154 + 1
val x2168 = x2166 >= x1556
val x2445 = if (x2168) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
} else {
val x2176 = x1539(x2166)
val x2177 = x2176 == '/'
val x2443 = if (x2177) {
val x2178 = x2166 + 1
val x2201 = x2178 >= x1556
val x2437 = if (x2201) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
} else {
val x2212 = x1539(x2178)
val x2213 = x2212 >= '0'
val x2214 = x2212 <= '9'
val x2215 = x2213 && x2214
val x2435 = if (x2215) {
val x2218 = x2212 - '0'
val x2219 = x2218.toInt
var x2221: Int = x2219
var x2222: Boolean = false
val x2216 = x2178 + 1
var x2223: Int = x2216
var x2225: Int = -1
var x2226: Boolean = true
var x2227: Int = x2216
val x2268 = while ({val x2228 = x2226
val x2229 = x2225
val x2230 = x2227
val x2231 = x2229 != x2230
val x2232 = x2228 && x2231
x2232}) {
val x2234 = x2227
x2225 = x2234
val x2236 = x2234 >= x1556
val x2266 = if (x2236) {
x2226 = false
()
} else {
val x2241 = x1539(x2234)
val x2242 = x2241 >= '0'
val x2243 = x2241 <= '9'
val x2244 = x2242 && x2243
val x2264 = if (x2244) {
val x2250 = x2221
val x2251 = x2222
val x2252 = x2223
val x2247 = x2241 - '0'
val x2248 = x2247.toInt
val x2254 = x2250 * 10
val x2255 = x2254 + x2248
x2221 = x2255
x2222 = false
val x2245 = x2234 + 1
x2223 = x2245
x2227 = x2245
()
} else {
x2226 = false
()
}
x2264
}
x2266
}
val x2269 = x2221
val x2270 = x2222
val x2271 = x2223
val x2274 = if (x2270) {
true
} else {
x2270
}
val x2429 = if (x2274) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
} else {
val x2275 = if (x2270) {
x2178
} else {
x2271
}
val x2281 = x2275 >= x1556
val x2427 = if (x2281) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
} else {
val x2288 = x1539(x2275)
val x2289 = x2288 == '.'
val x2425 = if (x2289) {
val x2290 = x2275 + 1
val x2292 = x2290 >= x1556
val x2419 = if (x2292) {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
} else {
val x2299 = x1539(x2290)
val x2300 = x2299 >= '0'
val x2301 = x2299 <= '9'
val x2302 = x2300 && x2301
val x2417 = if (x2302) {
val x2305 = x2299 - '0'
val x2306 = x2305.toInt
var x2308: Int = x2306
var x2309: Boolean = false
val x2303 = x2290 + 1
var x2310: Int = x2303
var x2312: Int = -1
var x2313: Boolean = true
var x2314: Int = x2303
val x2355 = while ({val x2315 = x2313
val x2316 = x2312
val x2317 = x2314
val x2318 = x2316 != x2317
val x2319 = x2315 && x2318
x2319}) {
val x2321 = x2314
x2312 = x2321
val x2323 = x2321 >= x1556
val x2353 = if (x2323) {
x2313 = false
()
} else {
val x2328 = x1539(x2321)
val x2329 = x2328 >= '0'
val x2330 = x2328 <= '9'
val x2331 = x2329 && x2330
val x2351 = if (x2331) {
val x2337 = x2308
val x2338 = x2309
val x2339 = x2310
val x2334 = x2328 - '0'
val x2335 = x2334.toInt
val x2341 = x2337 * 10
val x2342 = x2341 + x2335
x2308 = x2342
x2309 = false
val x2332 = x2321 + 1
x2310 = x2332
x2314 = x2332
()
} else {
x2313 = false
()
}
x2351
}
x2353
}
val x2356 = x2308
val x2357 = x2309
val x2358 = x2310
val x2361 = if (x2357) {
true
} else {
x2357
}
val x2367 = if (x2361) {
true
} else {
false
}
val x2376 = if (x2367) {
false
} else {
false
}
val x2381 = if (x2376) {
true
} else {
false
}
val x2405 = if (x2381) {
x161
} else {
val x2380 = if (x2376) {
x993
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
x2086
}
val x2386 = x2380._2
val x2387 = x2386.defined
val x2397 = if (x2387) {
val x2388 = x2386.value
val x2390 = x2388.schema
x2390
} else {
""
}
val x2398 = if (x2387) {
val x2388 = x2386.value
val x2391 = x2388.hostName
x2391
} else {
""
}
val x2385 = x2380._1
val x2389 = "/"+x2385
val x2399 = if (x2387) {
x2389
} else {
x2389
}
val x2400 = if (x2387) {
val x2388 = x2386.value
val x2392 = x2388.queryString
x2392
} else {
""
}
val x2401 = if (x2387) {
val x2388 = x2386.value
val x2393 = x2388.fragment
x2393
} else {
""
}
val x2402 = if (x2387) {
val x2388 = x2386.value
val x2394 = x2388.port
x2394
} else {
80
}
val x2403 = new Anon1863173035(x2397,x2398,x2399,x2400,x2401,x2402)
x2403
}
x1540 = x2405
val x2406 = if (x2381) {
true
} else {
false
}
x1541 = x2406
val x2382 = if (x2376) {
0
} else {
val x2368 = if (x2361) {
x2178
} else {
val x2362 = if (x2357) {
x2290
} else {
x2358
}
x2362
}
val x2377 = if (x2367) {
x2368
} else {
x2368
}
x2377
}
val x2407 = if (x2381) {
x2382
} else {
x2382
}
x1542 = x2407
()
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
}
x2417
}
x2419
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
}
x2425
}
x2427
}
x2429
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2178
()
}
x2435
}
x2437
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
}
x2443
}
x2445
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
}
x2451
}
x2453
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
}
x2459
}
x2461
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
}
x2467
}
x2469
} else {
val x2086 = if (x2081) {
x993
} else {
val x2078 = if (x2072) {
x161
} else {
val x2075 = x2071.res
x2075
}
val x2079 = if (x2072) {
false
} else {
true
}
val x2080 = new OptionAnon1863173035(x2078,x2079)
val x2084 = new Tuple2StringOptionAnon1863173035(x2063,x2080)
x2084
}
val x2105 = x2086._2
val x2106 = x2105.defined
val x2116 = if (x2106) {
val x2107 = x2105.value
val x2109 = x2107.schema
x2109
} else {
""
}
val x2117 = if (x2106) {
val x2107 = x2105.value
val x2110 = x2107.hostName
x2110
} else {
""
}
val x2104 = x2086._1
val x2108 = "/"+x2104
val x2118 = if (x2106) {
x2108
} else {
x2108
}
val x2119 = if (x2106) {
val x2107 = x2105.value
val x2111 = x2107.queryString
x2111
} else {
""
}
val x2120 = if (x2106) {
val x2107 = x2105.value
val x2112 = x2107.fragment
x2112
} else {
""
}
val x2121 = if (x2106) {
val x2107 = x2105.value
val x2113 = x2107.port
x2113
} else {
80
}
val x2122 = new Anon1863173035(x2116,x2117,x2118,x2119,x2120,x2121)
x1540 = x2122
x1541 = false
x1542 = x2088
()
}
x2475
}
x2477
}
x2479
}
val x2482 = x1540
val x2483 = x1541
val x2484 = x1542
val x2485 = new ParseResultAnon1863173035(x2482,x2483,x2484)
val x2486 = println(x2485)
x2486
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=3000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,/,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,/,,asdfadsf,80),false,10)
ParseResultAnon1863173035(Anon1863173035(,,/adsfasd.html,asdf,adsf,80),false,24)
ParseResultAnon1863173035(Anon1863173035(,,/asd,,,80),false,3)
nVars=4000
nVars=5000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class urlParse extends ((Array[Char])=>(Unit)) {
def apply(x3435:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x3436: Anon1863173035 = x161
var x3437: Boolean = true
var x3438: Int = -1
val x1 = null.asInstanceOf[java.lang.String]
val x3452 = x3435.length
val x171 = null.asInstanceOf[Tuple2CharString]
val x3633 = {x3446: (Int) => 
var x3448: java.lang.String = x1
var x3449: Boolean = true
var x3450: Int = x3446
val x3453 = x3446 >= x3452
val x3627 = if (x3453) {
x3448 = x1
x3449 = true
x3450 = x3446
()
} else {
val x3460 = x3435(x3446)
val x3461 = x3460 >= 'a'
val x3462 = x3460 <= 'z'
val x3463 = x3461 && x3462
val x3464 = x3460 >= 'A'
val x3465 = x3460 <= 'Z'
val x3466 = x3464 && x3465
val x3467 = x3463 || x3466
val x3625 = if (x3467) {
var x3471: java.lang.String = ""
var x3472: Boolean = false
val x3468 = x3446 + 1
var x3473: Int = x3468
var x3475: Int = -1
var x3476: Boolean = true
var x3477: Int = x3468
val x3517 = while ({val x3478 = x3476
val x3479 = x3475
val x3480 = x3477
val x3481 = x3479 != x3480
val x3482 = x3478 && x3481
x3482}) {
val x3484 = x3477
x3475 = x3484
val x3486 = x3484 >= x3452
val x3515 = if (x3486) {
x3476 = false
()
} else {
val x3490 = x3435(x3484)
val x3491 = x3490 >= 'a'
val x3492 = x3490 <= 'z'
val x3493 = x3491 && x3492
val x3494 = x3490 >= 'A'
val x3495 = x3490 <= 'Z'
val x3496 = x3494 && x3495
val x3497 = x3493 || x3496
val x3513 = if (x3497) {
val x3500 = x3471
val x3501 = x3472
val x3502 = x3473
val x3504 = x3500+x3490
x3471 = x3504
x3472 = false
val x3498 = x3484 + 1
x3473 = x3498
x3477 = x3498
()
} else {
x3476 = false
()
}
x3513
}
x3515
}
val x3518 = x3471
val x3519 = x3472
val x3520 = x3473
val x3525 = if (x3519) {
true
} else {
false
}
val x3534 = if (x3525) {
true
} else {
false
}
val x3619 = if (x3534) {
val x3533 = if (x3525) {
x1
} else {
val x3524 = if (x3519) {
x171
} else {
val x3522 = new Tuple2CharString(x3460,x3518)
x3522
}
val x3529 = x3524._1
val x3530 = x3524._2
val x3531 = x3529+x3530
x3531
}
x3448 = x3533
x3449 = x3534
val x3526 = if (x3519) {
x3446
} else {
x3520
}
val x3535 = if (x3525) {
x3526
} else {
x3526
}
x3450 = x3535
()
} else {
val x3526 = if (x3519) {
x3446
} else {
x3520
}
val x3535 = if (x3525) {
x3526
} else {
x3526
}
val x3541 = x3535 >= x3452
val x3617 = if (x3541) {
x3448 = x1
x3449 = true
x3450 = x3446
()
} else {
val x3549 = x3435(x3535)
val x3550 = x3549 == ':'
val x3615 = if (x3550) {
val x3551 = x3535 + 1
val x3553 = x3551 >= x3452
val x3609 = if (x3553) {
x3448 = x1
x3449 = true
x3450 = x3446
()
} else {
val x3561 = x3435(x3551)
val x3562 = x3561 == '/'
val x3607 = if (x3562) {
val x3563 = x3551 + 1
val x3565 = x3563 >= x3452
val x3601 = if (x3565) {
x3448 = x1
x3449 = true
x3450 = x3446
()
} else {
val x3573 = x3435(x3563)
val x3574 = x3573 == '/'
val x3599 = if (x3574) {
val x3533 = if (x3525) {
x1
} else {
val x3524 = if (x3519) {
x171
} else {
val x3522 = new Tuple2CharString(x3460,x3518)
x3522
}
val x3529 = x3524._1
val x3530 = x3524._2
val x3531 = x3529+x3530
x3531
}
x3448 = x3533
x3449 = false
val x3575 = x3563 + 1
x3450 = x3575
()
} else {
x3448 = x1
x3449 = true
x3450 = x3446
()
}
x3599
}
x3601
} else {
x3448 = x1
x3449 = true
x3450 = x3446
()
}
x3607
}
x3609
} else {
x3448 = x1
x3449 = true
x3450 = x3446
()
}
x3615
}
x3617
}
x3619
} else {
x3448 = x1
x3449 = true
x3450 = x3446
()
}
x3625
}
val x3628 = x3448
val x3629 = x3449
val x3630 = x3450
val x3631 = new ParseResultString(x3628,x3629,x3630)
x3631
}
val x3676 = {x3440: (Int) => 
var x3442: java.lang.String = x1
var x3443: Boolean = true
var x3444: Int = x3440
val x3634 = x3633(x3440)
val x3635 = x3634.empty
val x3670 = if (x3635) {
val x3636 = x3440 >= x3452
val x3662 = if (x3636) {
x3442 = x1
x3443 = true
x3444 = x3440
()
} else {
val x3642 = x3435(x3440)
val x3643 = x3642 >= '0'
val x3644 = x3642 <= '9'
val x3645 = x3643 && x3644
val x3646 = x3642 == '.'
val x3647 = x3645 || x3646
val x3660 = if (x3647) {
val x3650 = ""+x3642
x3442 = x3650
x3443 = false
val x3648 = x3440 + 1
x3444 = x3648
()
} else {
x3442 = x1
x3443 = true
x3444 = x3440
()
}
x3660
}
x3662
} else {
val x3664 = x3634.res
x3442 = x3664
x3443 = x3635
val x3667 = x3634.next
x3444 = x3667
()
}
val x3671 = x3442
val x3672 = x3443
val x3673 = x3444
val x3674 = new ParseResultString(x3671,x3672,x3673)
x3674
}
val x4974 = x3676(0)
val x4975 = x4974.empty
val x5421 = if (x4975) {
x3436 = x161
x3437 = true
x3438 = 0
()
} else {
val x4982 = x4974.next
val x4983 = x4982 >= x3452
val x5419 = if (x4983) {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x4993 = x4973(x4982)
val x4994 = x4993.empty
val x5000 = if (x4994) {
true
} else {
false
}
val x5026 = if (x5000) {
x161
} else {
val x4999 = if (x4994) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x1056 = new OptionAnon1863173035(x161,false)
val x4990 = x4974.res
val x4991 = new Tuple2StringOptionAnon1863173035(x4990,x1056)
val x4995 = x4993.res
val x4996 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x4991,x4995)
x4996
}
val x5004 = x4999._1
val x5006 = x5004._1
val x5007 = x5004._2
val x5008 = x5007.defined
val x5018 = if (x5008) {
x5006
} else {
x5006
}
val x5005 = x4999._2
val x5019 = if (x5008) {
val x5009 = x5007.value
val x5010 = x5009.hostName
x5010
} else {
val x5016 = x5005.hostName
x5016
}
val x5011 = x5005.path
val x5020 = if (x5008) {
x5011
} else {
x5011
}
val x5012 = x5005.queryString
val x5021 = if (x5008) {
x5012
} else {
x5012
}
val x5013 = x5005.fragment
val x5022 = if (x5008) {
x5013
} else {
x5013
}
val x5014 = x5005.port
val x5023 = if (x5008) {
x5014
} else {
x5014
}
val x5024 = new Anon1863173035(x5018,x5019,x5020,x5021,x5022,x5023)
x5024
}
x3436 = x5026
val x5027 = if (x5000) {
true
} else {
false
}
x3437 = x5027
val x5001 = if (x4994) {
0
} else {
val x4997 = x4993.next
x4997
}
val x5028 = if (x5000) {
x5001
} else {
x5001
}
x3438 = x5028
()
} else {
val x5034 = x3435(x4982)
val x5035 = x5034 >= '0'
val x5036 = x5034 <= '9'
val x5037 = x5035 && x5036
val x5038 = x5034 >= 'a'
val x5039 = x5034 <= 'z'
val x5040 = x5038 && x5039
val x5041 = x5034 >= 'A'
val x5042 = x5034 <= 'Z'
val x5043 = x5041 && x5042
val x5044 = x5040 || x5043
val x5045 = x5037 || x5044
val x5046 = x5034 == '-'
val x5047 = x5045 || x5046
val x5048 = x5034 == '.'
val x5049 = x5047 || x5048
val x5417 = if (x5049) {
var x5053: java.lang.String = ""
var x5054: Boolean = false
val x5050 = x4982 + 1
var x5055: Int = x5050
var x5057: Int = -1
var x5058: Boolean = true
var x5059: Int = x5050
val x5107 = while ({val x5060 = x5058
val x5061 = x5057
val x5062 = x5059
val x5063 = x5061 != x5062
val x5064 = x5060 && x5063
x5064}) {
val x5066 = x5059
x5057 = x5066
val x5068 = x5066 >= x3452
val x5105 = if (x5068) {
x5058 = false
()
} else {
val x5072 = x3435(x5066)
val x5073 = x5072 >= '0'
val x5074 = x5072 <= '9'
val x5075 = x5073 && x5074
val x5076 = x5072 >= 'a'
val x5077 = x5072 <= 'z'
val x5078 = x5076 && x5077
val x5079 = x5072 >= 'A'
val x5080 = x5072 <= 'Z'
val x5081 = x5079 && x5080
val x5082 = x5078 || x5081
val x5083 = x5075 || x5082
val x5084 = x5072 == '-'
val x5085 = x5083 || x5084
val x5086 = x5072 == '.'
val x5087 = x5085 || x5086
val x5103 = if (x5087) {
val x5090 = x5053
val x5091 = x5054
val x5092 = x5055
val x5094 = x5090+x5072
x5053 = x5094
x5054 = false
val x5088 = x5066 + 1
x5055 = x5088
x5059 = x5088
()
} else {
x5058 = false
()
}
x5103
}
x5105
}
val x5108 = x5053
val x5109 = x5054
val x5110 = x5055
val x5115 = if (x5109) {
true
} else {
false
}
val x5124 = if (x5115) {
true
} else {
false
}
val x5411 = if (x5124) {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x4993 = x4973(x4982)
val x4994 = x4993.empty
val x5000 = if (x4994) {
true
} else {
false
}
val x5026 = if (x5000) {
x161
} else {
val x4999 = if (x4994) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x1056 = new OptionAnon1863173035(x161,false)
val x4990 = x4974.res
val x4991 = new Tuple2StringOptionAnon1863173035(x4990,x1056)
val x4995 = x4993.res
val x4996 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x4991,x4995)
x4996
}
val x5004 = x4999._1
val x5006 = x5004._1
val x5007 = x5004._2
val x5008 = x5007.defined
val x5018 = if (x5008) {
x5006
} else {
x5006
}
val x5005 = x4999._2
val x5019 = if (x5008) {
val x5009 = x5007.value
val x5010 = x5009.hostName
x5010
} else {
val x5016 = x5005.hostName
x5016
}
val x5011 = x5005.path
val x5020 = if (x5008) {
x5011
} else {
x5011
}
val x5012 = x5005.queryString
val x5021 = if (x5008) {
x5012
} else {
x5012
}
val x5013 = x5005.fragment
val x5022 = if (x5008) {
x5013
} else {
x5013
}
val x5014 = x5005.port
val x5023 = if (x5008) {
x5014
} else {
x5014
}
val x5024 = new Anon1863173035(x5018,x5019,x5020,x5021,x5022,x5023)
x5024
}
x3436 = x5026
val x5027 = if (x5000) {
true
} else {
false
}
x3437 = x5027
val x5001 = if (x4994) {
0
} else {
val x4997 = x4993.next
x4997
}
val x5028 = if (x5000) {
x5001
} else {
x5001
}
x3438 = x5028
()
} else {
val x5116 = if (x5109) {
x4982
} else {
x5110
}
val x5125 = if (x5115) {
x5116
} else {
x5116
}
val x5131 = x5125 >= x3452
val x5409 = if (x5131) {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x5143 = x4973(x5125)
val x5144 = x5143.empty
val x5150 = if (x5144) {
true
} else {
false
}
val x5176 = if (x5150) {
x161
} else {
val x5149 = if (x5144) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x4990 = x4974.res
val x5123 = if (x5115) {
x1
} else {
val x5114 = if (x5109) {
x171
} else {
val x5112 = new Tuple2CharString(x5034,x5108)
x5112
}
val x5119 = x5114._1
val x5120 = x5114._2
val x5121 = x5119+x5120
x5121
}
val x5137 = new Anon1863173035("",x5123,"","","",80)
val x5139 = new OptionAnon1863173035(x5137,true)
val x5141 = new Tuple2StringOptionAnon1863173035(x4990,x5139)
val x5145 = x5143.res
val x5146 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5141,x5145)
x5146
}
val x5154 = x5149._1
val x5156 = x5154._1
val x5157 = x5154._2
val x5158 = x5157.defined
val x5168 = if (x5158) {
x5156
} else {
x5156
}
val x5155 = x5149._2
val x5169 = if (x5158) {
val x5159 = x5157.value
val x5160 = x5159.hostName
x5160
} else {
val x5166 = x5155.hostName
x5166
}
val x5161 = x5155.path
val x5170 = if (x5158) {
x5161
} else {
x5161
}
val x5162 = x5155.queryString
val x5171 = if (x5158) {
x5162
} else {
x5162
}
val x5163 = x5155.fragment
val x5172 = if (x5158) {
x5163
} else {
x5163
}
val x5164 = x5155.port
val x5173 = if (x5158) {
x5164
} else {
x5164
}
val x5174 = new Anon1863173035(x5168,x5169,x5170,x5171,x5172,x5173)
x5174
}
x3436 = x5176
val x5177 = if (x5150) {
true
} else {
false
}
x3437 = x5177
val x5151 = if (x5144) {
0
} else {
val x5147 = x5143.next
x5147
}
val x5178 = if (x5150) {
x5151
} else {
x5151
}
x3438 = x5178
()
} else {
val x5184 = x3435(x5125)
val x5185 = x5184 == ':'
val x5407 = if (x5185) {
val x5186 = x5125 + 1
val x5188 = x5186 >= x3452
val x5401 = if (x5188) {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x5196 = x4973(x5186)
val x5197 = x5196.empty
val x5203 = if (x5197) {
true
} else {
false
}
val x5229 = if (x5203) {
x161
} else {
val x5202 = if (x5197) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x4990 = x4974.res
val x5123 = if (x5115) {
x1
} else {
val x5114 = if (x5109) {
x171
} else {
val x5112 = new Tuple2CharString(x5034,x5108)
x5112
}
val x5119 = x5114._1
val x5120 = x5114._2
val x5121 = x5119+x5120
x5121
}
val x5137 = new Anon1863173035("",x5123,"","","",80)
val x5139 = new OptionAnon1863173035(x5137,true)
val x5141 = new Tuple2StringOptionAnon1863173035(x4990,x5139)
val x5198 = x5196.res
val x5199 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5141,x5198)
x5199
}
val x5207 = x5202._1
val x5209 = x5207._1
val x5210 = x5207._2
val x5211 = x5210.defined
val x5221 = if (x5211) {
x5209
} else {
x5209
}
val x5208 = x5202._2
val x5222 = if (x5211) {
val x5212 = x5210.value
val x5213 = x5212.hostName
x5213
} else {
val x5219 = x5208.hostName
x5219
}
val x5214 = x5208.path
val x5223 = if (x5211) {
x5214
} else {
x5214
}
val x5215 = x5208.queryString
val x5224 = if (x5211) {
x5215
} else {
x5215
}
val x5216 = x5208.fragment
val x5225 = if (x5211) {
x5216
} else {
x5216
}
val x5217 = x5208.port
val x5226 = if (x5211) {
x5217
} else {
x5217
}
val x5227 = new Anon1863173035(x5221,x5222,x5223,x5224,x5225,x5226)
x5227
}
x3436 = x5229
val x5230 = if (x5203) {
true
} else {
false
}
x3437 = x5230
val x5204 = if (x5197) {
0
} else {
val x5200 = x5196.next
x5200
}
val x5231 = if (x5203) {
x5204
} else {
x5204
}
x3438 = x5231
()
} else {
val x5237 = x3435(x5186)
val x5238 = x5237 >= '0'
val x5239 = x5237 <= '9'
val x5240 = x5238 && x5239
val x5399 = if (x5240) {
val x5243 = x5237 - '0'
val x5244 = x5243.toInt
var x5246: Int = x5244
var x5247: Boolean = false
val x5241 = x5186 + 1
var x5248: Int = x5241
var x5250: Int = -1
var x5251: Boolean = true
var x5252: Int = x5241
val x5293 = while ({val x5253 = x5251
val x5254 = x5250
val x5255 = x5252
val x5256 = x5254 != x5255
val x5257 = x5253 && x5256
x5257}) {
val x5259 = x5252
x5250 = x5259
val x5261 = x5259 >= x3452
val x5291 = if (x5261) {
x5251 = false
()
} else {
val x5266 = x3435(x5259)
val x5267 = x5266 >= '0'
val x5268 = x5266 <= '9'
val x5269 = x5267 && x5268
val x5289 = if (x5269) {
val x5275 = x5246
val x5276 = x5247
val x5277 = x5248
val x5272 = x5266 - '0'
val x5273 = x5272.toInt
val x5279 = x5275 * 10
val x5280 = x5279 + x5273
x5246 = x5280
x5247 = false
val x5270 = x5259 + 1
x5248 = x5270
x5252 = x5270
()
} else {
x5251 = false
()
}
x5289
}
x5291
}
val x5294 = x5246
val x5295 = x5247
val x5296 = x5248
val x5299 = if (x5295) {
true
} else {
x5295
}
val x5308 = if (x5299) {
false
} else {
false
}
val x5314 = if (x5308) {
true
} else {
false
}
val x5330 = if (x5314) {
true
} else {
false
}
val x5339 = if (x5330) {
false
} else {
false
}
val x5345 = if (x5339) {
true
} else {
false
}
val x5393 = if (x5345) {
x3436 = x161
x3437 = true
x3438 = 0
()
} else {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x5346 = if (x5339) {
0
} else {
val x5315 = if (x5308) {
x4982
} else {
val x5300 = if (x5295) {
x5186
} else {
x5296
}
val x5309 = if (x5299) {
x5300
} else {
x5300
}
x5309
}
val x5331 = if (x5314) {
x5315
} else {
x5315
}
val x5340 = if (x5330) {
x5331
} else {
x5331
}
x5340
}
val x5352 = x4973(x5346)
val x5353 = x5352.empty
val x5359 = if (x5353) {
true
} else {
false
}
val x5385 = if (x5359) {
x161
} else {
val x5358 = if (x5353) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x5344 = if (x5339) {
x993
} else {
val x4990 = x4974.res
val x5336 = if (x5330) {
x161
} else {
val x5329 = if (x5314) {
x161
} else {
val x5313 = if (x5308) {
val x174 = null.asInstanceOf[Tuple2StringOptionInt]
x174
} else {
val x5123 = if (x5115) {
x1
} else {
val x5114 = if (x5109) {
x171
} else {
val x5112 = new Tuple2CharString(x5034,x5108)
x5112
}
val x5119 = x5114._1
val x5120 = x5114._2
val x5121 = x5119+x5120
x5121
}
val x5305 = if (x5299) {
val x280 = null.asInstanceOf[Int]
x280
} else {
val x5298 = if (x5295) {
val x280 = null.asInstanceOf[Int]
x280
} else {
x5294
}
x5298
}
val x5306 = if (x5299) {
false
} else {
true
}
val x5307 = new OptionInt(x5305,x5306)
val x5311 = new Tuple2StringOptionInt(x5123,x5307)
x5311
}
val x5319 = x5313._2
val x5320 = x5319.defined
val x5324 = if (x5320) {
""
} else {
""
}
val x5318 = x5313._1
val x5325 = if (x5320) {
x5318
} else {
x5318
}
val x5326 = if (x5320) {
val x5321 = x5319.value
x5321
} else {
80
}
val x5327 = new Anon1863173035(x5324,x5325,x5324,x5324,x5324,x5326)
x5327
}
x5329
}
val x5337 = if (x5330) {
false
} else {
true
}
val x5338 = new OptionAnon1863173035(x5336,x5337)
val x5342 = new Tuple2StringOptionAnon1863173035(x4990,x5338)
x5342
}
val x5354 = x5352.res
val x5355 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5344,x5354)
x5355
}
val x5363 = x5358._1
val x5365 = x5363._1
val x5366 = x5363._2
val x5367 = x5366.defined
val x5377 = if (x5367) {
x5365
} else {
x5365
}
val x5364 = x5358._2
val x5378 = if (x5367) {
val x5368 = x5366.value
val x5369 = x5368.hostName
x5369
} else {
val x5375 = x5364.hostName
x5375
}
val x5370 = x5364.path
val x5379 = if (x5367) {
x5370
} else {
x5370
}
val x5371 = x5364.queryString
val x5380 = if (x5367) {
x5371
} else {
x5371
}
val x5372 = x5364.fragment
val x5381 = if (x5367) {
x5372
} else {
x5372
}
val x5373 = x5364.port
val x5382 = if (x5367) {
x5373
} else {
x5373
}
val x5383 = new Anon1863173035(x5377,x5378,x5379,x5380,x5381,x5382)
x5383
}
x3436 = x5385
val x5386 = if (x5359) {
true
} else {
false
}
x3437 = x5386
val x5360 = if (x5353) {
0
} else {
val x5356 = x5352.next
x5356
}
val x5387 = if (x5359) {
x5360
} else {
x5360
}
x3438 = x5387
()
}
x5393
} else {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x5196 = x4973(x5186)
val x5197 = x5196.empty
val x5203 = if (x5197) {
true
} else {
false
}
val x5229 = if (x5203) {
x161
} else {
val x5202 = if (x5197) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x4990 = x4974.res
val x5123 = if (x5115) {
x1
} else {
val x5114 = if (x5109) {
x171
} else {
val x5112 = new Tuple2CharString(x5034,x5108)
x5112
}
val x5119 = x5114._1
val x5120 = x5114._2
val x5121 = x5119+x5120
x5121
}
val x5137 = new Anon1863173035("",x5123,"","","",80)
val x5139 = new OptionAnon1863173035(x5137,true)
val x5141 = new Tuple2StringOptionAnon1863173035(x4990,x5139)
val x5198 = x5196.res
val x5199 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5141,x5198)
x5199
}
val x5207 = x5202._1
val x5209 = x5207._1
val x5210 = x5207._2
val x5211 = x5210.defined
val x5221 = if (x5211) {
x5209
} else {
x5209
}
val x5208 = x5202._2
val x5222 = if (x5211) {
val x5212 = x5210.value
val x5213 = x5212.hostName
x5213
} else {
val x5219 = x5208.hostName
x5219
}
val x5214 = x5208.path
val x5223 = if (x5211) {
x5214
} else {
x5214
}
val x5215 = x5208.queryString
val x5224 = if (x5211) {
x5215
} else {
x5215
}
val x5216 = x5208.fragment
val x5225 = if (x5211) {
x5216
} else {
x5216
}
val x5217 = x5208.port
val x5226 = if (x5211) {
x5217
} else {
x5217
}
val x5227 = new Anon1863173035(x5221,x5222,x5223,x5224,x5225,x5226)
x5227
}
x3436 = x5229
val x5230 = if (x5203) {
true
} else {
false
}
x3437 = x5230
val x5204 = if (x5197) {
0
} else {
val x5200 = x5196.next
x5200
}
val x5231 = if (x5203) {
x5204
} else {
x5204
}
x3438 = x5231
()
}
x5399
}
x5401
} else {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x5143 = x4973(x5125)
val x5144 = x5143.empty
val x5150 = if (x5144) {
true
} else {
false
}
val x5176 = if (x5150) {
x161
} else {
val x5149 = if (x5144) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x4990 = x4974.res
val x5123 = if (x5115) {
x1
} else {
val x5114 = if (x5109) {
x171
} else {
val x5112 = new Tuple2CharString(x5034,x5108)
x5112
}
val x5119 = x5114._1
val x5120 = x5114._2
val x5121 = x5119+x5120
x5121
}
val x5137 = new Anon1863173035("",x5123,"","","",80)
val x5139 = new OptionAnon1863173035(x5137,true)
val x5141 = new Tuple2StringOptionAnon1863173035(x4990,x5139)
val x5145 = x5143.res
val x5146 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5141,x5145)
x5146
}
val x5154 = x5149._1
val x5156 = x5154._1
val x5157 = x5154._2
val x5158 = x5157.defined
val x5168 = if (x5158) {
x5156
} else {
x5156
}
val x5155 = x5149._2
val x5169 = if (x5158) {
val x5159 = x5157.value
val x5160 = x5159.hostName
x5160
} else {
val x5166 = x5155.hostName
x5166
}
val x5161 = x5155.path
val x5170 = if (x5158) {
x5161
} else {
x5161
}
val x5162 = x5155.queryString
val x5171 = if (x5158) {
x5162
} else {
x5162
}
val x5163 = x5155.fragment
val x5172 = if (x5158) {
x5163
} else {
x5163
}
val x5164 = x5155.port
val x5173 = if (x5158) {
x5164
} else {
x5164
}
val x5174 = new Anon1863173035(x5168,x5169,x5170,x5171,x5172,x5173)
x5174
}
x3436 = x5176
val x5177 = if (x5150) {
true
} else {
false
}
x3437 = x5177
val x5151 = if (x5144) {
0
} else {
val x5147 = x5143.next
x5147
}
val x5178 = if (x5150) {
x5151
} else {
x5151
}
x3438 = x5178
()
}
x5407
}
x5409
}
x5411
} else {
val x993 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4023 = {x3705: (Int) => 
var x3707: Anon1863173035 = x161
var x3708: Boolean = true
var x3709: Int = x3705
val x3711 = x3705 >= x3452
val x4017 = if (x3711) {
x3707 = x161
x3708 = true
x3709 = x3705
()
} else {
val x3717 = x3435(x3705)
val x3718 = x3717 == '?'
val x4015 = if (x3718) {
var x3722: java.lang.String = ""
var x3723: Boolean = false
val x3719 = x3705 + 1
var x3724: Int = x3719
var x3726: Int = -1
var x3727: Boolean = true
var x3728: Int = x3719
val x3762 = while ({val x3729 = x3727
val x3730 = x3726
val x3731 = x3728
val x3732 = x3730 != x3731
val x3733 = x3729 && x3732
x3733}) {
val x3735 = x3728
x3726 = x3735
val x3737 = x3735 >= x3452
val x3760 = if (x3737) {
x3727 = false
()
} else {
val x3741 = x3435(x3735)
val x3742 = x3741 == '?'
val x3758 = if (x3742) {
val x3745 = x3722
val x3746 = x3723
val x3747 = x3724
val x3749 = x3745+x3741
x3722 = x3749
x3723 = false
val x3743 = x3735 + 1
x3724 = x3743
x3728 = x3743
()
} else {
x3727 = false
()
}
x3758
}
x3760
}
val x3763 = x3722
val x3764 = x3723
val x3765 = x3724
val x4009 = if (x3764) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
var x3775: java.lang.String = ""
var x3776: Boolean = false
var x3777: Int = x3765
var x3779: Int = -1
var x3780: Boolean = true
var x3781: Int = x3765
val x3819 = while ({val x3782 = x3780
val x3783 = x3779
val x3784 = x3781
val x3785 = x3783 != x3784
val x3786 = x3782 && x3785
x3786}) {
val x3788 = x3781
x3779 = x3788
val x3790 = x3788 >= x3452
val x3817 = if (x3790) {
x3780 = false
()
} else {
val x3794 = x3435(x3788)
val x3795 = x3794 > ' '
val x3796 = x3794 != '#'
val x3797 = x3795 && x3796
val x3798 = x3794 != ''
val x3799 = x3797 && x3798
val x3815 = if (x3799) {
val x3802 = x3775
val x3803 = x3776
val x3804 = x3777
val x3806 = x3802+x3794
x3775 = x3806
x3776 = false
val x3800 = x3788 + 1
x3777 = x3800
x3781 = x3800
()
} else {
x3780 = false
()
}
x3815
}
x3817
}
val x3820 = x3775
val x3821 = x3776
val x3822 = x3777
val x4007 = if (x3821) {
x3707 = x161
x3708 = true
x3709 = x3719
()
} else {
val x3828 = x3822 >= x3452
val x4005 = if (x3828) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
} else {
val x3840 = x3435(x3822)
val x3841 = x3840 == '#'
val x4003 = if (x3841) {
var x3845: java.lang.String = ""
var x3846: Boolean = false
val x3842 = x3822 + 1
var x3847: Int = x3842
var x3849: Int = -1
var x3850: Boolean = true
var x3851: Int = x3842
val x3885 = while ({val x3852 = x3850
val x3853 = x3849
val x3854 = x3851
val x3855 = x3853 != x3854
val x3856 = x3852 && x3855
x3856}) {
val x3858 = x3851
x3849 = x3858
val x3860 = x3858 >= x3452
val x3883 = if (x3860) {
x3850 = false
()
} else {
val x3864 = x3435(x3858)
val x3865 = x3864 == '#'
val x3881 = if (x3865) {
val x3868 = x3845
val x3869 = x3846
val x3870 = x3847
val x3872 = x3868+x3864
x3845 = x3872
x3846 = false
val x3866 = x3858 + 1
x3847 = x3866
x3851 = x3866
()
} else {
x3850 = false
()
}
x3881
}
x3883
}
val x3886 = x3845
val x3887 = x3846
val x3888 = x3847
val x3997 = if (x3887) {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3842
()
} else {
var x3900: java.lang.String = ""
var x3901: Boolean = false
var x3902: Int = x3888
var x3904: Int = -1
var x3905: Boolean = true
var x3906: Int = x3888
val x3942 = while ({val x3907 = x3905
val x3908 = x3904
val x3909 = x3906
val x3910 = x3908 != x3909
val x3911 = x3907 && x3910
x3911}) {
val x3913 = x3906
x3904 = x3913
val x3915 = x3913 >= x3452
val x3940 = if (x3915) {
x3905 = false
()
} else {
val x3919 = x3435(x3913)
val x3920 = x3919 > ' '
val x3921 = x3919 != ''
val x3922 = x3920 && x3921
val x3938 = if (x3922) {
val x3925 = x3900
val x3926 = x3901
val x3927 = x3902
val x3929 = x3925+x3919
x3900 = x3929
x3901 = false
val x3923 = x3913 + 1
x3902 = x3923
x3906 = x3923
()
} else {
x3905 = false
()
}
x3938
}
x3940
}
val x3943 = x3900
val x3944 = x3901
val x3945 = x3902
val x3951 = if (x3944) {
true
} else {
false
}
val x3960 = if (x3951) {
false
} else {
false
}
val x3966 = if (x3960) {
true
} else {
false
}
val x3989 = if (x3966) {
x161
} else {
val x3965 = if (x3960) {
x993
} else {
val x3957 = if (x3951) {
x161
} else {
val x3950 = if (x3944) {
x161
} else {
val x3948 = new Anon1863173035("","","","",x3943,80)
x3948
}
x3950
}
val x3958 = if (x3951) {
false
} else {
true
}
val x3959 = new OptionAnon1863173035(x3957,x3958)
val x3963 = new Tuple2StringOptionAnon1863173035(x3820,x3959)
x3963
}
val x3971 = x3965._2
val x3972 = x3971.defined
val x3981 = if (x3972) {
val x3973 = x3971.value
val x3974 = x3973.schema
x3974
} else {
""
}
val x3982 = if (x3972) {
val x3973 = x3971.value
val x3975 = x3973.hostName
x3975
} else {
""
}
val x3983 = if (x3972) {
val x3973 = x3971.value
val x3976 = x3973.path
x3976
} else {
""
}
val x3970 = x3965._1
val x3984 = if (x3972) {
x3970
} else {
x3970
}
val x3985 = if (x3972) {
val x3973 = x3971.value
val x3977 = x3973.fragment
x3977
} else {
""
}
val x3986 = if (x3972) {
val x3973 = x3971.value
val x3978 = x3973.port
x3978
} else {
80
}
val x3987 = new Anon1863173035(x3981,x3982,x3983,x3984,x3985,x3986)
x3987
}
x3707 = x3989
val x3990 = if (x3966) {
true
} else {
false
}
x3708 = x3990
val x3967 = if (x3960) {
x3719
} else {
val x3952 = if (x3944) {
x3945
} else {
x3945
}
val x3961 = if (x3951) {
x3952
} else {
x3952
}
x3961
}
val x3991 = if (x3966) {
x3967
} else {
x3967
}
x3709 = x3991
()
}
x3997
} else {
val x3834 = new Anon1863173035("","","",x3820,"",80)
x3707 = x3834
x3708 = false
x3709 = x3822
()
}
x4003
}
x4005
}
x4007
}
x4009
} else {
x3707 = x161
x3708 = true
x3709 = x3705
()
}
x4015
}
val x4018 = x3707
val x4019 = x3708
val x4020 = x3709
val x4021 = new ParseResultAnon1863173035(x4018,x4019,x4020)
x4021
}
val x4169 = {x3699: (Int) => 
var x3701: Anon1863173035 = x161
var x3702: Boolean = true
var x3703: Int = x3699
val x4024 = x4023(x3699)
val x4025 = x4024.empty
val x4163 = if (x4025) {
val x4026 = x3699 >= x3452
val x4155 = if (x4026) {
x3701 = x161
x3702 = true
x3703 = x3699
()
} else {
val x4032 = x3435(x3699)
val x4033 = x4032 == '#'
val x4153 = if (x4033) {
var x4037: java.lang.String = ""
var x4038: Boolean = false
val x4034 = x3699 + 1
var x4039: Int = x4034
var x4041: Int = -1
var x4042: Boolean = true
var x4043: Int = x4034
val x4077 = while ({val x4044 = x4042
val x4045 = x4041
val x4046 = x4043
val x4047 = x4045 != x4046
val x4048 = x4044 && x4047
x4048}) {
val x4050 = x4043
x4041 = x4050
val x4052 = x4050 >= x3452
val x4075 = if (x4052) {
x4042 = false
()
} else {
val x4056 = x3435(x4050)
val x4057 = x4056 == '#'
val x4073 = if (x4057) {
val x4060 = x4037
val x4061 = x4038
val x4062 = x4039
val x4064 = x4060+x4056
x4037 = x4064
x4038 = false
val x4058 = x4050 + 1
x4039 = x4058
x4043 = x4058
()
} else {
x4042 = false
()
}
x4073
}
x4075
}
val x4078 = x4037
val x4079 = x4038
val x4080 = x4039
val x4147 = if (x4079) {
x3701 = x161
x3702 = true
x3703 = x4034
()
} else {
var x4089: java.lang.String = ""
var x4090: Boolean = false
var x4091: Int = x4080
var x4093: Int = -1
var x4094: Boolean = true
var x4095: Int = x4080
val x4131 = while ({val x4096 = x4094
val x4097 = x4093
val x4098 = x4095
val x4099 = x4097 != x4098
val x4100 = x4096 && x4099
x4100}) {
val x4102 = x4095
x4093 = x4102
val x4104 = x4102 >= x3452
val x4129 = if (x4104) {
x4094 = false
()
} else {
val x4108 = x3435(x4102)
val x4109 = x4108 > ' '
val x4110 = x4108 != ''
val x4111 = x4109 && x4110
val x4127 = if (x4111) {
val x4114 = x4089
val x4115 = x4090
val x4116 = x4091
val x4118 = x4114+x4108
x4089 = x4118
x4090 = false
val x4112 = x4102 + 1
x4091 = x4112
x4095 = x4112
()
} else {
x4094 = false
()
}
x4127
}
x4129
}
val x4132 = x4089
val x4133 = x4090
val x4134 = x4091
val x4139 = if (x4133) {
x161
} else {
val x4137 = new Anon1863173035("","","","",x4132,80)
x4137
}
x3701 = x4139
val x4140 = if (x4133) {
true
} else {
false
}
x3702 = x4140
val x4141 = if (x4133) {
x4134
} else {
x4134
}
x3703 = x4141
()
}
x4147
} else {
x3701 = x161
x3702 = true
x3703 = x3699
()
}
x4153
}
x4155
} else {
val x4157 = x4024.res
x3701 = x4157
x3702 = x4025
val x4160 = x4024.next
x3703 = x4160
()
}
val x4164 = x3701
val x4165 = x3702
val x4166 = x3703
val x4167 = new ParseResultAnon1863173035(x4164,x4165,x4166)
x4167
}
val x4650 = {x3683: (Int) => 
var x3685: Anon1863173035 = x161
var x3686: Boolean = true
var x3687: Int = x3683
val x3689 = x3683 >= x3452
val x4644 = if (x3689) {
x3685 = x161
x3686 = true
x3687 = x3683
()
} else {
val x3695 = x3435(x3683)
val x3696 = x3695 == '/'
val x4642 = if (x3696) {
var x4171: java.lang.String = ""
var x4172: Boolean = false
val x3697 = x3683 + 1
var x4173: Int = x3697
var x4175: Int = -1
var x4176: Boolean = true
var x4177: Int = x3697
val x4217 = while ({val x4178 = x4176
val x4179 = x4175
val x4180 = x4177
val x4181 = x4179 != x4180
val x4182 = x4178 && x4181
x4182}) {
val x4184 = x4177
x4175 = x4184
val x4186 = x4184 >= x3452
val x4215 = if (x4186) {
x4176 = false
()
} else {
val x4190 = x3435(x4184)
val x4191 = x4190 > ' '
val x4192 = x4190 != '#'
val x4193 = x4191 && x4192
val x4194 = x4190 != '?'
val x4195 = x4193 && x4194
val x4196 = x4190 != ''
val x4197 = x4195 && x4196
val x4213 = if (x4197) {
val x4200 = x4171
val x4201 = x4172
val x4202 = x4173
val x4204 = x4200+x4190
x4171 = x4204
x4172 = false
val x4198 = x4184 + 1
x4173 = x4198
x4177 = x4198
()
} else {
x4176 = false
()
}
x4213
}
x4215
}
val x4218 = x4171
val x4219 = x4172
val x4220 = x4173
val x4636 = if (x4219) {
x3685 = x161
x3686 = true
x3687 = x3697
()
} else {
val x4228 = x4169(x4220)
val x4229 = x4228.empty
val x4238 = if (x4229) {
false
} else {
false
}
val x4244 = if (x4238) {
true
} else {
false
}
val x4634 = if (x4244) {
x3685 = x161
x3686 = true
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
x3687 = x4245
()
} else {
val x4245 = if (x4238) {
x3697
} else {
val x4230 = x4228.next
val x4239 = if (x4229) {
x4230
} else {
x4230
}
x4239
}
val x4252 = x4245 >= x3452
val x4632 = if (x4252) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4283 = x3435(x4245)
val x4284 = x4283 == 'H'
val x4630 = if (x4284) {
val x4285 = x4245 + 1
val x4287 = x4285 >= x3452
val x4624 = if (x4287) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4295 = x3435(x4285)
val x4296 = x4295 == 'T'
val x4622 = if (x4296) {
val x4297 = x4285 + 1
val x4299 = x4297 >= x3452
val x4616 = if (x4299) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4307 = x3435(x4297)
val x4308 = x4307 == 'T'
val x4614 = if (x4308) {
val x4309 = x4297 + 1
val x4311 = x4309 >= x3452
val x4608 = if (x4311) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4319 = x3435(x4309)
val x4320 = x4319 == 'P'
val x4606 = if (x4320) {
val x4321 = x4309 + 1
val x4323 = x4321 >= x3452
val x4600 = if (x4323) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
} else {
val x4331 = x3435(x4321)
val x4332 = x4331 == '/'
val x4598 = if (x4332) {
val x4333 = x4321 + 1
val x4356 = x4333 >= x3452
val x4592 = if (x4356) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4367 = x3435(x4333)
val x4368 = x4367 >= '0'
val x4369 = x4367 <= '9'
val x4370 = x4368 && x4369
val x4590 = if (x4370) {
val x4373 = x4367 - '0'
val x4374 = x4373.toInt
var x4376: Int = x4374
var x4377: Boolean = false
val x4371 = x4333 + 1
var x4378: Int = x4371
var x4380: Int = -1
var x4381: Boolean = true
var x4382: Int = x4371
val x4423 = while ({val x4383 = x4381
val x4384 = x4380
val x4385 = x4382
val x4386 = x4384 != x4385
val x4387 = x4383 && x4386
x4387}) {
val x4389 = x4382
x4380 = x4389
val x4391 = x4389 >= x3452
val x4421 = if (x4391) {
x4381 = false
()
} else {
val x4396 = x3435(x4389)
val x4397 = x4396 >= '0'
val x4398 = x4396 <= '9'
val x4399 = x4397 && x4398
val x4419 = if (x4399) {
val x4405 = x4376
val x4406 = x4377
val x4407 = x4378
val x4402 = x4396 - '0'
val x4403 = x4402.toInt
val x4409 = x4405 * 10
val x4410 = x4409 + x4403
x4376 = x4410
x4377 = false
val x4400 = x4389 + 1
x4378 = x4400
x4382 = x4400
()
} else {
x4381 = false
()
}
x4419
}
x4421
}
val x4424 = x4376
val x4425 = x4377
val x4426 = x4378
val x4429 = if (x4425) {
true
} else {
x4425
}
val x4584 = if (x4429) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4430 = if (x4425) {
x4333
} else {
x4426
}
val x4436 = x4430 >= x3452
val x4582 = if (x4436) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4443 = x3435(x4430)
val x4444 = x4443 == '.'
val x4580 = if (x4444) {
val x4445 = x4430 + 1
val x4447 = x4445 >= x3452
val x4574 = if (x4447) {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
} else {
val x4454 = x3435(x4445)
val x4455 = x4454 >= '0'
val x4456 = x4454 <= '9'
val x4457 = x4455 && x4456
val x4572 = if (x4457) {
val x4460 = x4454 - '0'
val x4461 = x4460.toInt
var x4463: Int = x4461
var x4464: Boolean = false
val x4458 = x4445 + 1
var x4465: Int = x4458
var x4467: Int = -1
var x4468: Boolean = true
var x4469: Int = x4458
val x4510 = while ({val x4470 = x4468
val x4471 = x4467
val x4472 = x4469
val x4473 = x4471 != x4472
val x4474 = x4470 && x4473
x4474}) {
val x4476 = x4469
x4467 = x4476
val x4478 = x4476 >= x3452
val x4508 = if (x4478) {
x4468 = false
()
} else {
val x4483 = x3435(x4476)
val x4484 = x4483 >= '0'
val x4485 = x4483 <= '9'
val x4486 = x4484 && x4485
val x4506 = if (x4486) {
val x4492 = x4463
val x4493 = x4464
val x4494 = x4465
val x4489 = x4483 - '0'
val x4490 = x4489.toInt
val x4496 = x4492 * 10
val x4497 = x4496 + x4490
x4463 = x4497
x4464 = false
val x4487 = x4476 + 1
x4465 = x4487
x4469 = x4487
()
} else {
x4468 = false
()
}
x4506
}
x4508
}
val x4511 = x4463
val x4512 = x4464
val x4513 = x4465
val x4516 = if (x4512) {
true
} else {
x4512
}
val x4522 = if (x4516) {
true
} else {
false
}
val x4531 = if (x4522) {
false
} else {
false
}
val x4536 = if (x4531) {
true
} else {
false
}
val x4560 = if (x4536) {
x161
} else {
val x4535 = if (x4531) {
x993
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
x4243
}
val x4541 = x4535._2
val x4542 = x4541.defined
val x4552 = if (x4542) {
val x4543 = x4541.value
val x4545 = x4543.schema
x4545
} else {
""
}
val x4553 = if (x4542) {
val x4543 = x4541.value
val x4546 = x4543.hostName
x4546
} else {
""
}
val x4540 = x4535._1
val x4544 = "/"+x4540
val x4554 = if (x4542) {
x4544
} else {
x4544
}
val x4555 = if (x4542) {
val x4543 = x4541.value
val x4547 = x4543.queryString
x4547
} else {
""
}
val x4556 = if (x4542) {
val x4543 = x4541.value
val x4548 = x4543.fragment
x4548
} else {
""
}
val x4557 = if (x4542) {
val x4543 = x4541.value
val x4549 = x4543.port
x4549
} else {
80
}
val x4558 = new Anon1863173035(x4552,x4553,x4554,x4555,x4556,x4557)
x4558
}
x3685 = x4560
val x4561 = if (x4536) {
true
} else {
false
}
x3686 = x4561
val x4537 = if (x4531) {
x3697
} else {
val x4523 = if (x4516) {
x4333
} else {
val x4517 = if (x4512) {
x4445
} else {
x4513
}
x4517
}
val x4532 = if (x4522) {
x4523
} else {
x4523
}
x4532
}
val x4562 = if (x4536) {
x4537
} else {
x4537
}
x3687 = x4562
()
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4572
}
x4574
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4580
}
x4582
}
x4584
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4333
()
}
x4590
}
x4592
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4598
}
x4600
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4606
}
x4608
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4614
}
x4616
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4622
}
x4624
} else {
val x4243 = if (x4238) {
x993
} else {
val x4235 = if (x4229) {
x161
} else {
val x4232 = x4228.res
x4232
}
val x4236 = if (x4229) {
false
} else {
true
}
val x4237 = new OptionAnon1863173035(x4235,x4236)
val x4241 = new Tuple2StringOptionAnon1863173035(x4218,x4237)
x4241
}
val x4260 = x4243._2
val x4261 = x4260.defined
val x4271 = if (x4261) {
val x4262 = x4260.value
val x4264 = x4262.schema
x4264
} else {
""
}
val x4272 = if (x4261) {
val x4262 = x4260.value
val x4265 = x4262.hostName
x4265
} else {
""
}
val x4259 = x4243._1
val x4263 = "/"+x4259
val x4273 = if (x4261) {
x4263
} else {
x4263
}
val x4274 = if (x4261) {
val x4262 = x4260.value
val x4266 = x4262.queryString
x4266
} else {
""
}
val x4275 = if (x4261) {
val x4262 = x4260.value
val x4267 = x4262.fragment
x4267
} else {
""
}
val x4276 = if (x4261) {
val x4262 = x4260.value
val x4268 = x4262.port
x4268
} else {
80
}
val x4277 = new Anon1863173035(x4271,x4272,x4273,x4274,x4275,x4276)
x3685 = x4277
x3686 = false
x3687 = x4245
()
}
x4630
}
x4632
}
x4634
}
x4636
} else {
x3685 = x161
x3686 = true
x3687 = x3683
()
}
x4642
}
val x4645 = x3685
val x4646 = x3686
val x4647 = x3687
val x4648 = new ParseResultAnon1863173035(x4645,x4646,x4647)
x4648
}
val x4973 = {x3677: (Int) => 
var x3679: Anon1863173035 = x161
var x3680: Boolean = true
var x3681: Int = x3677
val x4651 = x4650(x3677)
val x4652 = x4651.empty
val x4967 = if (x4652) {
val x4653 = x3677 >= x3452
val x4959 = if (x4653) {
x3679 = x161
x3680 = true
x3681 = x3677
()
} else {
val x4659 = x3435(x3677)
val x4660 = x4659 == '?'
val x4957 = if (x4660) {
var x4664: java.lang.String = ""
var x4665: Boolean = false
val x4661 = x3677 + 1
var x4666: Int = x4661
var x4668: Int = -1
var x4669: Boolean = true
var x4670: Int = x4661
val x4704 = while ({val x4671 = x4669
val x4672 = x4668
val x4673 = x4670
val x4674 = x4672 != x4673
val x4675 = x4671 && x4674
x4675}) {
val x4677 = x4670
x4668 = x4677
val x4679 = x4677 >= x3452
val x4702 = if (x4679) {
x4669 = false
()
} else {
val x4683 = x3435(x4677)
val x4684 = x4683 == '?'
val x4700 = if (x4684) {
val x4687 = x4664
val x4688 = x4665
val x4689 = x4666
val x4691 = x4687+x4683
x4664 = x4691
x4665 = false
val x4685 = x4677 + 1
x4666 = x4685
x4670 = x4685
()
} else {
x4669 = false
()
}
x4700
}
x4702
}
val x4705 = x4664
val x4706 = x4665
val x4707 = x4666
val x4951 = if (x4706) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
var x4717: java.lang.String = ""
var x4718: Boolean = false
var x4719: Int = x4707
var x4721: Int = -1
var x4722: Boolean = true
var x4723: Int = x4707
val x4761 = while ({val x4724 = x4722
val x4725 = x4721
val x4726 = x4723
val x4727 = x4725 != x4726
val x4728 = x4724 && x4727
x4728}) {
val x4730 = x4723
x4721 = x4730
val x4732 = x4730 >= x3452
val x4759 = if (x4732) {
x4722 = false
()
} else {
val x4736 = x3435(x4730)
val x4737 = x4736 > ' '
val x4738 = x4736 != '#'
val x4739 = x4737 && x4738
val x4740 = x4736 != ''
val x4741 = x4739 && x4740
val x4757 = if (x4741) {
val x4744 = x4717
val x4745 = x4718
val x4746 = x4719
val x4748 = x4744+x4736
x4717 = x4748
x4718 = false
val x4742 = x4730 + 1
x4719 = x4742
x4723 = x4742
()
} else {
x4722 = false
()
}
x4757
}
x4759
}
val x4762 = x4717
val x4763 = x4718
val x4764 = x4719
val x4949 = if (x4763) {
x3679 = x161
x3680 = true
x3681 = x4661
()
} else {
val x4770 = x4764 >= x3452
val x4947 = if (x4770) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
} else {
val x4782 = x3435(x4764)
val x4783 = x4782 == '#'
val x4945 = if (x4783) {
var x4787: java.lang.String = ""
var x4788: Boolean = false
val x4784 = x4764 + 1
var x4789: Int = x4784
var x4791: Int = -1
var x4792: Boolean = true
var x4793: Int = x4784
val x4827 = while ({val x4794 = x4792
val x4795 = x4791
val x4796 = x4793
val x4797 = x4795 != x4796
val x4798 = x4794 && x4797
x4798}) {
val x4800 = x4793
x4791 = x4800
val x4802 = x4800 >= x3452
val x4825 = if (x4802) {
x4792 = false
()
} else {
val x4806 = x3435(x4800)
val x4807 = x4806 == '#'
val x4823 = if (x4807) {
val x4810 = x4787
val x4811 = x4788
val x4812 = x4789
val x4814 = x4810+x4806
x4787 = x4814
x4788 = false
val x4808 = x4800 + 1
x4789 = x4808
x4793 = x4808
()
} else {
x4792 = false
()
}
x4823
}
x4825
}
val x4828 = x4787
val x4829 = x4788
val x4830 = x4789
val x4939 = if (x4829) {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4784
()
} else {
var x4842: java.lang.String = ""
var x4843: Boolean = false
var x4844: Int = x4830
var x4846: Int = -1
var x4847: Boolean = true
var x4848: Int = x4830
val x4884 = while ({val x4849 = x4847
val x4850 = x4846
val x4851 = x4848
val x4852 = x4850 != x4851
val x4853 = x4849 && x4852
x4853}) {
val x4855 = x4848
x4846 = x4855
val x4857 = x4855 >= x3452
val x4882 = if (x4857) {
x4847 = false
()
} else {
val x4861 = x3435(x4855)
val x4862 = x4861 > ' '
val x4863 = x4861 != ''
val x4864 = x4862 && x4863
val x4880 = if (x4864) {
val x4867 = x4842
val x4868 = x4843
val x4869 = x4844
val x4871 = x4867+x4861
x4842 = x4871
x4843 = false
val x4865 = x4855 + 1
x4844 = x4865
x4848 = x4865
()
} else {
x4847 = false
()
}
x4880
}
x4882
}
val x4885 = x4842
val x4886 = x4843
val x4887 = x4844
val x4893 = if (x4886) {
true
} else {
false
}
val x4902 = if (x4893) {
false
} else {
false
}
val x4908 = if (x4902) {
true
} else {
false
}
val x4931 = if (x4908) {
x161
} else {
val x4907 = if (x4902) {
x993
} else {
val x4899 = if (x4893) {
x161
} else {
val x4892 = if (x4886) {
x161
} else {
val x4890 = new Anon1863173035("","","","",x4885,80)
x4890
}
x4892
}
val x4900 = if (x4893) {
false
} else {
true
}
val x4901 = new OptionAnon1863173035(x4899,x4900)
val x4905 = new Tuple2StringOptionAnon1863173035(x4762,x4901)
x4905
}
val x4913 = x4907._2
val x4914 = x4913.defined
val x4923 = if (x4914) {
val x4915 = x4913.value
val x4916 = x4915.schema
x4916
} else {
""
}
val x4924 = if (x4914) {
val x4915 = x4913.value
val x4917 = x4915.hostName
x4917
} else {
""
}
val x4925 = if (x4914) {
val x4915 = x4913.value
val x4918 = x4915.path
x4918
} else {
""
}
val x4912 = x4907._1
val x4926 = if (x4914) {
x4912
} else {
x4912
}
val x4927 = if (x4914) {
val x4915 = x4913.value
val x4919 = x4915.fragment
x4919
} else {
""
}
val x4928 = if (x4914) {
val x4915 = x4913.value
val x4920 = x4915.port
x4920
} else {
80
}
val x4929 = new Anon1863173035(x4923,x4924,x4925,x4926,x4927,x4928)
x4929
}
x3679 = x4931
val x4932 = if (x4908) {
true
} else {
false
}
x3680 = x4932
val x4909 = if (x4902) {
x4661
} else {
val x4894 = if (x4886) {
x4887
} else {
x4887
}
val x4903 = if (x4893) {
x4894
} else {
x4894
}
x4903
}
val x4933 = if (x4908) {
x4909
} else {
x4909
}
x3681 = x4933
()
}
x4939
} else {
val x4776 = new Anon1863173035("","","",x4762,"",80)
x3679 = x4776
x3680 = false
x3681 = x4764
()
}
x4945
}
x4947
}
x4949
}
x4951
} else {
x3679 = x161
x3680 = true
x3681 = x3677
()
}
x4957
}
x4959
} else {
val x4961 = x4651.res
x3679 = x4961
x3680 = x4652
val x4964 = x4651.next
x3681 = x4964
()
}
val x4968 = x3679
val x4969 = x3680
val x4970 = x3681
val x4971 = new ParseResultAnon1863173035(x4968,x4969,x4970)
x4971
}
val x4993 = x4973(x4982)
val x4994 = x4993.empty
val x5000 = if (x4994) {
true
} else {
false
}
val x5026 = if (x5000) {
x161
} else {
val x4999 = if (x4994) {
val x4976 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x4976
} else {
val x1056 = new OptionAnon1863173035(x161,false)
val x4990 = x4974.res
val x4991 = new Tuple2StringOptionAnon1863173035(x4990,x1056)
val x4995 = x4993.res
val x4996 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x4991,x4995)
x4996
}
val x5004 = x4999._1
val x5006 = x5004._1
val x5007 = x5004._2
val x5008 = x5007.defined
val x5018 = if (x5008) {
x5006
} else {
x5006
}
val x5005 = x4999._2
val x5019 = if (x5008) {
val x5009 = x5007.value
val x5010 = x5009.hostName
x5010
} else {
val x5016 = x5005.hostName
x5016
}
val x5011 = x5005.path
val x5020 = if (x5008) {
x5011
} else {
x5011
}
val x5012 = x5005.queryString
val x5021 = if (x5008) {
x5012
} else {
x5012
}
val x5013 = x5005.fragment
val x5022 = if (x5008) {
x5013
} else {
x5013
}
val x5014 = x5005.port
val x5023 = if (x5008) {
x5014
} else {
x5014
}
val x5024 = new Anon1863173035(x5018,x5019,x5020,x5021,x5022,x5023)
x5024
}
x3436 = x5026
val x5027 = if (x5000) {
true
} else {
false
}
x3437 = x5027
val x5001 = if (x4994) {
0
} else {
val x4997 = x4993.next
x4997
}
val x5028 = if (x5000) {
x5001
} else {
x5001
}
x3438 = x5028
()
}
x5417
}
x5419
}
val x5422 = x3436
val x5423 = x3437
val x5424 = x3438
val x5425 = new ParseResultAnon1863173035(x5422,x5423,x5424)
val x5426 = println(x5425)
x5426
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=6000
nVars=7000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/URI_scheme,,,80),false,39)
ParseResultAnon1863173035(Anon1863173035(https,developer.mozilla.org,/en-US/docs/Web/JavaScript/Guide/Regular_Expressions,redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions,,80),false,156)
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/List_of_HTTP_headers,,Responses,80),false,59)
ParseResultAnon1863173035(Anon1863173035(ldap,ldap1.example.net,/o=University%20of%20Michigan,,,,80),false,59)
