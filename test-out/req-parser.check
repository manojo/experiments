/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqTypeParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
val x1 = null.asInstanceOf[java.lang.String]
var x3: java.lang.String = x1
var x4: Boolean = true
var x5: Int = -1
var x8: java.lang.String = ""
var x9: Boolean = false
var x10: Int = 0
var x12: Int = -1
var x13: Boolean = true
var x14: Int = 0
val x23 = x0.length
val x56 = while ({val x15 = x13
val x16 = x12
val x17 = x14
val x18 = x16 != x17
val x19 = x15 && x18
x19}) {
val x21 = x14
x12 = x21
val x24 = x21 >= x23
val x54 = if (x24) {
x13 = false
()
} else {
val x27 = x0(x21)
val x28 = x27 >= 'a'
val x29 = x27 <= 'z'
val x30 = x28 && x29
val x31 = x27 >= 'A'
val x32 = x27 <= 'Z'
val x33 = x31 && x32
val x34 = x30 || x33
val x52 = if (x34) {
val x39 = x8
val x40 = x9
val x41 = x10
val x43 = x39+x27
x8 = x43
x9 = false
val x35 = x21 + 1
x10 = x35
x14 = x35
()
} else {
x13 = false
()
}
x52
}
x54
}
val x57 = x8
val x58 = x9
val x59 = x10
val x69 = if (x58) {
val x60 = new ParseResultString(x57,x58,x59)
x60
} else {
val x61 = collection.mutable.HashSet[java.lang.String]("connect","copy","checkout","delete","get","head","lock","merge","mkactivity","mkcol","move","msearch","notify","options","post","propfind","proppatch","put","report","subscribe","trace","unlock","unsubscribe")
val x62 = x61.contains(x57)
val x64 = if (x62) {
x57
} else {
x1
}
val x65 = if (x62) {
x58
} else {
true
}
val x66 = if (x62) {
x59
} else {
x59
}
val x67 = new ParseResultString(x64,x65,x66)
x67
}
val x70 = x69.res
x3 = x70
val x72 = x69.empty
x4 = x72
val x74 = x69.next
x5 = x74
val x76 = x3
val x77 = x4
val x78 = x5
val x79 = new ParseResultString(x76,x77,x78)
val x80 = println(x79)
x80
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultString(connect,false,7)
ParseResultString(copy,false,4)
ParseResultString(checkout,false,8)
ParseResultString(delete,false,6)
ParseResultString(get,false,3)
ParseResultString(head,false,4)
ParseResultString(lock,false,4)
ParseResultString(merge,false,5)
ParseResultString(mkactivity,false,10)
ParseResultString(mkcol,false,5)
ParseResultString(move,false,4)
ParseResultString(msearch,false,7)
ParseResultString(notify,false,6)
ParseResultString(options,false,7)
ParseResultString(post,false,4)
ParseResultString(propfind,false,8)
ParseResultString(proppatch,false,9)
ParseResultString(put,false,3)
ParseResultString(report,false,6)
ParseResultString(subscribe,false,9)
ParseResultString(trace,false,5)
ParseResultString(unlock,false,6)
ParseResultString(unsubscribe,false,11)
ParseResultString(null,true,4)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class hostParse extends ((Array[Char])=>(Unit)) {
def apply(x160:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x163: Anon1863173035 = x161
var x164: Boolean = true
var x165: Int = -1
val x168 = x160.length
val x169 = 0 >= x168
val x401 = if (x169) {
x163 = x161
x164 = true
x165 = 0
()
} else {
val x171 = x160(0)
val x172 = x171 >= '0'
val x173 = x171 <= '9'
val x174 = x172 && x173
val x175 = x171 >= 'a'
val x176 = x171 <= 'z'
val x177 = x175 && x176
val x178 = x171 >= 'A'
val x179 = x171 <= 'Z'
val x180 = x178 && x179
val x181 = x177 || x180
val x182 = x174 || x181
val x183 = x171 == '-'
val x184 = x182 || x183
val x185 = x171 == '.'
val x186 = x184 || x185
val x399 = if (x186) {
var x201: java.lang.String = ""
var x202: Boolean = false
val x187 = 0 + 1
var x203: Int = x187
var x205: Int = -1
var x206: Boolean = true
var x207: Int = x187
val x255 = while ({val x208 = x206
val x209 = x205
val x210 = x207
val x211 = x209 != x210
val x212 = x208 && x211
x212}) {
val x214 = x207
x205 = x214
val x216 = x214 >= x168
val x253 = if (x216) {
x206 = false
()
} else {
val x218 = x160(x214)
val x219 = x218 >= '0'
val x220 = x218 <= '9'
val x221 = x219 && x220
val x222 = x218 >= 'a'
val x223 = x218 <= 'z'
val x224 = x222 && x223
val x225 = x218 >= 'A'
val x226 = x218 <= 'Z'
val x227 = x225 && x226
val x228 = x224 || x227
val x229 = x221 || x228
val x230 = x218 == '-'
val x231 = x229 || x230
val x232 = x218 == '.'
val x233 = x231 || x232
val x251 = if (x233) {
val x238 = x201
val x239 = x202
val x240 = x203
val x242 = x238+x218
x201 = x242
x202 = false
val x234 = x214 + 1
x203 = x234
x207 = x234
()
} else {
x206 = false
()
}
x251
}
x253
}
val x256 = x201
val x257 = x202
val x258 = x203
val x263 = if (x257) {
true
} else {
false
}
val x272 = if (x263) {
true
} else {
false
}
val x393 = if (x272) {
x163 = x161
x164 = true
x165 = 0
()
} else {
val x264 = if (x257) {
0
} else {
x258
}
val x273 = if (x263) {
x264
} else {
x264
}
val x275 = x273 >= x168
val x391 = if (x275) {
val x271 = if (x263) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x262 = if (x257) {
val x189 = null.asInstanceOf[Tuple2CharString]
x189
} else {
val x260 = new Tuple2CharString(x171,x256)
x260
}
val x267 = x262._1
val x268 = x262._2
val x269 = x267+x268
x269
}
val x291 = new Anon1863173035("",x271,"","","",80)
x163 = x291
x164 = false
x165 = x273
()
} else {
val x277 = x160(x273)
val x278 = x277 == ':'
val x389 = if (x278) {
var x298: Int = 0
var x299: Boolean = false
val x279 = x273 + 1
var x300: Int = x279
var x302: Int = -1
var x303: Boolean = true
var x304: Int = x279
val x345 = while ({val x305 = x303
val x306 = x302
val x307 = x304
val x308 = x306 != x307
val x309 = x305 && x308
x309}) {
val x311 = x304
x302 = x311
val x313 = x311 >= x168
val x343 = if (x313) {
x303 = false
()
} else {
val x315 = x160(x311)
val x316 = x315 >= '0'
val x317 = x315 <= '9'
val x318 = x316 && x317
val x341 = if (x318) {
val x327 = x298
val x328 = x299
val x329 = x300
val x324 = x315 - '0'
val x325 = x324.toInt
val x331 = x327 * 10
val x332 = x331 + x325
x298 = x332
x299 = false
val x319 = x311 + 1
x300 = x319
x304 = x319
()
} else {
x303 = false
()
}
x341
}
x343
}
val x346 = x298
val x347 = x299
val x348 = x300
val x356 = if (x347) {
false
} else {
false
}
val x362 = if (x356) {
true
} else {
false
}
val x377 = if (x362) {
x161
} else {
val x361 = if (x356) {
val x192 = null.asInstanceOf[Tuple2StringOptionInt]
x192
} else {
val x271 = if (x263) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x262 = if (x257) {
val x189 = null.asInstanceOf[Tuple2CharString]
x189
} else {
val x260 = new Tuple2CharString(x171,x256)
x260
}
val x267 = x262._1
val x268 = x262._2
val x269 = x267+x268
x269
}
val x353 = if (x347) {
val x285 = null.asInstanceOf[Int]
x285
} else {
x346
}
val x354 = if (x347) {
false
} else {
true
}
val x355 = new OptionInt(x353,x354)
val x359 = new Tuple2StringOptionInt(x271,x355)
x359
}
val x367 = x361._2
val x368 = x367.defined
val x372 = if (x368) {
""
} else {
""
}
val x366 = x361._1
val x373 = if (x368) {
x366
} else {
x366
}
val x374 = if (x368) {
val x369 = x367.value
x369
} else {
80
}
val x375 = new Anon1863173035(x372,x373,x372,x372,x372,x374)
x375
}
x163 = x377
val x378 = if (x362) {
true
} else {
false
}
x164 = x378
val x363 = if (x356) {
0
} else {
val x357 = if (x347) {
x348
} else {
x348
}
x357
}
val x379 = if (x362) {
x363
} else {
x363
}
x165 = x379
()
} else {
val x271 = if (x263) {
val x1 = null.asInstanceOf[java.lang.String]
x1
} else {
val x262 = if (x257) {
val x189 = null.asInstanceOf[Tuple2CharString]
x189
} else {
val x260 = new Tuple2CharString(x171,x256)
x260
}
val x267 = x262._1
val x268 = x262._2
val x269 = x267+x268
x269
}
val x291 = new Anon1863173035("",x271,"","","",80)
x163 = x291
x164 = false
x165 = x273
()
}
x389
}
x391
}
x393
} else {
x163 = x161
x164 = true
x165 = 0
()
}
x399
}
val x402 = x163
val x403 = x164
val x404 = x165
val x405 = new ParseResultAnon1863173035(x402,x403,x404)
val x406 = println(x405)
x406
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,90),false,17)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,14)
ParseResultAnon1863173035(null,true,0)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,0),false,15)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqFragmentParse extends ((Array[Char])=>(Unit)) {
def apply(x642:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x643: Anon1863173035 = x161
var x644: Boolean = true
var x645: Int = -1
var x647: java.lang.String = ""
var x648: Boolean = false
var x649: Int = 0
var x651: Int = -1
var x652: Boolean = true
var x653: Int = 0
val x662 = x642.length
val x688 = while ({val x654 = x652
val x655 = x651
val x656 = x653
val x657 = x655 != x656
val x658 = x654 && x657
x658}) {
val x660 = x653
x651 = x660
val x663 = x660 >= x662
val x686 = if (x663) {
x652 = false
()
} else {
val x665 = x642(x660)
val x666 = x665 == '#'
val x684 = if (x666) {
val x671 = x647
val x672 = x648
val x673 = x649
val x675 = x671+x665
x647 = x675
x648 = false
val x667 = x660 + 1
x649 = x667
x653 = x667
()
} else {
x652 = false
()
}
x684
}
x686
}
val x689 = x647
val x690 = x648
val x691 = x649
val x756 = if (x690) {
x643 = x161
x644 = true
x645 = 0
()
} else {
var x698: java.lang.String = ""
var x699: Boolean = false
var x700: Int = x691
var x702: Int = -1
var x703: Boolean = true
var x704: Int = x691
val x740 = while ({val x705 = x703
val x706 = x702
val x707 = x704
val x708 = x706 != x707
val x709 = x705 && x708
x709}) {
val x711 = x704
x702 = x711
val x713 = x711 >= x662
val x738 = if (x713) {
x703 = false
()
} else {
val x715 = x642(x711)
val x716 = x715 > ' '
val x717 = x715 != ''
val x718 = x716 && x717
val x736 = if (x718) {
val x723 = x698
val x724 = x699
val x725 = x700
val x727 = x723+x715
x698 = x727
x699 = false
val x719 = x711 + 1
x700 = x719
x704 = x719
()
} else {
x703 = false
()
}
x736
}
x738
}
val x741 = x698
val x742 = x699
val x743 = x700
val x748 = if (x742) {
x161
} else {
val x746 = new Anon1863173035("","","","",x741,80)
x746
}
x643 = x748
val x749 = if (x742) {
true
} else {
false
}
x644 = x749
val x750 = if (x742) {
x743
} else {
x743
}
x645 = x750
()
}
val x757 = x643
val x758 = x644
val x759 = x645
val x760 = new ParseResultAnon1863173035(x757,x758,x759)
val x761 = println(x760)
x761
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,,3adsfd.html,80),false,13)
ParseResultAnon1863173035(Anon1863173035(,,,,3asfd#adf,80),false,11)
ParseResultAnon1863173035(Anon1863173035(,,,,asdf,80),false,4)
nVars=1000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class qStringParse extends ((Array[Char])=>(Unit)) {
def apply(x884:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x885: Anon1863173035 = x161
var x886: Boolean = true
var x887: Int = -1
var x889: java.lang.String = ""
var x890: Boolean = false
var x891: Int = 0
var x893: Int = -1
var x894: Boolean = true
var x895: Int = 0
val x904 = x884.length
val x930 = while ({val x896 = x894
val x897 = x893
val x898 = x895
val x899 = x897 != x898
val x900 = x896 && x899
x900}) {
val x902 = x895
x893 = x902
val x905 = x902 >= x904
val x928 = if (x905) {
x894 = false
()
} else {
val x907 = x884(x902)
val x908 = x907 == '?'
val x926 = if (x908) {
val x913 = x889
val x914 = x890
val x915 = x891
val x917 = x913+x907
x889 = x917
x890 = false
val x909 = x902 + 1
x891 = x909
x895 = x909
()
} else {
x894 = false
()
}
x926
}
x928
}
val x931 = x889
val x932 = x890
val x933 = x891
val x1181 = if (x932) {
x885 = x161
x886 = true
x887 = 0
()
} else {
var x946: java.lang.String = ""
var x947: Boolean = false
var x948: Int = x933
var x950: Int = -1
var x951: Boolean = true
var x952: Int = x933
val x990 = while ({val x953 = x951
val x954 = x950
val x955 = x952
val x956 = x954 != x955
val x957 = x953 && x956
x957}) {
val x959 = x952
x950 = x959
val x961 = x959 >= x904
val x988 = if (x961) {
x951 = false
()
} else {
val x963 = x884(x959)
val x964 = x963 > ' '
val x965 = x963 != '#'
val x966 = x964 && x965
val x967 = x963 != ''
val x968 = x966 && x967
val x986 = if (x968) {
val x973 = x946
val x974 = x947
val x975 = x948
val x977 = x973+x963
x946 = x977
x947 = false
val x969 = x959 + 1
x948 = x969
x952 = x969
()
} else {
x951 = false
()
}
x986
}
x988
}
val x991 = x946
val x992 = x947
val x993 = x948
val x1179 = if (x992) {
x885 = x161
x886 = true
x887 = 0
()
} else {
val x995 = x993 >= x904
val x1177 = if (x995) {
val x1010 = new Anon1863173035("","","",x991,"",80)
x885 = x1010
x886 = false
x887 = x993
()
} else {
val x997 = x884(x993)
val x998 = x997 == '#'
val x1175 = if (x998) {
var x1017: java.lang.String = ""
var x1018: Boolean = false
val x999 = x993 + 1
var x1019: Int = x999
var x1021: Int = -1
var x1022: Boolean = true
var x1023: Int = x999
val x1057 = while ({val x1024 = x1022
val x1025 = x1021
val x1026 = x1023
val x1027 = x1025 != x1026
val x1028 = x1024 && x1027
x1028}) {
val x1030 = x1023
x1021 = x1030
val x1032 = x1030 >= x904
val x1055 = if (x1032) {
x1022 = false
()
} else {
val x1034 = x884(x1030)
val x1035 = x1034 == '#'
val x1053 = if (x1035) {
val x1040 = x1017
val x1041 = x1018
val x1042 = x1019
val x1044 = x1040+x1034
x1017 = x1044
x1018 = false
val x1036 = x1030 + 1
x1019 = x1036
x1023 = x1036
()
} else {
x1022 = false
()
}
x1053
}
x1055
}
val x1058 = x1017
val x1059 = x1018
val x1060 = x1019
val x1169 = if (x1059) {
val x1010 = new Anon1863173035("","","",x991,"",80)
x885 = x1010
x886 = false
x887 = x999
()
} else {
var x1072: java.lang.String = ""
var x1073: Boolean = false
var x1074: Int = x1060
var x1076: Int = -1
var x1077: Boolean = true
var x1078: Int = x1060
val x1114 = while ({val x1079 = x1077
val x1080 = x1076
val x1081 = x1078
val x1082 = x1080 != x1081
val x1083 = x1079 && x1082
x1083}) {
val x1085 = x1078
x1076 = x1085
val x1087 = x1085 >= x904
val x1112 = if (x1087) {
x1077 = false
()
} else {
val x1089 = x884(x1085)
val x1090 = x1089 > ' '
val x1091 = x1089 != ''
val x1092 = x1090 && x1091
val x1110 = if (x1092) {
val x1097 = x1072
val x1098 = x1073
val x1099 = x1074
val x1101 = x1097+x1089
x1072 = x1101
x1073 = false
val x1093 = x1085 + 1
x1074 = x1093
x1078 = x1093
()
} else {
x1077 = false
()
}
x1110
}
x1112
}
val x1115 = x1072
val x1116 = x1073
val x1117 = x1074
val x1123 = if (x1116) {
true
} else {
false
}
val x1132 = if (x1123) {
false
} else {
false
}
val x1138 = if (x1132) {
true
} else {
false
}
val x1161 = if (x1138) {
x161
} else {
val x1137 = if (x1132) {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
x935
} else {
val x1129 = if (x1123) {
x161
} else {
val x1122 = if (x1116) {
x161
} else {
val x1120 = new Anon1863173035("","","","",x1115,80)
x1120
}
x1122
}
val x1130 = if (x1123) {
false
} else {
true
}
val x1131 = new OptionAnon1863173035(x1129,x1130)
val x1135 = new Tuple2StringOptionAnon1863173035(x991,x1131)
x1135
}
val x1143 = x1137._2
val x1144 = x1143.defined
val x1153 = if (x1144) {
val x1145 = x1143.value
val x1146 = x1145.schema
x1146
} else {
""
}
val x1154 = if (x1144) {
val x1145 = x1143.value
val x1147 = x1145.hostName
x1147
} else {
""
}
val x1155 = if (x1144) {
val x1145 = x1143.value
val x1148 = x1145.path
x1148
} else {
""
}
val x1142 = x1137._1
val x1156 = if (x1144) {
x1142
} else {
x1142
}
val x1157 = if (x1144) {
val x1145 = x1143.value
val x1149 = x1145.fragment
x1149
} else {
""
}
val x1158 = if (x1144) {
val x1145 = x1143.value
val x1150 = x1145.port
x1150
} else {
80
}
val x1159 = new Anon1863173035(x1153,x1154,x1155,x1156,x1157,x1158)
x1159
}
x885 = x1161
val x1162 = if (x1138) {
true
} else {
false
}
x886 = x1162
val x1139 = if (x1132) {
0
} else {
val x1124 = if (x1116) {
x1117
} else {
x1117
}
val x1133 = if (x1123) {
x1124
} else {
x1124
}
x1133
}
val x1163 = if (x1138) {
x1139
} else {
x1139
}
x887 = x1163
()
}
x1169
} else {
val x1010 = new Anon1863173035("","","",x991,"",80)
x885 = x1010
x886 = false
x887 = x993
()
}
x1175
}
x1177
}
x1179
}
val x1182 = x885
val x1183 = x886
val x1184 = x887
val x1185 = new ParseResultAnon1863173035(x1182,x1183,x1184)
val x1186 = println(x1185)
x1186
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,asdf,80),false,17)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asd,,80),false,3)
nVars=2000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqPathParse extends ((Array[Char])=>(Unit)) {
def apply(x1489:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x1490: Anon1863173035 = x161
var x1491: Boolean = true
var x1492: Int = -1
var x1972: java.lang.String = ""
var x1973: Boolean = false
var x1974: Int = 0
var x1976: Int = -1
var x1977: Boolean = true
var x1978: Int = 0
val x1506 = x1489.length
val x2018 = while ({val x1979 = x1977
val x1980 = x1976
val x1981 = x1978
val x1982 = x1980 != x1981
val x1983 = x1979 && x1982
x1983}) {
val x1985 = x1978
x1976 = x1985
val x1987 = x1985 >= x1506
val x2016 = if (x1987) {
x1977 = false
()
} else {
val x1989 = x1489(x1985)
val x1990 = x1989 > ' '
val x1991 = x1989 != '#'
val x1992 = x1990 && x1991
val x1993 = x1989 != '?'
val x1994 = x1992 && x1993
val x1995 = x1989 != ''
val x1996 = x1994 && x1995
val x2014 = if (x1996) {
val x2001 = x1972
val x2002 = x1973
val x2003 = x1974
val x2005 = x2001+x1989
x1972 = x2005
x1973 = false
val x1997 = x1985 + 1
x1974 = x1997
x1978 = x1997
()
} else {
x1977 = false
()
}
x2014
}
x2016
}
val x2019 = x1972
val x2020 = x1973
val x2021 = x1974
val x2391 = if (x2020) {
x1490 = x161
x1491 = true
x1492 = 0
()
} else {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x1825 = {x1500: (Int) => 
var x1502: Anon1863173035 = x161
var x1503: Boolean = true
var x1504: Int = x1500
val x1507 = x1500 >= x1506
val x1819 = if (x1507) {
x1502 = x161
x1503 = true
x1504 = x1500
()
} else {
val x1509 = x1489(x1500)
val x1510 = x1509 == '?'
val x1817 = if (x1510) {
var x1518: java.lang.String = ""
var x1519: Boolean = false
val x1511 = x1500 + 1
var x1520: Int = x1511
var x1522: Int = -1
var x1523: Boolean = true
var x1524: Int = x1511
val x1558 = while ({val x1525 = x1523
val x1526 = x1522
val x1527 = x1524
val x1528 = x1526 != x1527
val x1529 = x1525 && x1528
x1529}) {
val x1531 = x1524
x1522 = x1531
val x1533 = x1531 >= x1506
val x1556 = if (x1533) {
x1523 = false
()
} else {
val x1535 = x1489(x1531)
val x1536 = x1535 == '?'
val x1554 = if (x1536) {
val x1541 = x1518
val x1542 = x1519
val x1543 = x1520
val x1545 = x1541+x1535
x1518 = x1545
x1519 = false
val x1537 = x1531 + 1
x1520 = x1537
x1524 = x1537
()
} else {
x1523 = false
()
}
x1554
}
x1556
}
val x1559 = x1518
val x1560 = x1519
val x1561 = x1520
val x1811 = if (x1560) {
x1502 = x161
x1503 = true
x1504 = x1511
()
} else {
var x1577: java.lang.String = ""
var x1578: Boolean = false
var x1579: Int = x1561
var x1581: Int = -1
var x1582: Boolean = true
var x1583: Int = x1561
val x1621 = while ({val x1584 = x1582
val x1585 = x1581
val x1586 = x1583
val x1587 = x1585 != x1586
val x1588 = x1584 && x1587
x1588}) {
val x1590 = x1583
x1581 = x1590
val x1592 = x1590 >= x1506
val x1619 = if (x1592) {
x1582 = false
()
} else {
val x1594 = x1489(x1590)
val x1595 = x1594 > ' '
val x1596 = x1594 != '#'
val x1597 = x1595 && x1596
val x1598 = x1594 != ''
val x1599 = x1597 && x1598
val x1617 = if (x1599) {
val x1604 = x1577
val x1605 = x1578
val x1606 = x1579
val x1608 = x1604+x1594
x1577 = x1608
x1578 = false
val x1600 = x1590 + 1
x1579 = x1600
x1583 = x1600
()
} else {
x1582 = false
()
}
x1617
}
x1619
}
val x1622 = x1577
val x1623 = x1578
val x1624 = x1579
val x1809 = if (x1623) {
x1502 = x161
x1503 = true
x1504 = x1511
()
} else {
val x1626 = x1624 >= x1506
val x1807 = if (x1626) {
val x1640 = new Anon1863173035("","","",x1622,"",80)
x1502 = x1640
x1503 = false
x1504 = x1624
()
} else {
val x1628 = x1489(x1624)
val x1629 = x1628 == '#'
val x1805 = if (x1629) {
var x1647: java.lang.String = ""
var x1648: Boolean = false
val x1630 = x1624 + 1
var x1649: Int = x1630
var x1651: Int = -1
var x1652: Boolean = true
var x1653: Int = x1630
val x1687 = while ({val x1654 = x1652
val x1655 = x1651
val x1656 = x1653
val x1657 = x1655 != x1656
val x1658 = x1654 && x1657
x1658}) {
val x1660 = x1653
x1651 = x1660
val x1662 = x1660 >= x1506
val x1685 = if (x1662) {
x1652 = false
()
} else {
val x1664 = x1489(x1660)
val x1665 = x1664 == '#'
val x1683 = if (x1665) {
val x1670 = x1647
val x1671 = x1648
val x1672 = x1649
val x1674 = x1670+x1664
x1647 = x1674
x1648 = false
val x1666 = x1660 + 1
x1649 = x1666
x1653 = x1666
()
} else {
x1652 = false
()
}
x1683
}
x1685
}
val x1688 = x1647
val x1689 = x1648
val x1690 = x1649
val x1799 = if (x1689) {
val x1640 = new Anon1863173035("","","",x1622,"",80)
x1502 = x1640
x1503 = false
x1504 = x1630
()
} else {
var x1702: java.lang.String = ""
var x1703: Boolean = false
var x1704: Int = x1690
var x1706: Int = -1
var x1707: Boolean = true
var x1708: Int = x1690
val x1744 = while ({val x1709 = x1707
val x1710 = x1706
val x1711 = x1708
val x1712 = x1710 != x1711
val x1713 = x1709 && x1712
x1713}) {
val x1715 = x1708
x1706 = x1715
val x1717 = x1715 >= x1506
val x1742 = if (x1717) {
x1707 = false
()
} else {
val x1719 = x1489(x1715)
val x1720 = x1719 > ' '
val x1721 = x1719 != ''
val x1722 = x1720 && x1721
val x1740 = if (x1722) {
val x1727 = x1702
val x1728 = x1703
val x1729 = x1704
val x1731 = x1727+x1719
x1702 = x1731
x1703 = false
val x1723 = x1715 + 1
x1704 = x1723
x1708 = x1723
()
} else {
x1707 = false
()
}
x1740
}
x1742
}
val x1745 = x1702
val x1746 = x1703
val x1747 = x1704
val x1753 = if (x1746) {
true
} else {
false
}
val x1762 = if (x1753) {
false
} else {
false
}
val x1768 = if (x1762) {
true
} else {
false
}
val x1791 = if (x1768) {
x161
} else {
val x1767 = if (x1762) {
x935
} else {
val x1759 = if (x1753) {
x161
} else {
val x1752 = if (x1746) {
x161
} else {
val x1750 = new Anon1863173035("","","","",x1745,80)
x1750
}
x1752
}
val x1760 = if (x1753) {
false
} else {
true
}
val x1761 = new OptionAnon1863173035(x1759,x1760)
val x1765 = new Tuple2StringOptionAnon1863173035(x1622,x1761)
x1765
}
val x1773 = x1767._2
val x1774 = x1773.defined
val x1783 = if (x1774) {
val x1775 = x1773.value
val x1776 = x1775.schema
x1776
} else {
""
}
val x1784 = if (x1774) {
val x1775 = x1773.value
val x1777 = x1775.hostName
x1777
} else {
""
}
val x1785 = if (x1774) {
val x1775 = x1773.value
val x1778 = x1775.path
x1778
} else {
""
}
val x1772 = x1767._1
val x1786 = if (x1774) {
x1772
} else {
x1772
}
val x1787 = if (x1774) {
val x1775 = x1773.value
val x1779 = x1775.fragment
x1779
} else {
""
}
val x1788 = if (x1774) {
val x1775 = x1773.value
val x1780 = x1775.port
x1780
} else {
80
}
val x1789 = new Anon1863173035(x1783,x1784,x1785,x1786,x1787,x1788)
x1789
}
x1502 = x1791
val x1792 = if (x1768) {
true
} else {
false
}
x1503 = x1792
val x1769 = if (x1762) {
x1511
} else {
val x1754 = if (x1746) {
x1747
} else {
x1747
}
val x1763 = if (x1753) {
x1754
} else {
x1754
}
x1763
}
val x1793 = if (x1768) {
x1769
} else {
x1769
}
x1504 = x1793
()
}
x1799
} else {
val x1640 = new Anon1863173035("","","",x1622,"",80)
x1502 = x1640
x1503 = false
x1504 = x1624
()
}
x1805
}
x1807
}
x1809
}
x1811
} else {
x1502 = x161
x1503 = true
x1504 = x1500
()
}
x1817
}
val x1820 = x1502
val x1821 = x1503
val x1822 = x1504
val x1823 = new ParseResultAnon1863173035(x1820,x1821,x1822)
x1823
}
val x1971 = {x1494: (Int) => 
var x1496: Anon1863173035 = x161
var x1497: Boolean = true
var x1498: Int = x1494
val x1826 = x1825(x1494)
val x1827 = x1826.empty
val x1965 = if (x1827) {
val x1828 = x1494 >= x1506
val x1957 = if (x1828) {
x1496 = x161
x1497 = true
x1498 = x1494
()
} else {
val x1830 = x1489(x1494)
val x1831 = x1830 == '#'
val x1955 = if (x1831) {
var x1839: java.lang.String = ""
var x1840: Boolean = false
val x1832 = x1494 + 1
var x1841: Int = x1832
var x1843: Int = -1
var x1844: Boolean = true
var x1845: Int = x1832
val x1879 = while ({val x1846 = x1844
val x1847 = x1843
val x1848 = x1845
val x1849 = x1847 != x1848
val x1850 = x1846 && x1849
x1850}) {
val x1852 = x1845
x1843 = x1852
val x1854 = x1852 >= x1506
val x1877 = if (x1854) {
x1844 = false
()
} else {
val x1856 = x1489(x1852)
val x1857 = x1856 == '#'
val x1875 = if (x1857) {
val x1862 = x1839
val x1863 = x1840
val x1864 = x1841
val x1866 = x1862+x1856
x1839 = x1866
x1840 = false
val x1858 = x1852 + 1
x1841 = x1858
x1845 = x1858
()
} else {
x1844 = false
()
}
x1875
}
x1877
}
val x1880 = x1839
val x1881 = x1840
val x1882 = x1841
val x1949 = if (x1881) {
x1496 = x161
x1497 = true
x1498 = x1832
()
} else {
var x1891: java.lang.String = ""
var x1892: Boolean = false
var x1893: Int = x1882
var x1895: Int = -1
var x1896: Boolean = true
var x1897: Int = x1882
val x1933 = while ({val x1898 = x1896
val x1899 = x1895
val x1900 = x1897
val x1901 = x1899 != x1900
val x1902 = x1898 && x1901
x1902}) {
val x1904 = x1897
x1895 = x1904
val x1906 = x1904 >= x1506
val x1931 = if (x1906) {
x1896 = false
()
} else {
val x1908 = x1489(x1904)
val x1909 = x1908 > ' '
val x1910 = x1908 != ''
val x1911 = x1909 && x1910
val x1929 = if (x1911) {
val x1916 = x1891
val x1917 = x1892
val x1918 = x1893
val x1920 = x1916+x1908
x1891 = x1920
x1892 = false
val x1912 = x1904 + 1
x1893 = x1912
x1897 = x1912
()
} else {
x1896 = false
()
}
x1929
}
x1931
}
val x1934 = x1891
val x1935 = x1892
val x1936 = x1893
val x1941 = if (x1935) {
x161
} else {
val x1939 = new Anon1863173035("","","","",x1934,80)
x1939
}
x1496 = x1941
val x1942 = if (x1935) {
true
} else {
false
}
x1497 = x1942
val x1943 = if (x1935) {
x1936
} else {
x1936
}
x1498 = x1943
()
}
x1949
} else {
x1496 = x161
x1497 = true
x1498 = x1494
()
}
x1955
}
x1957
} else {
val x1959 = x1826.res
x1496 = x1959
x1497 = x1827
val x1962 = x1826.next
x1498 = x1962
()
}
val x1966 = x1496
val x1967 = x1497
val x1968 = x1498
val x1969 = new ParseResultAnon1863173035(x1966,x1967,x1968)
x1969
}
val x2023 = x1971(x2021)
val x2032 = x2023.empty
val x2041 = if (x2032) {
false
} else {
false
}
val x2047 = if (x2041) {
true
} else {
false
}
val x2389 = if (x2047) {
x1490 = x161
x1491 = true
val x2048 = if (x2041) {
0
} else {
val x2033 = x2023.next
val x2042 = if (x2032) {
x2033
} else {
x2033
}
x2042
}
x1492 = x2048
()
} else {
val x2048 = if (x2041) {
0
} else {
val x2033 = x2023.next
val x2042 = if (x2032) {
x2033
} else {
x2033
}
x2042
}
val x2050 = x2048 >= x1506
val x2387 = if (x2050) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
} else {
val x2052 = x1489(x2048)
val x2053 = x2052 == 'H'
val x2385 = if (x2053) {
val x2054 = x2048 + 1
val x2093 = x2054 >= x1506
val x2379 = if (x2093) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
} else {
val x2095 = x1489(x2054)
val x2096 = x2095 == 'T'
val x2377 = if (x2096) {
val x2097 = x2054 + 1
val x2105 = x2097 >= x1506
val x2371 = if (x2105) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
} else {
val x2107 = x1489(x2097)
val x2108 = x2107 == 'T'
val x2369 = if (x2108) {
val x2109 = x2097 + 1
val x2118 = x2109 >= x1506
val x2363 = if (x2118) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
} else {
val x2120 = x1489(x2109)
val x2121 = x2120 == 'P'
val x2361 = if (x2121) {
val x2122 = x2109 + 1
val x2131 = x2122 >= x1506
val x2355 = if (x2131) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
} else {
val x2133 = x1489(x2122)
val x2134 = x2133 == '/'
val x2353 = if (x2134) {
var x2166: Int = 0
var x2167: Boolean = false
val x2135 = x2122 + 1
var x2168: Int = x2135
var x2170: Int = -1
var x2171: Boolean = true
var x2172: Int = x2135
val x2213 = while ({val x2173 = x2171
val x2174 = x2170
val x2175 = x2172
val x2176 = x2174 != x2175
val x2177 = x2173 && x2176
x2177}) {
val x2179 = x2172
x2170 = x2179
val x2181 = x2179 >= x1506
val x2211 = if (x2181) {
x2171 = false
()
} else {
val x2183 = x1489(x2179)
val x2184 = x2183 >= '0'
val x2185 = x2183 <= '9'
val x2186 = x2184 && x2185
val x2209 = if (x2186) {
val x2195 = x2166
val x2196 = x2167
val x2197 = x2168
val x2192 = x2183 - '0'
val x2193 = x2192.toInt
val x2199 = x2195 * 10
val x2200 = x2199 + x2193
x2166 = x2200
x2167 = false
val x2187 = x2179 + 1
x2168 = x2187
x2172 = x2187
()
} else {
x2171 = false
()
}
x2209
}
x2211
}
val x2214 = x2166
val x2215 = x2167
val x2216 = x2168
val x2347 = if (x2215) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2135
()
} else {
val x2219 = x2216 >= x1506
val x2345 = if (x2219) {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2135
()
} else {
val x2221 = x1489(x2216)
val x2222 = x2221 == '.'
val x2343 = if (x2222) {
var x2238: Int = 0
var x2239: Boolean = false
val x2223 = x2216 + 1
var x2240: Int = x2223
var x2242: Int = -1
var x2243: Boolean = true
var x2244: Int = x2223
val x2285 = while ({val x2245 = x2243
val x2246 = x2242
val x2247 = x2244
val x2248 = x2246 != x2247
val x2249 = x2245 && x2248
x2249}) {
val x2251 = x2244
x2242 = x2251
val x2253 = x2251 >= x1506
val x2283 = if (x2253) {
x2243 = false
()
} else {
val x2255 = x1489(x2251)
val x2256 = x2255 >= '0'
val x2257 = x2255 <= '9'
val x2258 = x2256 && x2257
val x2281 = if (x2258) {
val x2267 = x2238
val x2268 = x2239
val x2269 = x2240
val x2264 = x2255 - '0'
val x2265 = x2264.toInt
val x2271 = x2267 * 10
val x2272 = x2271 + x2265
x2238 = x2272
x2239 = false
val x2259 = x2251 + 1
x2240 = x2259
x2244 = x2259
()
} else {
x2243 = false
()
}
x2281
}
x2283
}
val x2286 = x2238
val x2287 = x2239
val x2288 = x2240
val x2293 = if (x2287) {
true
} else {
false
}
val x2302 = if (x2293) {
false
} else {
false
}
val x2307 = if (x2302) {
true
} else {
false
}
val x2331 = if (x2307) {
x161
} else {
val x2306 = if (x2302) {
x935
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
x2046
}
val x2312 = x2306._2
val x2313 = x2312.defined
val x2323 = if (x2313) {
val x2314 = x2312.value
val x2316 = x2314.schema
x2316
} else {
""
}
val x2324 = if (x2313) {
val x2314 = x2312.value
val x2317 = x2314.hostName
x2317
} else {
""
}
val x2311 = x2306._1
val x2315 = "/"+x2311
val x2325 = if (x2313) {
x2315
} else {
x2315
}
val x2326 = if (x2313) {
val x2314 = x2312.value
val x2318 = x2314.queryString
x2318
} else {
""
}
val x2327 = if (x2313) {
val x2314 = x2312.value
val x2319 = x2314.fragment
x2319
} else {
""
}
val x2328 = if (x2313) {
val x2314 = x2312.value
val x2320 = x2314.port
x2320
} else {
80
}
val x2329 = new Anon1863173035(x2323,x2324,x2325,x2326,x2327,x2328)
x2329
}
x1490 = x2331
val x2332 = if (x2307) {
true
} else {
false
}
x1491 = x2332
val x2308 = if (x2302) {
0
} else {
val x2294 = if (x2287) {
x2135
} else {
x2288
}
val x2303 = if (x2293) {
x2294
} else {
x2294
}
x2303
}
val x2333 = if (x2307) {
x2308
} else {
x2308
}
x1492 = x2333
()
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2135
()
}
x2343
}
x2345
}
x2347
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
}
x2353
}
x2355
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
}
x2361
}
x2363
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
}
x2369
}
x2371
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
}
x2377
}
x2379
} else {
val x2046 = if (x2041) {
x935
} else {
val x2038 = if (x2032) {
x161
} else {
val x2035 = x2023.res
x2035
}
val x2039 = if (x2032) {
false
} else {
true
}
val x2040 = new OptionAnon1863173035(x2038,x2039)
val x2044 = new Tuple2StringOptionAnon1863173035(x2019,x2040)
x2044
}
val x2070 = x2046._2
val x2071 = x2070.defined
val x2081 = if (x2071) {
val x2072 = x2070.value
val x2074 = x2072.schema
x2074
} else {
""
}
val x2082 = if (x2071) {
val x2072 = x2070.value
val x2075 = x2072.hostName
x2075
} else {
""
}
val x2069 = x2046._1
val x2073 = "/"+x2069
val x2083 = if (x2071) {
x2073
} else {
x2073
}
val x2084 = if (x2071) {
val x2072 = x2070.value
val x2076 = x2072.queryString
x2076
} else {
""
}
val x2085 = if (x2071) {
val x2072 = x2070.value
val x2077 = x2072.fragment
x2077
} else {
""
}
val x2086 = if (x2071) {
val x2072 = x2070.value
val x2078 = x2072.port
x2078
} else {
80
}
val x2087 = new Anon1863173035(x2081,x2082,x2083,x2084,x2085,x2086)
x1490 = x2087
x1491 = false
x1492 = x2048
()
}
x2385
}
x2387
}
x2389
}
val x2392 = x1490
val x2393 = x1491
val x2394 = x1492
val x2395 = new ParseResultAnon1863173035(x2392,x2393,x2394)
val x2396 = println(x2395)
x2396
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=3000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,/,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,/,,asdfadsf,80),false,10)
ParseResultAnon1863173035(Anon1863173035(,,/adsfasd.html,asdf,adsf,80),false,24)
ParseResultAnon1863173035(Anon1863173035(,,/asd,,,80),false,3)
nVars=4000
nVars=5000
nVars=6000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class urlParse extends ((Array[Char])=>(Unit)) {
def apply(x3305:Array[Char]): Unit = {
val x161 = null.asInstanceOf[Anon1863173035]
var x3306: Anon1863173035 = x161
var x3307: Boolean = true
var x3308: Int = -1
val x1 = null.asInstanceOf[java.lang.String]
val x3322 = x3305.length
val x189 = null.asInstanceOf[Tuple2CharString]
val x3506 = {x3316: (Int) => 
var x3318: java.lang.String = x1
var x3319: Boolean = true
var x3320: Int = x3316
val x3323 = x3316 >= x3322
val x3500 = if (x3323) {
x3318 = x1
x3319 = true
x3320 = x3316
()
} else {
val x3325 = x3305(x3316)
val x3326 = x3325 >= 'a'
val x3327 = x3325 <= 'z'
val x3328 = x3326 && x3327
val x3329 = x3325 >= 'A'
val x3330 = x3325 <= 'Z'
val x3331 = x3329 && x3330
val x3332 = x3328 || x3331
val x3498 = if (x3332) {
var x3342: java.lang.String = ""
var x3343: Boolean = false
val x3333 = x3316 + 1
var x3344: Int = x3333
var x3346: Int = -1
var x3347: Boolean = true
var x3348: Int = x3333
val x3388 = while ({val x3349 = x3347
val x3350 = x3346
val x3351 = x3348
val x3352 = x3350 != x3351
val x3353 = x3349 && x3352
x3353}) {
val x3355 = x3348
x3346 = x3355
val x3357 = x3355 >= x3322
val x3386 = if (x3357) {
x3347 = false
()
} else {
val x3359 = x3305(x3355)
val x3360 = x3359 >= 'a'
val x3361 = x3359 <= 'z'
val x3362 = x3360 && x3361
val x3363 = x3359 >= 'A'
val x3364 = x3359 <= 'Z'
val x3365 = x3363 && x3364
val x3366 = x3362 || x3365
val x3384 = if (x3366) {
val x3371 = x3342
val x3372 = x3343
val x3373 = x3344
val x3375 = x3371+x3359
x3342 = x3375
x3343 = false
val x3367 = x3355 + 1
x3344 = x3367
x3348 = x3367
()
} else {
x3347 = false
()
}
x3384
}
x3386
}
val x3389 = x3342
val x3390 = x3343
val x3391 = x3344
val x3396 = if (x3390) {
true
} else {
false
}
val x3405 = if (x3396) {
true
} else {
false
}
val x3492 = if (x3405) {
val x3404 = if (x3396) {
x1
} else {
val x3395 = if (x3390) {
x189
} else {
val x3393 = new Tuple2CharString(x3325,x3389)
x3393
}
val x3400 = x3395._1
val x3401 = x3395._2
val x3402 = x3400+x3401
x3402
}
x3318 = x3404
x3319 = x3405
val x3397 = if (x3390) {
x3316
} else {
x3391
}
val x3406 = if (x3396) {
x3397
} else {
x3397
}
x3320 = x3406
()
} else {
val x3397 = if (x3390) {
x3316
} else {
x3391
}
val x3406 = if (x3396) {
x3397
} else {
x3397
}
val x3408 = x3406 >= x3322
val x3490 = if (x3408) {
x3318 = x1
x3319 = true
x3320 = x3316
()
} else {
val x3410 = x3305(x3406)
val x3411 = x3410 == ':'
val x3488 = if (x3411) {
val x3412 = x3406 + 1
val x3425 = x3412 >= x3322
val x3482 = if (x3425) {
x3318 = x1
x3319 = true
x3320 = x3316
()
} else {
val x3427 = x3305(x3412)
val x3428 = x3427 == '/'
val x3480 = if (x3428) {
val x3429 = x3412 + 1
val x3437 = x3429 >= x3322
val x3474 = if (x3437) {
x3318 = x1
x3319 = true
x3320 = x3316
()
} else {
val x3439 = x3305(x3429)
val x3440 = x3439 == '/'
val x3472 = if (x3440) {
val x3404 = if (x3396) {
x1
} else {
val x3395 = if (x3390) {
x189
} else {
val x3393 = new Tuple2CharString(x3325,x3389)
x3393
}
val x3400 = x3395._1
val x3401 = x3395._2
val x3402 = x3400+x3401
x3402
}
x3318 = x3404
x3319 = false
val x3441 = x3429 + 1
x3320 = x3441
()
} else {
x3318 = x1
x3319 = true
x3320 = x3316
()
}
x3472
}
x3474
} else {
x3318 = x1
x3319 = true
x3320 = x3316
()
}
x3480
}
x3482
} else {
x3318 = x1
x3319 = true
x3320 = x3316
()
}
x3488
}
x3490
}
x3492
} else {
x3318 = x1
x3319 = true
x3320 = x3316
()
}
x3498
}
val x3501 = x3318
val x3502 = x3319
val x3503 = x3320
val x3504 = new ParseResultString(x3501,x3502,x3503)
x3504
}
val x3549 = {x3310: (Int) => 
var x3312: java.lang.String = x1
var x3313: Boolean = true
var x3314: Int = x3310
val x3507 = x3506(x3310)
val x3508 = x3507.empty
val x3543 = if (x3508) {
val x3509 = x3310 >= x3322
val x3535 = if (x3509) {
x3312 = x1
x3313 = true
x3314 = x3310
()
} else {
val x3511 = x3305(x3310)
val x3512 = x3511 >= '0'
val x3513 = x3511 <= '9'
val x3514 = x3512 && x3513
val x3515 = x3511 == '.'
val x3516 = x3514 || x3515
val x3533 = if (x3516) {
val x3523 = ""+x3511
x3312 = x3523
x3313 = false
val x3517 = x3310 + 1
x3314 = x3517
()
} else {
x3312 = x1
x3313 = true
x3314 = x3310
()
}
x3533
}
x3535
} else {
val x3537 = x3507.res
x3312 = x3537
x3313 = x3508
val x3540 = x3507.next
x3314 = x3540
()
}
val x3544 = x3312
val x3545 = x3313
val x3546 = x3314
val x3547 = new ParseResultString(x3544,x3545,x3546)
x3547
}
val x5769 = x3549(0)
val x5770 = x5769.empty
val x6149 = if (x5770) {
x3306 = x161
x3307 = true
x3308 = 0
()
} else {
val x5771 = x5769.next
val x5772 = x5771 >= x3322
val x6147 = if (x5772) {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4379 = {x4055: (Int) => 
var x4057: Anon1863173035 = x161
var x4058: Boolean = true
var x4059: Int = x4055
val x4061 = x4055 >= x3322
val x4373 = if (x4061) {
x4057 = x161
x4058 = true
x4059 = x4055
()
} else {
val x4063 = x3305(x4055)
val x4064 = x4063 == '?'
val x4371 = if (x4064) {
var x4072: java.lang.String = ""
var x4073: Boolean = false
val x4065 = x4055 + 1
var x4074: Int = x4065
var x4076: Int = -1
var x4077: Boolean = true
var x4078: Int = x4065
val x4112 = while ({val x4079 = x4077
val x4080 = x4076
val x4081 = x4078
val x4082 = x4080 != x4081
val x4083 = x4079 && x4082
x4083}) {
val x4085 = x4078
x4076 = x4085
val x4087 = x4085 >= x3322
val x4110 = if (x4087) {
x4077 = false
()
} else {
val x4089 = x3305(x4085)
val x4090 = x4089 == '?'
val x4108 = if (x4090) {
val x4095 = x4072
val x4096 = x4073
val x4097 = x4074
val x4099 = x4095+x4089
x4072 = x4099
x4073 = false
val x4091 = x4085 + 1
x4074 = x4091
x4078 = x4091
()
} else {
x4077 = false
()
}
x4108
}
x4110
}
val x4113 = x4072
val x4114 = x4073
val x4115 = x4074
val x4365 = if (x4114) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
var x4131: java.lang.String = ""
var x4132: Boolean = false
var x4133: Int = x4115
var x4135: Int = -1
var x4136: Boolean = true
var x4137: Int = x4115
val x4175 = while ({val x4138 = x4136
val x4139 = x4135
val x4140 = x4137
val x4141 = x4139 != x4140
val x4142 = x4138 && x4141
x4142}) {
val x4144 = x4137
x4135 = x4144
val x4146 = x4144 >= x3322
val x4173 = if (x4146) {
x4136 = false
()
} else {
val x4148 = x3305(x4144)
val x4149 = x4148 > ' '
val x4150 = x4148 != '#'
val x4151 = x4149 && x4150
val x4152 = x4148 != ''
val x4153 = x4151 && x4152
val x4171 = if (x4153) {
val x4158 = x4131
val x4159 = x4132
val x4160 = x4133
val x4162 = x4158+x4148
x4131 = x4162
x4132 = false
val x4154 = x4144 + 1
x4133 = x4154
x4137 = x4154
()
} else {
x4136 = false
()
}
x4171
}
x4173
}
val x4176 = x4131
val x4177 = x4132
val x4178 = x4133
val x4363 = if (x4177) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
val x4180 = x4178 >= x3322
val x4361 = if (x4180) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
} else {
val x4182 = x3305(x4178)
val x4183 = x4182 == '#'
val x4359 = if (x4183) {
var x4201: java.lang.String = ""
var x4202: Boolean = false
val x4184 = x4178 + 1
var x4203: Int = x4184
var x4205: Int = -1
var x4206: Boolean = true
var x4207: Int = x4184
val x4241 = while ({val x4208 = x4206
val x4209 = x4205
val x4210 = x4207
val x4211 = x4209 != x4210
val x4212 = x4208 && x4211
x4212}) {
val x4214 = x4207
x4205 = x4214
val x4216 = x4214 >= x3322
val x4239 = if (x4216) {
x4206 = false
()
} else {
val x4218 = x3305(x4214)
val x4219 = x4218 == '#'
val x4237 = if (x4219) {
val x4224 = x4201
val x4225 = x4202
val x4226 = x4203
val x4228 = x4224+x4218
x4201 = x4228
x4202 = false
val x4220 = x4214 + 1
x4203 = x4220
x4207 = x4220
()
} else {
x4206 = false
()
}
x4237
}
x4239
}
val x4242 = x4201
val x4243 = x4202
val x4244 = x4203
val x4353 = if (x4243) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4184
()
} else {
var x4256: java.lang.String = ""
var x4257: Boolean = false
var x4258: Int = x4244
var x4260: Int = -1
var x4261: Boolean = true
var x4262: Int = x4244
val x4298 = while ({val x4263 = x4261
val x4264 = x4260
val x4265 = x4262
val x4266 = x4264 != x4265
val x4267 = x4263 && x4266
x4267}) {
val x4269 = x4262
x4260 = x4269
val x4271 = x4269 >= x3322
val x4296 = if (x4271) {
x4261 = false
()
} else {
val x4273 = x3305(x4269)
val x4274 = x4273 > ' '
val x4275 = x4273 != ''
val x4276 = x4274 && x4275
val x4294 = if (x4276) {
val x4281 = x4256
val x4282 = x4257
val x4283 = x4258
val x4285 = x4281+x4273
x4256 = x4285
x4257 = false
val x4277 = x4269 + 1
x4258 = x4277
x4262 = x4277
()
} else {
x4261 = false
()
}
x4294
}
x4296
}
val x4299 = x4256
val x4300 = x4257
val x4301 = x4258
val x4307 = if (x4300) {
true
} else {
false
}
val x4316 = if (x4307) {
false
} else {
false
}
val x4322 = if (x4316) {
true
} else {
false
}
val x4345 = if (x4322) {
x161
} else {
val x4321 = if (x4316) {
x935
} else {
val x4313 = if (x4307) {
x161
} else {
val x4306 = if (x4300) {
x161
} else {
val x4304 = new Anon1863173035("","","","",x4299,80)
x4304
}
x4306
}
val x4314 = if (x4307) {
false
} else {
true
}
val x4315 = new OptionAnon1863173035(x4313,x4314)
val x4319 = new Tuple2StringOptionAnon1863173035(x4176,x4315)
x4319
}
val x4327 = x4321._2
val x4328 = x4327.defined
val x4337 = if (x4328) {
val x4329 = x4327.value
val x4330 = x4329.schema
x4330
} else {
""
}
val x4338 = if (x4328) {
val x4329 = x4327.value
val x4331 = x4329.hostName
x4331
} else {
""
}
val x4339 = if (x4328) {
val x4329 = x4327.value
val x4332 = x4329.path
x4332
} else {
""
}
val x4326 = x4321._1
val x4340 = if (x4328) {
x4326
} else {
x4326
}
val x4341 = if (x4328) {
val x4329 = x4327.value
val x4333 = x4329.fragment
x4333
} else {
""
}
val x4342 = if (x4328) {
val x4329 = x4327.value
val x4334 = x4329.port
x4334
} else {
80
}
val x4343 = new Anon1863173035(x4337,x4338,x4339,x4340,x4341,x4342)
x4343
}
x4057 = x4345
val x4346 = if (x4322) {
true
} else {
false
}
x4058 = x4346
val x4323 = if (x4316) {
x4065
} else {
val x4308 = if (x4300) {
x4301
} else {
x4301
}
val x4317 = if (x4307) {
x4308
} else {
x4308
}
x4317
}
val x4347 = if (x4322) {
x4323
} else {
x4323
}
x4059 = x4347
()
}
x4353
} else {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
}
x4359
}
x4361
}
x4363
}
x4365
} else {
x4057 = x161
x4058 = true
x4059 = x4055
()
}
x4371
}
val x4374 = x4057
val x4375 = x4058
val x4376 = x4059
val x4377 = new ParseResultAnon1863173035(x4374,x4375,x4376)
x4377
}
val x4525 = {x4049: (Int) => 
var x4051: Anon1863173035 = x161
var x4052: Boolean = true
var x4053: Int = x4049
val x4380 = x4379(x4049)
val x4381 = x4380.empty
val x4519 = if (x4381) {
val x4382 = x4049 >= x3322
val x4511 = if (x4382) {
x4051 = x161
x4052 = true
x4053 = x4049
()
} else {
val x4384 = x3305(x4049)
val x4385 = x4384 == '#'
val x4509 = if (x4385) {
var x4393: java.lang.String = ""
var x4394: Boolean = false
val x4386 = x4049 + 1
var x4395: Int = x4386
var x4397: Int = -1
var x4398: Boolean = true
var x4399: Int = x4386
val x4433 = while ({val x4400 = x4398
val x4401 = x4397
val x4402 = x4399
val x4403 = x4401 != x4402
val x4404 = x4400 && x4403
x4404}) {
val x4406 = x4399
x4397 = x4406
val x4408 = x4406 >= x3322
val x4431 = if (x4408) {
x4398 = false
()
} else {
val x4410 = x3305(x4406)
val x4411 = x4410 == '#'
val x4429 = if (x4411) {
val x4416 = x4393
val x4417 = x4394
val x4418 = x4395
val x4420 = x4416+x4410
x4393 = x4420
x4394 = false
val x4412 = x4406 + 1
x4395 = x4412
x4399 = x4412
()
} else {
x4398 = false
()
}
x4429
}
x4431
}
val x4434 = x4393
val x4435 = x4394
val x4436 = x4395
val x4503 = if (x4435) {
x4051 = x161
x4052 = true
x4053 = x4386
()
} else {
var x4445: java.lang.String = ""
var x4446: Boolean = false
var x4447: Int = x4436
var x4449: Int = -1
var x4450: Boolean = true
var x4451: Int = x4436
val x4487 = while ({val x4452 = x4450
val x4453 = x4449
val x4454 = x4451
val x4455 = x4453 != x4454
val x4456 = x4452 && x4455
x4456}) {
val x4458 = x4451
x4449 = x4458
val x4460 = x4458 >= x3322
val x4485 = if (x4460) {
x4450 = false
()
} else {
val x4462 = x3305(x4458)
val x4463 = x4462 > ' '
val x4464 = x4462 != ''
val x4465 = x4463 && x4464
val x4483 = if (x4465) {
val x4470 = x4445
val x4471 = x4446
val x4472 = x4447
val x4474 = x4470+x4462
x4445 = x4474
x4446 = false
val x4466 = x4458 + 1
x4447 = x4466
x4451 = x4466
()
} else {
x4450 = false
()
}
x4483
}
x4485
}
val x4488 = x4445
val x4489 = x4446
val x4490 = x4447
val x4495 = if (x4489) {
x161
} else {
val x4493 = new Anon1863173035("","","","",x4488,80)
x4493
}
x4051 = x4495
val x4496 = if (x4489) {
true
} else {
false
}
x4052 = x4496
val x4497 = if (x4489) {
x4490
} else {
x4490
}
x4053 = x4497
()
}
x4503
} else {
x4051 = x161
x4052 = true
x4053 = x4049
()
}
x4509
}
x4511
} else {
val x4513 = x4380.res
x4051 = x4513
x4052 = x4381
val x4516 = x4380.next
x4053 = x4516
()
}
val x4520 = x4051
val x4521 = x4052
val x4522 = x4053
val x4523 = new ParseResultAnon1863173035(x4520,x4521,x4522)
x4523
}
val x5439 = {x3556: (Int) => 
var x3558: Anon1863173035 = x161
var x3559: Boolean = true
var x3560: Int = x3556
val x3562 = x3556 >= x3322
val x5433 = if (x3562) {
x3558 = x161
x3559 = true
x3560 = x3556
()
} else {
val x3564 = x3305(x3556)
val x3565 = x3564 == '/'
val x5431 = if (x3565) {
var x4527: java.lang.String = ""
var x4528: Boolean = false
val x3566 = x3556 + 1
var x4529: Int = x3566
var x4531: Int = -1
var x4532: Boolean = true
var x4533: Int = x3566
val x4573 = while ({val x4534 = x4532
val x4535 = x4531
val x4536 = x4533
val x4537 = x4535 != x4536
val x4538 = x4534 && x4537
x4538}) {
val x4540 = x4533
x4531 = x4540
val x4542 = x4540 >= x3322
val x4571 = if (x4542) {
x4532 = false
()
} else {
val x4544 = x3305(x4540)
val x4545 = x4544 > ' '
val x4546 = x4544 != '#'
val x4547 = x4545 && x4546
val x4548 = x4544 != '?'
val x4549 = x4547 && x4548
val x4550 = x4544 != ''
val x4551 = x4549 && x4550
val x4569 = if (x4551) {
val x4556 = x4527
val x4557 = x4528
val x4558 = x4529
val x4560 = x4556+x4544
x4527 = x4560
x4528 = false
val x4552 = x4540 + 1
x4529 = x4552
x4533 = x4552
()
} else {
x4532 = false
()
}
x4569
}
x4571
}
val x4574 = x4527
val x4575 = x4528
val x4576 = x4529
val x4948 = if (x4575) {
x3558 = x161
x3559 = true
x3560 = x3566
()
} else {
val x4579 = x4525(x4576)
val x4591 = x4579.empty
val x4600 = if (x4591) {
false
} else {
false
}
val x4606 = if (x4600) {
true
} else {
false
}
val x4946 = if (x4606) {
x3558 = x161
x3559 = true
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
x3560 = x4607
()
} else {
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
val x4609 = x4607 >= x3322
val x4944 = if (x4609) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4611 = x3305(x4607)
val x4612 = x4611 == 'H'
val x4942 = if (x4612) {
val x4613 = x4607 + 1
val x4650 = x4613 >= x3322
val x4936 = if (x4650) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4652 = x3305(x4613)
val x4653 = x4652 == 'T'
val x4934 = if (x4653) {
val x4654 = x4613 + 1
val x4662 = x4654 >= x3322
val x4928 = if (x4662) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4664 = x3305(x4654)
val x4665 = x4664 == 'T'
val x4926 = if (x4665) {
val x4666 = x4654 + 1
val x4675 = x4666 >= x3322
val x4920 = if (x4675) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4677 = x3305(x4666)
val x4678 = x4677 == 'P'
val x4918 = if (x4678) {
val x4679 = x4666 + 1
val x4688 = x4679 >= x3322
val x4912 = if (x4688) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4690 = x3305(x4679)
val x4691 = x4690 == '/'
val x4910 = if (x4691) {
var x4723: Int = 0
var x4724: Boolean = false
val x4692 = x4679 + 1
var x4725: Int = x4692
var x4727: Int = -1
var x4728: Boolean = true
var x4729: Int = x4692
val x4770 = while ({val x4730 = x4728
val x4731 = x4727
val x4732 = x4729
val x4733 = x4731 != x4732
val x4734 = x4730 && x4733
x4734}) {
val x4736 = x4729
x4727 = x4736
val x4738 = x4736 >= x3322
val x4768 = if (x4738) {
x4728 = false
()
} else {
val x4740 = x3305(x4736)
val x4741 = x4740 >= '0'
val x4742 = x4740 <= '9'
val x4743 = x4741 && x4742
val x4766 = if (x4743) {
val x4752 = x4723
val x4753 = x4724
val x4754 = x4725
val x4749 = x4740 - '0'
val x4750 = x4749.toInt
val x4756 = x4752 * 10
val x4757 = x4756 + x4750
x4723 = x4757
x4724 = false
val x4744 = x4736 + 1
x4725 = x4744
x4729 = x4744
()
} else {
x4728 = false
()
}
x4766
}
x4768
}
val x4771 = x4723
val x4772 = x4724
val x4773 = x4725
val x4904 = if (x4772) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4776 = x4773 >= x3322
val x4902 = if (x4776) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4778 = x3305(x4773)
val x4779 = x4778 == '.'
val x4900 = if (x4779) {
var x4795: Int = 0
var x4796: Boolean = false
val x4780 = x4773 + 1
var x4797: Int = x4780
var x4799: Int = -1
var x4800: Boolean = true
var x4801: Int = x4780
val x4842 = while ({val x4802 = x4800
val x4803 = x4799
val x4804 = x4801
val x4805 = x4803 != x4804
val x4806 = x4802 && x4805
x4806}) {
val x4808 = x4801
x4799 = x4808
val x4810 = x4808 >= x3322
val x4840 = if (x4810) {
x4800 = false
()
} else {
val x4812 = x3305(x4808)
val x4813 = x4812 >= '0'
val x4814 = x4812 <= '9'
val x4815 = x4813 && x4814
val x4838 = if (x4815) {
val x4824 = x4795
val x4825 = x4796
val x4826 = x4797
val x4821 = x4812 - '0'
val x4822 = x4821.toInt
val x4828 = x4824 * 10
val x4829 = x4828 + x4822
x4795 = x4829
x4796 = false
val x4816 = x4808 + 1
x4797 = x4816
x4801 = x4816
()
} else {
x4800 = false
()
}
x4838
}
x4840
}
val x4843 = x4795
val x4844 = x4796
val x4845 = x4797
val x4850 = if (x4844) {
true
} else {
false
}
val x4859 = if (x4850) {
false
} else {
false
}
val x4864 = if (x4859) {
true
} else {
false
}
val x4888 = if (x4864) {
x161
} else {
val x4863 = if (x4859) {
x935
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
x4605
}
val x4869 = x4863._2
val x4870 = x4869.defined
val x4880 = if (x4870) {
val x4871 = x4869.value
val x4873 = x4871.schema
x4873
} else {
""
}
val x4881 = if (x4870) {
val x4871 = x4869.value
val x4874 = x4871.hostName
x4874
} else {
""
}
val x4868 = x4863._1
val x4872 = "/"+x4868
val x4882 = if (x4870) {
x4872
} else {
x4872
}
val x4883 = if (x4870) {
val x4871 = x4869.value
val x4875 = x4871.queryString
x4875
} else {
""
}
val x4884 = if (x4870) {
val x4871 = x4869.value
val x4876 = x4871.fragment
x4876
} else {
""
}
val x4885 = if (x4870) {
val x4871 = x4869.value
val x4877 = x4871.port
x4877
} else {
80
}
val x4886 = new Anon1863173035(x4880,x4881,x4882,x4883,x4884,x4885)
x4886
}
x3558 = x4888
val x4889 = if (x4864) {
true
} else {
false
}
x3559 = x4889
val x4865 = if (x4859) {
x3566
} else {
val x4851 = if (x4844) {
x4692
} else {
x4845
}
val x4860 = if (x4850) {
x4851
} else {
x4851
}
x4860
}
val x4890 = if (x4864) {
x4865
} else {
x4865
}
x3560 = x4890
()
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
}
x4900
}
x4902
}
x4904
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4910
}
x4912
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4918
}
x4920
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4926
}
x4928
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4934
}
x4936
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4942
}
x4944
}
x4946
}
x4948
} else {
x3558 = x161
x3559 = true
x3560 = x3556
()
}
x5431
}
val x5434 = x3558
val x5435 = x3559
val x5436 = x3560
val x5437 = new ParseResultAnon1863173035(x5434,x5435,x5436)
x5437
}
val x5768 = {x3550: (Int) => 
var x3552: Anon1863173035 = x161
var x3553: Boolean = true
var x3554: Int = x3550
val x5440 = x5439(x3550)
val x5441 = x5440.empty
val x5762 = if (x5441) {
val x5442 = x3550 >= x3322
val x5754 = if (x5442) {
x3552 = x161
x3553 = true
x3554 = x3550
()
} else {
val x5444 = x3305(x3550)
val x5445 = x5444 == '?'
val x5752 = if (x5445) {
var x5453: java.lang.String = ""
var x5454: Boolean = false
val x5446 = x3550 + 1
var x5455: Int = x5446
var x5457: Int = -1
var x5458: Boolean = true
var x5459: Int = x5446
val x5493 = while ({val x5460 = x5458
val x5461 = x5457
val x5462 = x5459
val x5463 = x5461 != x5462
val x5464 = x5460 && x5463
x5464}) {
val x5466 = x5459
x5457 = x5466
val x5468 = x5466 >= x3322
val x5491 = if (x5468) {
x5458 = false
()
} else {
val x5470 = x3305(x5466)
val x5471 = x5470 == '?'
val x5489 = if (x5471) {
val x5476 = x5453
val x5477 = x5454
val x5478 = x5455
val x5480 = x5476+x5470
x5453 = x5480
x5454 = false
val x5472 = x5466 + 1
x5455 = x5472
x5459 = x5472
()
} else {
x5458 = false
()
}
x5489
}
x5491
}
val x5494 = x5453
val x5495 = x5454
val x5496 = x5455
val x5746 = if (x5495) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
var x5512: java.lang.String = ""
var x5513: Boolean = false
var x5514: Int = x5496
var x5516: Int = -1
var x5517: Boolean = true
var x5518: Int = x5496
val x5556 = while ({val x5519 = x5517
val x5520 = x5516
val x5521 = x5518
val x5522 = x5520 != x5521
val x5523 = x5519 && x5522
x5523}) {
val x5525 = x5518
x5516 = x5525
val x5527 = x5525 >= x3322
val x5554 = if (x5527) {
x5517 = false
()
} else {
val x5529 = x3305(x5525)
val x5530 = x5529 > ' '
val x5531 = x5529 != '#'
val x5532 = x5530 && x5531
val x5533 = x5529 != ''
val x5534 = x5532 && x5533
val x5552 = if (x5534) {
val x5539 = x5512
val x5540 = x5513
val x5541 = x5514
val x5543 = x5539+x5529
x5512 = x5543
x5513 = false
val x5535 = x5525 + 1
x5514 = x5535
x5518 = x5535
()
} else {
x5517 = false
()
}
x5552
}
x5554
}
val x5557 = x5512
val x5558 = x5513
val x5559 = x5514
val x5744 = if (x5558) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
val x5561 = x5559 >= x3322
val x5742 = if (x5561) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
} else {
val x5563 = x3305(x5559)
val x5564 = x5563 == '#'
val x5740 = if (x5564) {
var x5582: java.lang.String = ""
var x5583: Boolean = false
val x5565 = x5559 + 1
var x5584: Int = x5565
var x5586: Int = -1
var x5587: Boolean = true
var x5588: Int = x5565
val x5622 = while ({val x5589 = x5587
val x5590 = x5586
val x5591 = x5588
val x5592 = x5590 != x5591
val x5593 = x5589 && x5592
x5593}) {
val x5595 = x5588
x5586 = x5595
val x5597 = x5595 >= x3322
val x5620 = if (x5597) {
x5587 = false
()
} else {
val x5599 = x3305(x5595)
val x5600 = x5599 == '#'
val x5618 = if (x5600) {
val x5605 = x5582
val x5606 = x5583
val x5607 = x5584
val x5609 = x5605+x5599
x5582 = x5609
x5583 = false
val x5601 = x5595 + 1
x5584 = x5601
x5588 = x5601
()
} else {
x5587 = false
()
}
x5618
}
x5620
}
val x5623 = x5582
val x5624 = x5583
val x5625 = x5584
val x5734 = if (x5624) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5565
()
} else {
var x5637: java.lang.String = ""
var x5638: Boolean = false
var x5639: Int = x5625
var x5641: Int = -1
var x5642: Boolean = true
var x5643: Int = x5625
val x5679 = while ({val x5644 = x5642
val x5645 = x5641
val x5646 = x5643
val x5647 = x5645 != x5646
val x5648 = x5644 && x5647
x5648}) {
val x5650 = x5643
x5641 = x5650
val x5652 = x5650 >= x3322
val x5677 = if (x5652) {
x5642 = false
()
} else {
val x5654 = x3305(x5650)
val x5655 = x5654 > ' '
val x5656 = x5654 != ''
val x5657 = x5655 && x5656
val x5675 = if (x5657) {
val x5662 = x5637
val x5663 = x5638
val x5664 = x5639
val x5666 = x5662+x5654
x5637 = x5666
x5638 = false
val x5658 = x5650 + 1
x5639 = x5658
x5643 = x5658
()
} else {
x5642 = false
()
}
x5675
}
x5677
}
val x5680 = x5637
val x5681 = x5638
val x5682 = x5639
val x5688 = if (x5681) {
true
} else {
false
}
val x5697 = if (x5688) {
false
} else {
false
}
val x5703 = if (x5697) {
true
} else {
false
}
val x5726 = if (x5703) {
x161
} else {
val x5702 = if (x5697) {
x935
} else {
val x5694 = if (x5688) {
x161
} else {
val x5687 = if (x5681) {
x161
} else {
val x5685 = new Anon1863173035("","","","",x5680,80)
x5685
}
x5687
}
val x5695 = if (x5688) {
false
} else {
true
}
val x5696 = new OptionAnon1863173035(x5694,x5695)
val x5700 = new Tuple2StringOptionAnon1863173035(x5557,x5696)
x5700
}
val x5708 = x5702._2
val x5709 = x5708.defined
val x5718 = if (x5709) {
val x5710 = x5708.value
val x5711 = x5710.schema
x5711
} else {
""
}
val x5719 = if (x5709) {
val x5710 = x5708.value
val x5712 = x5710.hostName
x5712
} else {
""
}
val x5720 = if (x5709) {
val x5710 = x5708.value
val x5713 = x5710.path
x5713
} else {
""
}
val x5707 = x5702._1
val x5721 = if (x5709) {
x5707
} else {
x5707
}
val x5722 = if (x5709) {
val x5710 = x5708.value
val x5714 = x5710.fragment
x5714
} else {
""
}
val x5723 = if (x5709) {
val x5710 = x5708.value
val x5715 = x5710.port
x5715
} else {
80
}
val x5724 = new Anon1863173035(x5718,x5719,x5720,x5721,x5722,x5723)
x5724
}
x3552 = x5726
val x5727 = if (x5703) {
true
} else {
false
}
x3553 = x5727
val x5704 = if (x5697) {
x5446
} else {
val x5689 = if (x5681) {
x5682
} else {
x5682
}
val x5698 = if (x5688) {
x5689
} else {
x5689
}
x5698
}
val x5728 = if (x5703) {
x5704
} else {
x5704
}
x3554 = x5728
()
}
x5734
} else {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
}
x5740
}
x5742
}
x5744
}
x5746
} else {
x3552 = x161
x3553 = true
x3554 = x3550
()
}
x5752
}
x5754
} else {
val x5756 = x5440.res
x3552 = x5756
x3553 = x5441
val x5759 = x5440.next
x3554 = x5759
()
}
val x5763 = x3552
val x5764 = x3553
val x5765 = x3554
val x5766 = new ParseResultAnon1863173035(x5763,x5764,x5765)
x5766
}
val x5808 = x5768(x5771)
val x5809 = x5808.empty
val x5815 = if (x5809) {
true
} else {
false
}
val x5841 = if (x5815) {
x161
} else {
val x5814 = if (x5809) {
val x5792 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x5792
} else {
val x1006 = new OptionAnon1863173035(x161,false)
val x5805 = x5769.res
val x5806 = new Tuple2StringOptionAnon1863173035(x5805,x1006)
val x5810 = x5808.res
val x5811 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5806,x5810)
x5811
}
val x5819 = x5814._1
val x5821 = x5819._1
val x5822 = x5819._2
val x5823 = x5822.defined
val x5833 = if (x5823) {
x5821
} else {
x5821
}
val x5820 = x5814._2
val x5834 = if (x5823) {
val x5824 = x5822.value
val x5825 = x5824.hostName
x5825
} else {
val x5831 = x5820.hostName
x5831
}
val x5826 = x5820.path
val x5835 = if (x5823) {
x5826
} else {
x5826
}
val x5827 = x5820.queryString
val x5836 = if (x5823) {
x5827
} else {
x5827
}
val x5828 = x5820.fragment
val x5837 = if (x5823) {
x5828
} else {
x5828
}
val x5829 = x5820.port
val x5838 = if (x5823) {
x5829
} else {
x5829
}
val x5839 = new Anon1863173035(x5833,x5834,x5835,x5836,x5837,x5838)
x5839
}
x3306 = x5841
val x5842 = if (x5815) {
true
} else {
false
}
x3307 = x5842
val x5816 = if (x5809) {
0
} else {
val x5812 = x5808.next
x5812
}
val x5843 = if (x5815) {
x5816
} else {
x5816
}
x3308 = x5843
()
} else {
val x5774 = x3305(x5771)
val x5775 = x5774 >= '0'
val x5776 = x5774 <= '9'
val x5777 = x5775 && x5776
val x5778 = x5774 >= 'a'
val x5779 = x5774 <= 'z'
val x5780 = x5778 && x5779
val x5781 = x5774 >= 'A'
val x5782 = x5774 <= 'Z'
val x5783 = x5781 && x5782
val x5784 = x5780 || x5783
val x5785 = x5777 || x5784
val x5786 = x5774 == '-'
val x5787 = x5785 || x5786
val x5788 = x5774 == '.'
val x5789 = x5787 || x5788
val x6145 = if (x5789) {
var x5850: java.lang.String = ""
var x5851: Boolean = false
val x5790 = x5771 + 1
var x5852: Int = x5790
var x5854: Int = -1
var x5855: Boolean = true
var x5856: Int = x5790
val x5904 = while ({val x5857 = x5855
val x5858 = x5854
val x5859 = x5856
val x5860 = x5858 != x5859
val x5861 = x5857 && x5860
x5861}) {
val x5863 = x5856
x5854 = x5863
val x5865 = x5863 >= x3322
val x5902 = if (x5865) {
x5855 = false
()
} else {
val x5867 = x3305(x5863)
val x5868 = x5867 >= '0'
val x5869 = x5867 <= '9'
val x5870 = x5868 && x5869
val x5871 = x5867 >= 'a'
val x5872 = x5867 <= 'z'
val x5873 = x5871 && x5872
val x5874 = x5867 >= 'A'
val x5875 = x5867 <= 'Z'
val x5876 = x5874 && x5875
val x5877 = x5873 || x5876
val x5878 = x5870 || x5877
val x5879 = x5867 == '-'
val x5880 = x5878 || x5879
val x5881 = x5867 == '.'
val x5882 = x5880 || x5881
val x5900 = if (x5882) {
val x5887 = x5850
val x5888 = x5851
val x5889 = x5852
val x5891 = x5887+x5867
x5850 = x5891
x5851 = false
val x5883 = x5863 + 1
x5852 = x5883
x5856 = x5883
()
} else {
x5855 = false
()
}
x5900
}
x5902
}
val x5905 = x5850
val x5906 = x5851
val x5907 = x5852
val x5912 = if (x5906) {
true
} else {
false
}
val x5921 = if (x5912) {
true
} else {
false
}
val x6139 = if (x5921) {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4379 = {x4055: (Int) => 
var x4057: Anon1863173035 = x161
var x4058: Boolean = true
var x4059: Int = x4055
val x4061 = x4055 >= x3322
val x4373 = if (x4061) {
x4057 = x161
x4058 = true
x4059 = x4055
()
} else {
val x4063 = x3305(x4055)
val x4064 = x4063 == '?'
val x4371 = if (x4064) {
var x4072: java.lang.String = ""
var x4073: Boolean = false
val x4065 = x4055 + 1
var x4074: Int = x4065
var x4076: Int = -1
var x4077: Boolean = true
var x4078: Int = x4065
val x4112 = while ({val x4079 = x4077
val x4080 = x4076
val x4081 = x4078
val x4082 = x4080 != x4081
val x4083 = x4079 && x4082
x4083}) {
val x4085 = x4078
x4076 = x4085
val x4087 = x4085 >= x3322
val x4110 = if (x4087) {
x4077 = false
()
} else {
val x4089 = x3305(x4085)
val x4090 = x4089 == '?'
val x4108 = if (x4090) {
val x4095 = x4072
val x4096 = x4073
val x4097 = x4074
val x4099 = x4095+x4089
x4072 = x4099
x4073 = false
val x4091 = x4085 + 1
x4074 = x4091
x4078 = x4091
()
} else {
x4077 = false
()
}
x4108
}
x4110
}
val x4113 = x4072
val x4114 = x4073
val x4115 = x4074
val x4365 = if (x4114) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
var x4131: java.lang.String = ""
var x4132: Boolean = false
var x4133: Int = x4115
var x4135: Int = -1
var x4136: Boolean = true
var x4137: Int = x4115
val x4175 = while ({val x4138 = x4136
val x4139 = x4135
val x4140 = x4137
val x4141 = x4139 != x4140
val x4142 = x4138 && x4141
x4142}) {
val x4144 = x4137
x4135 = x4144
val x4146 = x4144 >= x3322
val x4173 = if (x4146) {
x4136 = false
()
} else {
val x4148 = x3305(x4144)
val x4149 = x4148 > ' '
val x4150 = x4148 != '#'
val x4151 = x4149 && x4150
val x4152 = x4148 != ''
val x4153 = x4151 && x4152
val x4171 = if (x4153) {
val x4158 = x4131
val x4159 = x4132
val x4160 = x4133
val x4162 = x4158+x4148
x4131 = x4162
x4132 = false
val x4154 = x4144 + 1
x4133 = x4154
x4137 = x4154
()
} else {
x4136 = false
()
}
x4171
}
x4173
}
val x4176 = x4131
val x4177 = x4132
val x4178 = x4133
val x4363 = if (x4177) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
val x4180 = x4178 >= x3322
val x4361 = if (x4180) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
} else {
val x4182 = x3305(x4178)
val x4183 = x4182 == '#'
val x4359 = if (x4183) {
var x4201: java.lang.String = ""
var x4202: Boolean = false
val x4184 = x4178 + 1
var x4203: Int = x4184
var x4205: Int = -1
var x4206: Boolean = true
var x4207: Int = x4184
val x4241 = while ({val x4208 = x4206
val x4209 = x4205
val x4210 = x4207
val x4211 = x4209 != x4210
val x4212 = x4208 && x4211
x4212}) {
val x4214 = x4207
x4205 = x4214
val x4216 = x4214 >= x3322
val x4239 = if (x4216) {
x4206 = false
()
} else {
val x4218 = x3305(x4214)
val x4219 = x4218 == '#'
val x4237 = if (x4219) {
val x4224 = x4201
val x4225 = x4202
val x4226 = x4203
val x4228 = x4224+x4218
x4201 = x4228
x4202 = false
val x4220 = x4214 + 1
x4203 = x4220
x4207 = x4220
()
} else {
x4206 = false
()
}
x4237
}
x4239
}
val x4242 = x4201
val x4243 = x4202
val x4244 = x4203
val x4353 = if (x4243) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4184
()
} else {
var x4256: java.lang.String = ""
var x4257: Boolean = false
var x4258: Int = x4244
var x4260: Int = -1
var x4261: Boolean = true
var x4262: Int = x4244
val x4298 = while ({val x4263 = x4261
val x4264 = x4260
val x4265 = x4262
val x4266 = x4264 != x4265
val x4267 = x4263 && x4266
x4267}) {
val x4269 = x4262
x4260 = x4269
val x4271 = x4269 >= x3322
val x4296 = if (x4271) {
x4261 = false
()
} else {
val x4273 = x3305(x4269)
val x4274 = x4273 > ' '
val x4275 = x4273 != ''
val x4276 = x4274 && x4275
val x4294 = if (x4276) {
val x4281 = x4256
val x4282 = x4257
val x4283 = x4258
val x4285 = x4281+x4273
x4256 = x4285
x4257 = false
val x4277 = x4269 + 1
x4258 = x4277
x4262 = x4277
()
} else {
x4261 = false
()
}
x4294
}
x4296
}
val x4299 = x4256
val x4300 = x4257
val x4301 = x4258
val x4307 = if (x4300) {
true
} else {
false
}
val x4316 = if (x4307) {
false
} else {
false
}
val x4322 = if (x4316) {
true
} else {
false
}
val x4345 = if (x4322) {
x161
} else {
val x4321 = if (x4316) {
x935
} else {
val x4313 = if (x4307) {
x161
} else {
val x4306 = if (x4300) {
x161
} else {
val x4304 = new Anon1863173035("","","","",x4299,80)
x4304
}
x4306
}
val x4314 = if (x4307) {
false
} else {
true
}
val x4315 = new OptionAnon1863173035(x4313,x4314)
val x4319 = new Tuple2StringOptionAnon1863173035(x4176,x4315)
x4319
}
val x4327 = x4321._2
val x4328 = x4327.defined
val x4337 = if (x4328) {
val x4329 = x4327.value
val x4330 = x4329.schema
x4330
} else {
""
}
val x4338 = if (x4328) {
val x4329 = x4327.value
val x4331 = x4329.hostName
x4331
} else {
""
}
val x4339 = if (x4328) {
val x4329 = x4327.value
val x4332 = x4329.path
x4332
} else {
""
}
val x4326 = x4321._1
val x4340 = if (x4328) {
x4326
} else {
x4326
}
val x4341 = if (x4328) {
val x4329 = x4327.value
val x4333 = x4329.fragment
x4333
} else {
""
}
val x4342 = if (x4328) {
val x4329 = x4327.value
val x4334 = x4329.port
x4334
} else {
80
}
val x4343 = new Anon1863173035(x4337,x4338,x4339,x4340,x4341,x4342)
x4343
}
x4057 = x4345
val x4346 = if (x4322) {
true
} else {
false
}
x4058 = x4346
val x4323 = if (x4316) {
x4065
} else {
val x4308 = if (x4300) {
x4301
} else {
x4301
}
val x4317 = if (x4307) {
x4308
} else {
x4308
}
x4317
}
val x4347 = if (x4322) {
x4323
} else {
x4323
}
x4059 = x4347
()
}
x4353
} else {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
}
x4359
}
x4361
}
x4363
}
x4365
} else {
x4057 = x161
x4058 = true
x4059 = x4055
()
}
x4371
}
val x4374 = x4057
val x4375 = x4058
val x4376 = x4059
val x4377 = new ParseResultAnon1863173035(x4374,x4375,x4376)
x4377
}
val x4525 = {x4049: (Int) => 
var x4051: Anon1863173035 = x161
var x4052: Boolean = true
var x4053: Int = x4049
val x4380 = x4379(x4049)
val x4381 = x4380.empty
val x4519 = if (x4381) {
val x4382 = x4049 >= x3322
val x4511 = if (x4382) {
x4051 = x161
x4052 = true
x4053 = x4049
()
} else {
val x4384 = x3305(x4049)
val x4385 = x4384 == '#'
val x4509 = if (x4385) {
var x4393: java.lang.String = ""
var x4394: Boolean = false
val x4386 = x4049 + 1
var x4395: Int = x4386
var x4397: Int = -1
var x4398: Boolean = true
var x4399: Int = x4386
val x4433 = while ({val x4400 = x4398
val x4401 = x4397
val x4402 = x4399
val x4403 = x4401 != x4402
val x4404 = x4400 && x4403
x4404}) {
val x4406 = x4399
x4397 = x4406
val x4408 = x4406 >= x3322
val x4431 = if (x4408) {
x4398 = false
()
} else {
val x4410 = x3305(x4406)
val x4411 = x4410 == '#'
val x4429 = if (x4411) {
val x4416 = x4393
val x4417 = x4394
val x4418 = x4395
val x4420 = x4416+x4410
x4393 = x4420
x4394 = false
val x4412 = x4406 + 1
x4395 = x4412
x4399 = x4412
()
} else {
x4398 = false
()
}
x4429
}
x4431
}
val x4434 = x4393
val x4435 = x4394
val x4436 = x4395
val x4503 = if (x4435) {
x4051 = x161
x4052 = true
x4053 = x4386
()
} else {
var x4445: java.lang.String = ""
var x4446: Boolean = false
var x4447: Int = x4436
var x4449: Int = -1
var x4450: Boolean = true
var x4451: Int = x4436
val x4487 = while ({val x4452 = x4450
val x4453 = x4449
val x4454 = x4451
val x4455 = x4453 != x4454
val x4456 = x4452 && x4455
x4456}) {
val x4458 = x4451
x4449 = x4458
val x4460 = x4458 >= x3322
val x4485 = if (x4460) {
x4450 = false
()
} else {
val x4462 = x3305(x4458)
val x4463 = x4462 > ' '
val x4464 = x4462 != ''
val x4465 = x4463 && x4464
val x4483 = if (x4465) {
val x4470 = x4445
val x4471 = x4446
val x4472 = x4447
val x4474 = x4470+x4462
x4445 = x4474
x4446 = false
val x4466 = x4458 + 1
x4447 = x4466
x4451 = x4466
()
} else {
x4450 = false
()
}
x4483
}
x4485
}
val x4488 = x4445
val x4489 = x4446
val x4490 = x4447
val x4495 = if (x4489) {
x161
} else {
val x4493 = new Anon1863173035("","","","",x4488,80)
x4493
}
x4051 = x4495
val x4496 = if (x4489) {
true
} else {
false
}
x4052 = x4496
val x4497 = if (x4489) {
x4490
} else {
x4490
}
x4053 = x4497
()
}
x4503
} else {
x4051 = x161
x4052 = true
x4053 = x4049
()
}
x4509
}
x4511
} else {
val x4513 = x4380.res
x4051 = x4513
x4052 = x4381
val x4516 = x4380.next
x4053 = x4516
()
}
val x4520 = x4051
val x4521 = x4052
val x4522 = x4053
val x4523 = new ParseResultAnon1863173035(x4520,x4521,x4522)
x4523
}
val x5439 = {x3556: (Int) => 
var x3558: Anon1863173035 = x161
var x3559: Boolean = true
var x3560: Int = x3556
val x3562 = x3556 >= x3322
val x5433 = if (x3562) {
x3558 = x161
x3559 = true
x3560 = x3556
()
} else {
val x3564 = x3305(x3556)
val x3565 = x3564 == '/'
val x5431 = if (x3565) {
var x4527: java.lang.String = ""
var x4528: Boolean = false
val x3566 = x3556 + 1
var x4529: Int = x3566
var x4531: Int = -1
var x4532: Boolean = true
var x4533: Int = x3566
val x4573 = while ({val x4534 = x4532
val x4535 = x4531
val x4536 = x4533
val x4537 = x4535 != x4536
val x4538 = x4534 && x4537
x4538}) {
val x4540 = x4533
x4531 = x4540
val x4542 = x4540 >= x3322
val x4571 = if (x4542) {
x4532 = false
()
} else {
val x4544 = x3305(x4540)
val x4545 = x4544 > ' '
val x4546 = x4544 != '#'
val x4547 = x4545 && x4546
val x4548 = x4544 != '?'
val x4549 = x4547 && x4548
val x4550 = x4544 != ''
val x4551 = x4549 && x4550
val x4569 = if (x4551) {
val x4556 = x4527
val x4557 = x4528
val x4558 = x4529
val x4560 = x4556+x4544
x4527 = x4560
x4528 = false
val x4552 = x4540 + 1
x4529 = x4552
x4533 = x4552
()
} else {
x4532 = false
()
}
x4569
}
x4571
}
val x4574 = x4527
val x4575 = x4528
val x4576 = x4529
val x4948 = if (x4575) {
x3558 = x161
x3559 = true
x3560 = x3566
()
} else {
val x4579 = x4525(x4576)
val x4591 = x4579.empty
val x4600 = if (x4591) {
false
} else {
false
}
val x4606 = if (x4600) {
true
} else {
false
}
val x4946 = if (x4606) {
x3558 = x161
x3559 = true
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
x3560 = x4607
()
} else {
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
val x4609 = x4607 >= x3322
val x4944 = if (x4609) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4611 = x3305(x4607)
val x4612 = x4611 == 'H'
val x4942 = if (x4612) {
val x4613 = x4607 + 1
val x4650 = x4613 >= x3322
val x4936 = if (x4650) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4652 = x3305(x4613)
val x4653 = x4652 == 'T'
val x4934 = if (x4653) {
val x4654 = x4613 + 1
val x4662 = x4654 >= x3322
val x4928 = if (x4662) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4664 = x3305(x4654)
val x4665 = x4664 == 'T'
val x4926 = if (x4665) {
val x4666 = x4654 + 1
val x4675 = x4666 >= x3322
val x4920 = if (x4675) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4677 = x3305(x4666)
val x4678 = x4677 == 'P'
val x4918 = if (x4678) {
val x4679 = x4666 + 1
val x4688 = x4679 >= x3322
val x4912 = if (x4688) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4690 = x3305(x4679)
val x4691 = x4690 == '/'
val x4910 = if (x4691) {
var x4723: Int = 0
var x4724: Boolean = false
val x4692 = x4679 + 1
var x4725: Int = x4692
var x4727: Int = -1
var x4728: Boolean = true
var x4729: Int = x4692
val x4770 = while ({val x4730 = x4728
val x4731 = x4727
val x4732 = x4729
val x4733 = x4731 != x4732
val x4734 = x4730 && x4733
x4734}) {
val x4736 = x4729
x4727 = x4736
val x4738 = x4736 >= x3322
val x4768 = if (x4738) {
x4728 = false
()
} else {
val x4740 = x3305(x4736)
val x4741 = x4740 >= '0'
val x4742 = x4740 <= '9'
val x4743 = x4741 && x4742
val x4766 = if (x4743) {
val x4752 = x4723
val x4753 = x4724
val x4754 = x4725
val x4749 = x4740 - '0'
val x4750 = x4749.toInt
val x4756 = x4752 * 10
val x4757 = x4756 + x4750
x4723 = x4757
x4724 = false
val x4744 = x4736 + 1
x4725 = x4744
x4729 = x4744
()
} else {
x4728 = false
()
}
x4766
}
x4768
}
val x4771 = x4723
val x4772 = x4724
val x4773 = x4725
val x4904 = if (x4772) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4776 = x4773 >= x3322
val x4902 = if (x4776) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4778 = x3305(x4773)
val x4779 = x4778 == '.'
val x4900 = if (x4779) {
var x4795: Int = 0
var x4796: Boolean = false
val x4780 = x4773 + 1
var x4797: Int = x4780
var x4799: Int = -1
var x4800: Boolean = true
var x4801: Int = x4780
val x4842 = while ({val x4802 = x4800
val x4803 = x4799
val x4804 = x4801
val x4805 = x4803 != x4804
val x4806 = x4802 && x4805
x4806}) {
val x4808 = x4801
x4799 = x4808
val x4810 = x4808 >= x3322
val x4840 = if (x4810) {
x4800 = false
()
} else {
val x4812 = x3305(x4808)
val x4813 = x4812 >= '0'
val x4814 = x4812 <= '9'
val x4815 = x4813 && x4814
val x4838 = if (x4815) {
val x4824 = x4795
val x4825 = x4796
val x4826 = x4797
val x4821 = x4812 - '0'
val x4822 = x4821.toInt
val x4828 = x4824 * 10
val x4829 = x4828 + x4822
x4795 = x4829
x4796 = false
val x4816 = x4808 + 1
x4797 = x4816
x4801 = x4816
()
} else {
x4800 = false
()
}
x4838
}
x4840
}
val x4843 = x4795
val x4844 = x4796
val x4845 = x4797
val x4850 = if (x4844) {
true
} else {
false
}
val x4859 = if (x4850) {
false
} else {
false
}
val x4864 = if (x4859) {
true
} else {
false
}
val x4888 = if (x4864) {
x161
} else {
val x4863 = if (x4859) {
x935
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
x4605
}
val x4869 = x4863._2
val x4870 = x4869.defined
val x4880 = if (x4870) {
val x4871 = x4869.value
val x4873 = x4871.schema
x4873
} else {
""
}
val x4881 = if (x4870) {
val x4871 = x4869.value
val x4874 = x4871.hostName
x4874
} else {
""
}
val x4868 = x4863._1
val x4872 = "/"+x4868
val x4882 = if (x4870) {
x4872
} else {
x4872
}
val x4883 = if (x4870) {
val x4871 = x4869.value
val x4875 = x4871.queryString
x4875
} else {
""
}
val x4884 = if (x4870) {
val x4871 = x4869.value
val x4876 = x4871.fragment
x4876
} else {
""
}
val x4885 = if (x4870) {
val x4871 = x4869.value
val x4877 = x4871.port
x4877
} else {
80
}
val x4886 = new Anon1863173035(x4880,x4881,x4882,x4883,x4884,x4885)
x4886
}
x3558 = x4888
val x4889 = if (x4864) {
true
} else {
false
}
x3559 = x4889
val x4865 = if (x4859) {
x3566
} else {
val x4851 = if (x4844) {
x4692
} else {
x4845
}
val x4860 = if (x4850) {
x4851
} else {
x4851
}
x4860
}
val x4890 = if (x4864) {
x4865
} else {
x4865
}
x3560 = x4890
()
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
}
x4900
}
x4902
}
x4904
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4910
}
x4912
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4918
}
x4920
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4926
}
x4928
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4934
}
x4936
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4942
}
x4944
}
x4946
}
x4948
} else {
x3558 = x161
x3559 = true
x3560 = x3556
()
}
x5431
}
val x5434 = x3558
val x5435 = x3559
val x5436 = x3560
val x5437 = new ParseResultAnon1863173035(x5434,x5435,x5436)
x5437
}
val x5768 = {x3550: (Int) => 
var x3552: Anon1863173035 = x161
var x3553: Boolean = true
var x3554: Int = x3550
val x5440 = x5439(x3550)
val x5441 = x5440.empty
val x5762 = if (x5441) {
val x5442 = x3550 >= x3322
val x5754 = if (x5442) {
x3552 = x161
x3553 = true
x3554 = x3550
()
} else {
val x5444 = x3305(x3550)
val x5445 = x5444 == '?'
val x5752 = if (x5445) {
var x5453: java.lang.String = ""
var x5454: Boolean = false
val x5446 = x3550 + 1
var x5455: Int = x5446
var x5457: Int = -1
var x5458: Boolean = true
var x5459: Int = x5446
val x5493 = while ({val x5460 = x5458
val x5461 = x5457
val x5462 = x5459
val x5463 = x5461 != x5462
val x5464 = x5460 && x5463
x5464}) {
val x5466 = x5459
x5457 = x5466
val x5468 = x5466 >= x3322
val x5491 = if (x5468) {
x5458 = false
()
} else {
val x5470 = x3305(x5466)
val x5471 = x5470 == '?'
val x5489 = if (x5471) {
val x5476 = x5453
val x5477 = x5454
val x5478 = x5455
val x5480 = x5476+x5470
x5453 = x5480
x5454 = false
val x5472 = x5466 + 1
x5455 = x5472
x5459 = x5472
()
} else {
x5458 = false
()
}
x5489
}
x5491
}
val x5494 = x5453
val x5495 = x5454
val x5496 = x5455
val x5746 = if (x5495) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
var x5512: java.lang.String = ""
var x5513: Boolean = false
var x5514: Int = x5496
var x5516: Int = -1
var x5517: Boolean = true
var x5518: Int = x5496
val x5556 = while ({val x5519 = x5517
val x5520 = x5516
val x5521 = x5518
val x5522 = x5520 != x5521
val x5523 = x5519 && x5522
x5523}) {
val x5525 = x5518
x5516 = x5525
val x5527 = x5525 >= x3322
val x5554 = if (x5527) {
x5517 = false
()
} else {
val x5529 = x3305(x5525)
val x5530 = x5529 > ' '
val x5531 = x5529 != '#'
val x5532 = x5530 && x5531
val x5533 = x5529 != ''
val x5534 = x5532 && x5533
val x5552 = if (x5534) {
val x5539 = x5512
val x5540 = x5513
val x5541 = x5514
val x5543 = x5539+x5529
x5512 = x5543
x5513 = false
val x5535 = x5525 + 1
x5514 = x5535
x5518 = x5535
()
} else {
x5517 = false
()
}
x5552
}
x5554
}
val x5557 = x5512
val x5558 = x5513
val x5559 = x5514
val x5744 = if (x5558) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
val x5561 = x5559 >= x3322
val x5742 = if (x5561) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
} else {
val x5563 = x3305(x5559)
val x5564 = x5563 == '#'
val x5740 = if (x5564) {
var x5582: java.lang.String = ""
var x5583: Boolean = false
val x5565 = x5559 + 1
var x5584: Int = x5565
var x5586: Int = -1
var x5587: Boolean = true
var x5588: Int = x5565
val x5622 = while ({val x5589 = x5587
val x5590 = x5586
val x5591 = x5588
val x5592 = x5590 != x5591
val x5593 = x5589 && x5592
x5593}) {
val x5595 = x5588
x5586 = x5595
val x5597 = x5595 >= x3322
val x5620 = if (x5597) {
x5587 = false
()
} else {
val x5599 = x3305(x5595)
val x5600 = x5599 == '#'
val x5618 = if (x5600) {
val x5605 = x5582
val x5606 = x5583
val x5607 = x5584
val x5609 = x5605+x5599
x5582 = x5609
x5583 = false
val x5601 = x5595 + 1
x5584 = x5601
x5588 = x5601
()
} else {
x5587 = false
()
}
x5618
}
x5620
}
val x5623 = x5582
val x5624 = x5583
val x5625 = x5584
val x5734 = if (x5624) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5565
()
} else {
var x5637: java.lang.String = ""
var x5638: Boolean = false
var x5639: Int = x5625
var x5641: Int = -1
var x5642: Boolean = true
var x5643: Int = x5625
val x5679 = while ({val x5644 = x5642
val x5645 = x5641
val x5646 = x5643
val x5647 = x5645 != x5646
val x5648 = x5644 && x5647
x5648}) {
val x5650 = x5643
x5641 = x5650
val x5652 = x5650 >= x3322
val x5677 = if (x5652) {
x5642 = false
()
} else {
val x5654 = x3305(x5650)
val x5655 = x5654 > ' '
val x5656 = x5654 != ''
val x5657 = x5655 && x5656
val x5675 = if (x5657) {
val x5662 = x5637
val x5663 = x5638
val x5664 = x5639
val x5666 = x5662+x5654
x5637 = x5666
x5638 = false
val x5658 = x5650 + 1
x5639 = x5658
x5643 = x5658
()
} else {
x5642 = false
()
}
x5675
}
x5677
}
val x5680 = x5637
val x5681 = x5638
val x5682 = x5639
val x5688 = if (x5681) {
true
} else {
false
}
val x5697 = if (x5688) {
false
} else {
false
}
val x5703 = if (x5697) {
true
} else {
false
}
val x5726 = if (x5703) {
x161
} else {
val x5702 = if (x5697) {
x935
} else {
val x5694 = if (x5688) {
x161
} else {
val x5687 = if (x5681) {
x161
} else {
val x5685 = new Anon1863173035("","","","",x5680,80)
x5685
}
x5687
}
val x5695 = if (x5688) {
false
} else {
true
}
val x5696 = new OptionAnon1863173035(x5694,x5695)
val x5700 = new Tuple2StringOptionAnon1863173035(x5557,x5696)
x5700
}
val x5708 = x5702._2
val x5709 = x5708.defined
val x5718 = if (x5709) {
val x5710 = x5708.value
val x5711 = x5710.schema
x5711
} else {
""
}
val x5719 = if (x5709) {
val x5710 = x5708.value
val x5712 = x5710.hostName
x5712
} else {
""
}
val x5720 = if (x5709) {
val x5710 = x5708.value
val x5713 = x5710.path
x5713
} else {
""
}
val x5707 = x5702._1
val x5721 = if (x5709) {
x5707
} else {
x5707
}
val x5722 = if (x5709) {
val x5710 = x5708.value
val x5714 = x5710.fragment
x5714
} else {
""
}
val x5723 = if (x5709) {
val x5710 = x5708.value
val x5715 = x5710.port
x5715
} else {
80
}
val x5724 = new Anon1863173035(x5718,x5719,x5720,x5721,x5722,x5723)
x5724
}
x3552 = x5726
val x5727 = if (x5703) {
true
} else {
false
}
x3553 = x5727
val x5704 = if (x5697) {
x5446
} else {
val x5689 = if (x5681) {
x5682
} else {
x5682
}
val x5698 = if (x5688) {
x5689
} else {
x5689
}
x5698
}
val x5728 = if (x5703) {
x5704
} else {
x5704
}
x3554 = x5728
()
}
x5734
} else {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
}
x5740
}
x5742
}
x5744
}
x5746
} else {
x3552 = x161
x3553 = true
x3554 = x3550
()
}
x5752
}
x5754
} else {
val x5756 = x5440.res
x3552 = x5756
x3553 = x5441
val x5759 = x5440.next
x3554 = x5759
()
}
val x5763 = x3552
val x5764 = x3553
val x5765 = x3554
val x5766 = new ParseResultAnon1863173035(x5763,x5764,x5765)
x5766
}
val x5808 = x5768(x5771)
val x5809 = x5808.empty
val x5815 = if (x5809) {
true
} else {
false
}
val x5841 = if (x5815) {
x161
} else {
val x5814 = if (x5809) {
val x5792 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x5792
} else {
val x1006 = new OptionAnon1863173035(x161,false)
val x5805 = x5769.res
val x5806 = new Tuple2StringOptionAnon1863173035(x5805,x1006)
val x5810 = x5808.res
val x5811 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5806,x5810)
x5811
}
val x5819 = x5814._1
val x5821 = x5819._1
val x5822 = x5819._2
val x5823 = x5822.defined
val x5833 = if (x5823) {
x5821
} else {
x5821
}
val x5820 = x5814._2
val x5834 = if (x5823) {
val x5824 = x5822.value
val x5825 = x5824.hostName
x5825
} else {
val x5831 = x5820.hostName
x5831
}
val x5826 = x5820.path
val x5835 = if (x5823) {
x5826
} else {
x5826
}
val x5827 = x5820.queryString
val x5836 = if (x5823) {
x5827
} else {
x5827
}
val x5828 = x5820.fragment
val x5837 = if (x5823) {
x5828
} else {
x5828
}
val x5829 = x5820.port
val x5838 = if (x5823) {
x5829
} else {
x5829
}
val x5839 = new Anon1863173035(x5833,x5834,x5835,x5836,x5837,x5838)
x5839
}
x3306 = x5841
val x5842 = if (x5815) {
true
} else {
false
}
x3307 = x5842
val x5816 = if (x5809) {
0
} else {
val x5812 = x5808.next
x5812
}
val x5843 = if (x5815) {
x5816
} else {
x5816
}
x3308 = x5843
()
} else {
val x5913 = if (x5906) {
x5771
} else {
x5907
}
val x5922 = if (x5912) {
x5913
} else {
x5913
}
val x5924 = x5922 >= x3322
val x6137 = if (x5924) {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4379 = {x4055: (Int) => 
var x4057: Anon1863173035 = x161
var x4058: Boolean = true
var x4059: Int = x4055
val x4061 = x4055 >= x3322
val x4373 = if (x4061) {
x4057 = x161
x4058 = true
x4059 = x4055
()
} else {
val x4063 = x3305(x4055)
val x4064 = x4063 == '?'
val x4371 = if (x4064) {
var x4072: java.lang.String = ""
var x4073: Boolean = false
val x4065 = x4055 + 1
var x4074: Int = x4065
var x4076: Int = -1
var x4077: Boolean = true
var x4078: Int = x4065
val x4112 = while ({val x4079 = x4077
val x4080 = x4076
val x4081 = x4078
val x4082 = x4080 != x4081
val x4083 = x4079 && x4082
x4083}) {
val x4085 = x4078
x4076 = x4085
val x4087 = x4085 >= x3322
val x4110 = if (x4087) {
x4077 = false
()
} else {
val x4089 = x3305(x4085)
val x4090 = x4089 == '?'
val x4108 = if (x4090) {
val x4095 = x4072
val x4096 = x4073
val x4097 = x4074
val x4099 = x4095+x4089
x4072 = x4099
x4073 = false
val x4091 = x4085 + 1
x4074 = x4091
x4078 = x4091
()
} else {
x4077 = false
()
}
x4108
}
x4110
}
val x4113 = x4072
val x4114 = x4073
val x4115 = x4074
val x4365 = if (x4114) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
var x4131: java.lang.String = ""
var x4132: Boolean = false
var x4133: Int = x4115
var x4135: Int = -1
var x4136: Boolean = true
var x4137: Int = x4115
val x4175 = while ({val x4138 = x4136
val x4139 = x4135
val x4140 = x4137
val x4141 = x4139 != x4140
val x4142 = x4138 && x4141
x4142}) {
val x4144 = x4137
x4135 = x4144
val x4146 = x4144 >= x3322
val x4173 = if (x4146) {
x4136 = false
()
} else {
val x4148 = x3305(x4144)
val x4149 = x4148 > ' '
val x4150 = x4148 != '#'
val x4151 = x4149 && x4150
val x4152 = x4148 != ''
val x4153 = x4151 && x4152
val x4171 = if (x4153) {
val x4158 = x4131
val x4159 = x4132
val x4160 = x4133
val x4162 = x4158+x4148
x4131 = x4162
x4132 = false
val x4154 = x4144 + 1
x4133 = x4154
x4137 = x4154
()
} else {
x4136 = false
()
}
x4171
}
x4173
}
val x4176 = x4131
val x4177 = x4132
val x4178 = x4133
val x4363 = if (x4177) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
val x4180 = x4178 >= x3322
val x4361 = if (x4180) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
} else {
val x4182 = x3305(x4178)
val x4183 = x4182 == '#'
val x4359 = if (x4183) {
var x4201: java.lang.String = ""
var x4202: Boolean = false
val x4184 = x4178 + 1
var x4203: Int = x4184
var x4205: Int = -1
var x4206: Boolean = true
var x4207: Int = x4184
val x4241 = while ({val x4208 = x4206
val x4209 = x4205
val x4210 = x4207
val x4211 = x4209 != x4210
val x4212 = x4208 && x4211
x4212}) {
val x4214 = x4207
x4205 = x4214
val x4216 = x4214 >= x3322
val x4239 = if (x4216) {
x4206 = false
()
} else {
val x4218 = x3305(x4214)
val x4219 = x4218 == '#'
val x4237 = if (x4219) {
val x4224 = x4201
val x4225 = x4202
val x4226 = x4203
val x4228 = x4224+x4218
x4201 = x4228
x4202 = false
val x4220 = x4214 + 1
x4203 = x4220
x4207 = x4220
()
} else {
x4206 = false
()
}
x4237
}
x4239
}
val x4242 = x4201
val x4243 = x4202
val x4244 = x4203
val x4353 = if (x4243) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4184
()
} else {
var x4256: java.lang.String = ""
var x4257: Boolean = false
var x4258: Int = x4244
var x4260: Int = -1
var x4261: Boolean = true
var x4262: Int = x4244
val x4298 = while ({val x4263 = x4261
val x4264 = x4260
val x4265 = x4262
val x4266 = x4264 != x4265
val x4267 = x4263 && x4266
x4267}) {
val x4269 = x4262
x4260 = x4269
val x4271 = x4269 >= x3322
val x4296 = if (x4271) {
x4261 = false
()
} else {
val x4273 = x3305(x4269)
val x4274 = x4273 > ' '
val x4275 = x4273 != ''
val x4276 = x4274 && x4275
val x4294 = if (x4276) {
val x4281 = x4256
val x4282 = x4257
val x4283 = x4258
val x4285 = x4281+x4273
x4256 = x4285
x4257 = false
val x4277 = x4269 + 1
x4258 = x4277
x4262 = x4277
()
} else {
x4261 = false
()
}
x4294
}
x4296
}
val x4299 = x4256
val x4300 = x4257
val x4301 = x4258
val x4307 = if (x4300) {
true
} else {
false
}
val x4316 = if (x4307) {
false
} else {
false
}
val x4322 = if (x4316) {
true
} else {
false
}
val x4345 = if (x4322) {
x161
} else {
val x4321 = if (x4316) {
x935
} else {
val x4313 = if (x4307) {
x161
} else {
val x4306 = if (x4300) {
x161
} else {
val x4304 = new Anon1863173035("","","","",x4299,80)
x4304
}
x4306
}
val x4314 = if (x4307) {
false
} else {
true
}
val x4315 = new OptionAnon1863173035(x4313,x4314)
val x4319 = new Tuple2StringOptionAnon1863173035(x4176,x4315)
x4319
}
val x4327 = x4321._2
val x4328 = x4327.defined
val x4337 = if (x4328) {
val x4329 = x4327.value
val x4330 = x4329.schema
x4330
} else {
""
}
val x4338 = if (x4328) {
val x4329 = x4327.value
val x4331 = x4329.hostName
x4331
} else {
""
}
val x4339 = if (x4328) {
val x4329 = x4327.value
val x4332 = x4329.path
x4332
} else {
""
}
val x4326 = x4321._1
val x4340 = if (x4328) {
x4326
} else {
x4326
}
val x4341 = if (x4328) {
val x4329 = x4327.value
val x4333 = x4329.fragment
x4333
} else {
""
}
val x4342 = if (x4328) {
val x4329 = x4327.value
val x4334 = x4329.port
x4334
} else {
80
}
val x4343 = new Anon1863173035(x4337,x4338,x4339,x4340,x4341,x4342)
x4343
}
x4057 = x4345
val x4346 = if (x4322) {
true
} else {
false
}
x4058 = x4346
val x4323 = if (x4316) {
x4065
} else {
val x4308 = if (x4300) {
x4301
} else {
x4301
}
val x4317 = if (x4307) {
x4308
} else {
x4308
}
x4317
}
val x4347 = if (x4322) {
x4323
} else {
x4323
}
x4059 = x4347
()
}
x4353
} else {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
}
x4359
}
x4361
}
x4363
}
x4365
} else {
x4057 = x161
x4058 = true
x4059 = x4055
()
}
x4371
}
val x4374 = x4057
val x4375 = x4058
val x4376 = x4059
val x4377 = new ParseResultAnon1863173035(x4374,x4375,x4376)
x4377
}
val x4525 = {x4049: (Int) => 
var x4051: Anon1863173035 = x161
var x4052: Boolean = true
var x4053: Int = x4049
val x4380 = x4379(x4049)
val x4381 = x4380.empty
val x4519 = if (x4381) {
val x4382 = x4049 >= x3322
val x4511 = if (x4382) {
x4051 = x161
x4052 = true
x4053 = x4049
()
} else {
val x4384 = x3305(x4049)
val x4385 = x4384 == '#'
val x4509 = if (x4385) {
var x4393: java.lang.String = ""
var x4394: Boolean = false
val x4386 = x4049 + 1
var x4395: Int = x4386
var x4397: Int = -1
var x4398: Boolean = true
var x4399: Int = x4386
val x4433 = while ({val x4400 = x4398
val x4401 = x4397
val x4402 = x4399
val x4403 = x4401 != x4402
val x4404 = x4400 && x4403
x4404}) {
val x4406 = x4399
x4397 = x4406
val x4408 = x4406 >= x3322
val x4431 = if (x4408) {
x4398 = false
()
} else {
val x4410 = x3305(x4406)
val x4411 = x4410 == '#'
val x4429 = if (x4411) {
val x4416 = x4393
val x4417 = x4394
val x4418 = x4395
val x4420 = x4416+x4410
x4393 = x4420
x4394 = false
val x4412 = x4406 + 1
x4395 = x4412
x4399 = x4412
()
} else {
x4398 = false
()
}
x4429
}
x4431
}
val x4434 = x4393
val x4435 = x4394
val x4436 = x4395
val x4503 = if (x4435) {
x4051 = x161
x4052 = true
x4053 = x4386
()
} else {
var x4445: java.lang.String = ""
var x4446: Boolean = false
var x4447: Int = x4436
var x4449: Int = -1
var x4450: Boolean = true
var x4451: Int = x4436
val x4487 = while ({val x4452 = x4450
val x4453 = x4449
val x4454 = x4451
val x4455 = x4453 != x4454
val x4456 = x4452 && x4455
x4456}) {
val x4458 = x4451
x4449 = x4458
val x4460 = x4458 >= x3322
val x4485 = if (x4460) {
x4450 = false
()
} else {
val x4462 = x3305(x4458)
val x4463 = x4462 > ' '
val x4464 = x4462 != ''
val x4465 = x4463 && x4464
val x4483 = if (x4465) {
val x4470 = x4445
val x4471 = x4446
val x4472 = x4447
val x4474 = x4470+x4462
x4445 = x4474
x4446 = false
val x4466 = x4458 + 1
x4447 = x4466
x4451 = x4466
()
} else {
x4450 = false
()
}
x4483
}
x4485
}
val x4488 = x4445
val x4489 = x4446
val x4490 = x4447
val x4495 = if (x4489) {
x161
} else {
val x4493 = new Anon1863173035("","","","",x4488,80)
x4493
}
x4051 = x4495
val x4496 = if (x4489) {
true
} else {
false
}
x4052 = x4496
val x4497 = if (x4489) {
x4490
} else {
x4490
}
x4053 = x4497
()
}
x4503
} else {
x4051 = x161
x4052 = true
x4053 = x4049
()
}
x4509
}
x4511
} else {
val x4513 = x4380.res
x4051 = x4513
x4052 = x4381
val x4516 = x4380.next
x4053 = x4516
()
}
val x4520 = x4051
val x4521 = x4052
val x4522 = x4053
val x4523 = new ParseResultAnon1863173035(x4520,x4521,x4522)
x4523
}
val x5439 = {x3556: (Int) => 
var x3558: Anon1863173035 = x161
var x3559: Boolean = true
var x3560: Int = x3556
val x3562 = x3556 >= x3322
val x5433 = if (x3562) {
x3558 = x161
x3559 = true
x3560 = x3556
()
} else {
val x3564 = x3305(x3556)
val x3565 = x3564 == '/'
val x5431 = if (x3565) {
var x4527: java.lang.String = ""
var x4528: Boolean = false
val x3566 = x3556 + 1
var x4529: Int = x3566
var x4531: Int = -1
var x4532: Boolean = true
var x4533: Int = x3566
val x4573 = while ({val x4534 = x4532
val x4535 = x4531
val x4536 = x4533
val x4537 = x4535 != x4536
val x4538 = x4534 && x4537
x4538}) {
val x4540 = x4533
x4531 = x4540
val x4542 = x4540 >= x3322
val x4571 = if (x4542) {
x4532 = false
()
} else {
val x4544 = x3305(x4540)
val x4545 = x4544 > ' '
val x4546 = x4544 != '#'
val x4547 = x4545 && x4546
val x4548 = x4544 != '?'
val x4549 = x4547 && x4548
val x4550 = x4544 != ''
val x4551 = x4549 && x4550
val x4569 = if (x4551) {
val x4556 = x4527
val x4557 = x4528
val x4558 = x4529
val x4560 = x4556+x4544
x4527 = x4560
x4528 = false
val x4552 = x4540 + 1
x4529 = x4552
x4533 = x4552
()
} else {
x4532 = false
()
}
x4569
}
x4571
}
val x4574 = x4527
val x4575 = x4528
val x4576 = x4529
val x4948 = if (x4575) {
x3558 = x161
x3559 = true
x3560 = x3566
()
} else {
val x4579 = x4525(x4576)
val x4591 = x4579.empty
val x4600 = if (x4591) {
false
} else {
false
}
val x4606 = if (x4600) {
true
} else {
false
}
val x4946 = if (x4606) {
x3558 = x161
x3559 = true
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
x3560 = x4607
()
} else {
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
val x4609 = x4607 >= x3322
val x4944 = if (x4609) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4611 = x3305(x4607)
val x4612 = x4611 == 'H'
val x4942 = if (x4612) {
val x4613 = x4607 + 1
val x4650 = x4613 >= x3322
val x4936 = if (x4650) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4652 = x3305(x4613)
val x4653 = x4652 == 'T'
val x4934 = if (x4653) {
val x4654 = x4613 + 1
val x4662 = x4654 >= x3322
val x4928 = if (x4662) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4664 = x3305(x4654)
val x4665 = x4664 == 'T'
val x4926 = if (x4665) {
val x4666 = x4654 + 1
val x4675 = x4666 >= x3322
val x4920 = if (x4675) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4677 = x3305(x4666)
val x4678 = x4677 == 'P'
val x4918 = if (x4678) {
val x4679 = x4666 + 1
val x4688 = x4679 >= x3322
val x4912 = if (x4688) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4690 = x3305(x4679)
val x4691 = x4690 == '/'
val x4910 = if (x4691) {
var x4723: Int = 0
var x4724: Boolean = false
val x4692 = x4679 + 1
var x4725: Int = x4692
var x4727: Int = -1
var x4728: Boolean = true
var x4729: Int = x4692
val x4770 = while ({val x4730 = x4728
val x4731 = x4727
val x4732 = x4729
val x4733 = x4731 != x4732
val x4734 = x4730 && x4733
x4734}) {
val x4736 = x4729
x4727 = x4736
val x4738 = x4736 >= x3322
val x4768 = if (x4738) {
x4728 = false
()
} else {
val x4740 = x3305(x4736)
val x4741 = x4740 >= '0'
val x4742 = x4740 <= '9'
val x4743 = x4741 && x4742
val x4766 = if (x4743) {
val x4752 = x4723
val x4753 = x4724
val x4754 = x4725
val x4749 = x4740 - '0'
val x4750 = x4749.toInt
val x4756 = x4752 * 10
val x4757 = x4756 + x4750
x4723 = x4757
x4724 = false
val x4744 = x4736 + 1
x4725 = x4744
x4729 = x4744
()
} else {
x4728 = false
()
}
x4766
}
x4768
}
val x4771 = x4723
val x4772 = x4724
val x4773 = x4725
val x4904 = if (x4772) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4776 = x4773 >= x3322
val x4902 = if (x4776) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4778 = x3305(x4773)
val x4779 = x4778 == '.'
val x4900 = if (x4779) {
var x4795: Int = 0
var x4796: Boolean = false
val x4780 = x4773 + 1
var x4797: Int = x4780
var x4799: Int = -1
var x4800: Boolean = true
var x4801: Int = x4780
val x4842 = while ({val x4802 = x4800
val x4803 = x4799
val x4804 = x4801
val x4805 = x4803 != x4804
val x4806 = x4802 && x4805
x4806}) {
val x4808 = x4801
x4799 = x4808
val x4810 = x4808 >= x3322
val x4840 = if (x4810) {
x4800 = false
()
} else {
val x4812 = x3305(x4808)
val x4813 = x4812 >= '0'
val x4814 = x4812 <= '9'
val x4815 = x4813 && x4814
val x4838 = if (x4815) {
val x4824 = x4795
val x4825 = x4796
val x4826 = x4797
val x4821 = x4812 - '0'
val x4822 = x4821.toInt
val x4828 = x4824 * 10
val x4829 = x4828 + x4822
x4795 = x4829
x4796 = false
val x4816 = x4808 + 1
x4797 = x4816
x4801 = x4816
()
} else {
x4800 = false
()
}
x4838
}
x4840
}
val x4843 = x4795
val x4844 = x4796
val x4845 = x4797
val x4850 = if (x4844) {
true
} else {
false
}
val x4859 = if (x4850) {
false
} else {
false
}
val x4864 = if (x4859) {
true
} else {
false
}
val x4888 = if (x4864) {
x161
} else {
val x4863 = if (x4859) {
x935
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
x4605
}
val x4869 = x4863._2
val x4870 = x4869.defined
val x4880 = if (x4870) {
val x4871 = x4869.value
val x4873 = x4871.schema
x4873
} else {
""
}
val x4881 = if (x4870) {
val x4871 = x4869.value
val x4874 = x4871.hostName
x4874
} else {
""
}
val x4868 = x4863._1
val x4872 = "/"+x4868
val x4882 = if (x4870) {
x4872
} else {
x4872
}
val x4883 = if (x4870) {
val x4871 = x4869.value
val x4875 = x4871.queryString
x4875
} else {
""
}
val x4884 = if (x4870) {
val x4871 = x4869.value
val x4876 = x4871.fragment
x4876
} else {
""
}
val x4885 = if (x4870) {
val x4871 = x4869.value
val x4877 = x4871.port
x4877
} else {
80
}
val x4886 = new Anon1863173035(x4880,x4881,x4882,x4883,x4884,x4885)
x4886
}
x3558 = x4888
val x4889 = if (x4864) {
true
} else {
false
}
x3559 = x4889
val x4865 = if (x4859) {
x3566
} else {
val x4851 = if (x4844) {
x4692
} else {
x4845
}
val x4860 = if (x4850) {
x4851
} else {
x4851
}
x4860
}
val x4890 = if (x4864) {
x4865
} else {
x4865
}
x3560 = x4890
()
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
}
x4900
}
x4902
}
x4904
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4910
}
x4912
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4918
}
x4920
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4926
}
x4928
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4934
}
x4936
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4942
}
x4944
}
x4946
}
x4948
} else {
x3558 = x161
x3559 = true
x3560 = x3556
()
}
x5431
}
val x5434 = x3558
val x5435 = x3559
val x5436 = x3560
val x5437 = new ParseResultAnon1863173035(x5434,x5435,x5436)
x5437
}
val x5768 = {x3550: (Int) => 
var x3552: Anon1863173035 = x161
var x3553: Boolean = true
var x3554: Int = x3550
val x5440 = x5439(x3550)
val x5441 = x5440.empty
val x5762 = if (x5441) {
val x5442 = x3550 >= x3322
val x5754 = if (x5442) {
x3552 = x161
x3553 = true
x3554 = x3550
()
} else {
val x5444 = x3305(x3550)
val x5445 = x5444 == '?'
val x5752 = if (x5445) {
var x5453: java.lang.String = ""
var x5454: Boolean = false
val x5446 = x3550 + 1
var x5455: Int = x5446
var x5457: Int = -1
var x5458: Boolean = true
var x5459: Int = x5446
val x5493 = while ({val x5460 = x5458
val x5461 = x5457
val x5462 = x5459
val x5463 = x5461 != x5462
val x5464 = x5460 && x5463
x5464}) {
val x5466 = x5459
x5457 = x5466
val x5468 = x5466 >= x3322
val x5491 = if (x5468) {
x5458 = false
()
} else {
val x5470 = x3305(x5466)
val x5471 = x5470 == '?'
val x5489 = if (x5471) {
val x5476 = x5453
val x5477 = x5454
val x5478 = x5455
val x5480 = x5476+x5470
x5453 = x5480
x5454 = false
val x5472 = x5466 + 1
x5455 = x5472
x5459 = x5472
()
} else {
x5458 = false
()
}
x5489
}
x5491
}
val x5494 = x5453
val x5495 = x5454
val x5496 = x5455
val x5746 = if (x5495) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
var x5512: java.lang.String = ""
var x5513: Boolean = false
var x5514: Int = x5496
var x5516: Int = -1
var x5517: Boolean = true
var x5518: Int = x5496
val x5556 = while ({val x5519 = x5517
val x5520 = x5516
val x5521 = x5518
val x5522 = x5520 != x5521
val x5523 = x5519 && x5522
x5523}) {
val x5525 = x5518
x5516 = x5525
val x5527 = x5525 >= x3322
val x5554 = if (x5527) {
x5517 = false
()
} else {
val x5529 = x3305(x5525)
val x5530 = x5529 > ' '
val x5531 = x5529 != '#'
val x5532 = x5530 && x5531
val x5533 = x5529 != ''
val x5534 = x5532 && x5533
val x5552 = if (x5534) {
val x5539 = x5512
val x5540 = x5513
val x5541 = x5514
val x5543 = x5539+x5529
x5512 = x5543
x5513 = false
val x5535 = x5525 + 1
x5514 = x5535
x5518 = x5535
()
} else {
x5517 = false
()
}
x5552
}
x5554
}
val x5557 = x5512
val x5558 = x5513
val x5559 = x5514
val x5744 = if (x5558) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
val x5561 = x5559 >= x3322
val x5742 = if (x5561) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
} else {
val x5563 = x3305(x5559)
val x5564 = x5563 == '#'
val x5740 = if (x5564) {
var x5582: java.lang.String = ""
var x5583: Boolean = false
val x5565 = x5559 + 1
var x5584: Int = x5565
var x5586: Int = -1
var x5587: Boolean = true
var x5588: Int = x5565
val x5622 = while ({val x5589 = x5587
val x5590 = x5586
val x5591 = x5588
val x5592 = x5590 != x5591
val x5593 = x5589 && x5592
x5593}) {
val x5595 = x5588
x5586 = x5595
val x5597 = x5595 >= x3322
val x5620 = if (x5597) {
x5587 = false
()
} else {
val x5599 = x3305(x5595)
val x5600 = x5599 == '#'
val x5618 = if (x5600) {
val x5605 = x5582
val x5606 = x5583
val x5607 = x5584
val x5609 = x5605+x5599
x5582 = x5609
x5583 = false
val x5601 = x5595 + 1
x5584 = x5601
x5588 = x5601
()
} else {
x5587 = false
()
}
x5618
}
x5620
}
val x5623 = x5582
val x5624 = x5583
val x5625 = x5584
val x5734 = if (x5624) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5565
()
} else {
var x5637: java.lang.String = ""
var x5638: Boolean = false
var x5639: Int = x5625
var x5641: Int = -1
var x5642: Boolean = true
var x5643: Int = x5625
val x5679 = while ({val x5644 = x5642
val x5645 = x5641
val x5646 = x5643
val x5647 = x5645 != x5646
val x5648 = x5644 && x5647
x5648}) {
val x5650 = x5643
x5641 = x5650
val x5652 = x5650 >= x3322
val x5677 = if (x5652) {
x5642 = false
()
} else {
val x5654 = x3305(x5650)
val x5655 = x5654 > ' '
val x5656 = x5654 != ''
val x5657 = x5655 && x5656
val x5675 = if (x5657) {
val x5662 = x5637
val x5663 = x5638
val x5664 = x5639
val x5666 = x5662+x5654
x5637 = x5666
x5638 = false
val x5658 = x5650 + 1
x5639 = x5658
x5643 = x5658
()
} else {
x5642 = false
()
}
x5675
}
x5677
}
val x5680 = x5637
val x5681 = x5638
val x5682 = x5639
val x5688 = if (x5681) {
true
} else {
false
}
val x5697 = if (x5688) {
false
} else {
false
}
val x5703 = if (x5697) {
true
} else {
false
}
val x5726 = if (x5703) {
x161
} else {
val x5702 = if (x5697) {
x935
} else {
val x5694 = if (x5688) {
x161
} else {
val x5687 = if (x5681) {
x161
} else {
val x5685 = new Anon1863173035("","","","",x5680,80)
x5685
}
x5687
}
val x5695 = if (x5688) {
false
} else {
true
}
val x5696 = new OptionAnon1863173035(x5694,x5695)
val x5700 = new Tuple2StringOptionAnon1863173035(x5557,x5696)
x5700
}
val x5708 = x5702._2
val x5709 = x5708.defined
val x5718 = if (x5709) {
val x5710 = x5708.value
val x5711 = x5710.schema
x5711
} else {
""
}
val x5719 = if (x5709) {
val x5710 = x5708.value
val x5712 = x5710.hostName
x5712
} else {
""
}
val x5720 = if (x5709) {
val x5710 = x5708.value
val x5713 = x5710.path
x5713
} else {
""
}
val x5707 = x5702._1
val x5721 = if (x5709) {
x5707
} else {
x5707
}
val x5722 = if (x5709) {
val x5710 = x5708.value
val x5714 = x5710.fragment
x5714
} else {
""
}
val x5723 = if (x5709) {
val x5710 = x5708.value
val x5715 = x5710.port
x5715
} else {
80
}
val x5724 = new Anon1863173035(x5718,x5719,x5720,x5721,x5722,x5723)
x5724
}
x3552 = x5726
val x5727 = if (x5703) {
true
} else {
false
}
x3553 = x5727
val x5704 = if (x5697) {
x5446
} else {
val x5689 = if (x5681) {
x5682
} else {
x5682
}
val x5698 = if (x5688) {
x5689
} else {
x5689
}
x5698
}
val x5728 = if (x5703) {
x5704
} else {
x5704
}
x3554 = x5728
()
}
x5734
} else {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
}
x5740
}
x5742
}
x5744
}
x5746
} else {
x3552 = x161
x3553 = true
x3554 = x3550
()
}
x5752
}
x5754
} else {
val x5756 = x5440.res
x3552 = x5756
x3553 = x5441
val x5759 = x5440.next
x3554 = x5759
()
}
val x5763 = x3552
val x5764 = x3553
val x5765 = x3554
val x5766 = new ParseResultAnon1863173035(x5763,x5764,x5765)
x5766
}
val x5944 = x5768(x5922)
val x5945 = x5944.empty
val x5951 = if (x5945) {
true
} else {
false
}
val x5977 = if (x5951) {
x161
} else {
val x5950 = if (x5945) {
val x5792 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x5792
} else {
val x5805 = x5769.res
val x5920 = if (x5912) {
x1
} else {
val x5911 = if (x5906) {
x189
} else {
val x5909 = new Tuple2CharString(x5774,x5905)
x5909
}
val x5916 = x5911._1
val x5917 = x5911._2
val x5918 = x5916+x5917
x5918
}
val x5938 = new Anon1863173035("",x5920,"","","",80)
val x5940 = new OptionAnon1863173035(x5938,true)
val x5942 = new Tuple2StringOptionAnon1863173035(x5805,x5940)
val x5946 = x5944.res
val x5947 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5942,x5946)
x5947
}
val x5955 = x5950._1
val x5957 = x5955._1
val x5958 = x5955._2
val x5959 = x5958.defined
val x5969 = if (x5959) {
x5957
} else {
x5957
}
val x5956 = x5950._2
val x5970 = if (x5959) {
val x5960 = x5958.value
val x5961 = x5960.hostName
x5961
} else {
val x5967 = x5956.hostName
x5967
}
val x5962 = x5956.path
val x5971 = if (x5959) {
x5962
} else {
x5962
}
val x5963 = x5956.queryString
val x5972 = if (x5959) {
x5963
} else {
x5963
}
val x5964 = x5956.fragment
val x5973 = if (x5959) {
x5964
} else {
x5964
}
val x5965 = x5956.port
val x5974 = if (x5959) {
x5965
} else {
x5965
}
val x5975 = new Anon1863173035(x5969,x5970,x5971,x5972,x5973,x5974)
x5975
}
x3306 = x5977
val x5978 = if (x5951) {
true
} else {
false
}
x3307 = x5978
val x5952 = if (x5945) {
0
} else {
val x5948 = x5944.next
x5948
}
val x5979 = if (x5951) {
x5952
} else {
x5952
}
x3308 = x5979
()
} else {
val x5926 = x3305(x5922)
val x5927 = x5926 == ':'
val x6135 = if (x5927) {
var x5986: Int = 0
var x5987: Boolean = false
val x5928 = x5922 + 1
var x5988: Int = x5928
var x5990: Int = -1
var x5991: Boolean = true
var x5992: Int = x5928
val x6033 = while ({val x5993 = x5991
val x5994 = x5990
val x5995 = x5992
val x5996 = x5994 != x5995
val x5997 = x5993 && x5996
x5997}) {
val x5999 = x5992
x5990 = x5999
val x6001 = x5999 >= x3322
val x6031 = if (x6001) {
x5991 = false
()
} else {
val x6003 = x3305(x5999)
val x6004 = x6003 >= '0'
val x6005 = x6003 <= '9'
val x6006 = x6004 && x6005
val x6029 = if (x6006) {
val x6015 = x5986
val x6016 = x5987
val x6017 = x5988
val x6012 = x6003 - '0'
val x6013 = x6012.toInt
val x6019 = x6015 * 10
val x6020 = x6019 + x6013
x5986 = x6020
x5987 = false
val x6007 = x5999 + 1
x5988 = x6007
x5992 = x6007
()
} else {
x5991 = false
()
}
x6029
}
x6031
}
val x6034 = x5986
val x6035 = x5987
val x6036 = x5988
val x6044 = if (x6035) {
false
} else {
false
}
val x6050 = if (x6044) {
true
} else {
false
}
val x6066 = if (x6050) {
true
} else {
false
}
val x6075 = if (x6066) {
false
} else {
false
}
val x6081 = if (x6075) {
true
} else {
false
}
val x6129 = if (x6081) {
x3306 = x161
x3307 = true
x3308 = 0
()
} else {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4379 = {x4055: (Int) => 
var x4057: Anon1863173035 = x161
var x4058: Boolean = true
var x4059: Int = x4055
val x4061 = x4055 >= x3322
val x4373 = if (x4061) {
x4057 = x161
x4058 = true
x4059 = x4055
()
} else {
val x4063 = x3305(x4055)
val x4064 = x4063 == '?'
val x4371 = if (x4064) {
var x4072: java.lang.String = ""
var x4073: Boolean = false
val x4065 = x4055 + 1
var x4074: Int = x4065
var x4076: Int = -1
var x4077: Boolean = true
var x4078: Int = x4065
val x4112 = while ({val x4079 = x4077
val x4080 = x4076
val x4081 = x4078
val x4082 = x4080 != x4081
val x4083 = x4079 && x4082
x4083}) {
val x4085 = x4078
x4076 = x4085
val x4087 = x4085 >= x3322
val x4110 = if (x4087) {
x4077 = false
()
} else {
val x4089 = x3305(x4085)
val x4090 = x4089 == '?'
val x4108 = if (x4090) {
val x4095 = x4072
val x4096 = x4073
val x4097 = x4074
val x4099 = x4095+x4089
x4072 = x4099
x4073 = false
val x4091 = x4085 + 1
x4074 = x4091
x4078 = x4091
()
} else {
x4077 = false
()
}
x4108
}
x4110
}
val x4113 = x4072
val x4114 = x4073
val x4115 = x4074
val x4365 = if (x4114) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
var x4131: java.lang.String = ""
var x4132: Boolean = false
var x4133: Int = x4115
var x4135: Int = -1
var x4136: Boolean = true
var x4137: Int = x4115
val x4175 = while ({val x4138 = x4136
val x4139 = x4135
val x4140 = x4137
val x4141 = x4139 != x4140
val x4142 = x4138 && x4141
x4142}) {
val x4144 = x4137
x4135 = x4144
val x4146 = x4144 >= x3322
val x4173 = if (x4146) {
x4136 = false
()
} else {
val x4148 = x3305(x4144)
val x4149 = x4148 > ' '
val x4150 = x4148 != '#'
val x4151 = x4149 && x4150
val x4152 = x4148 != ''
val x4153 = x4151 && x4152
val x4171 = if (x4153) {
val x4158 = x4131
val x4159 = x4132
val x4160 = x4133
val x4162 = x4158+x4148
x4131 = x4162
x4132 = false
val x4154 = x4144 + 1
x4133 = x4154
x4137 = x4154
()
} else {
x4136 = false
()
}
x4171
}
x4173
}
val x4176 = x4131
val x4177 = x4132
val x4178 = x4133
val x4363 = if (x4177) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
val x4180 = x4178 >= x3322
val x4361 = if (x4180) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
} else {
val x4182 = x3305(x4178)
val x4183 = x4182 == '#'
val x4359 = if (x4183) {
var x4201: java.lang.String = ""
var x4202: Boolean = false
val x4184 = x4178 + 1
var x4203: Int = x4184
var x4205: Int = -1
var x4206: Boolean = true
var x4207: Int = x4184
val x4241 = while ({val x4208 = x4206
val x4209 = x4205
val x4210 = x4207
val x4211 = x4209 != x4210
val x4212 = x4208 && x4211
x4212}) {
val x4214 = x4207
x4205 = x4214
val x4216 = x4214 >= x3322
val x4239 = if (x4216) {
x4206 = false
()
} else {
val x4218 = x3305(x4214)
val x4219 = x4218 == '#'
val x4237 = if (x4219) {
val x4224 = x4201
val x4225 = x4202
val x4226 = x4203
val x4228 = x4224+x4218
x4201 = x4228
x4202 = false
val x4220 = x4214 + 1
x4203 = x4220
x4207 = x4220
()
} else {
x4206 = false
()
}
x4237
}
x4239
}
val x4242 = x4201
val x4243 = x4202
val x4244 = x4203
val x4353 = if (x4243) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4184
()
} else {
var x4256: java.lang.String = ""
var x4257: Boolean = false
var x4258: Int = x4244
var x4260: Int = -1
var x4261: Boolean = true
var x4262: Int = x4244
val x4298 = while ({val x4263 = x4261
val x4264 = x4260
val x4265 = x4262
val x4266 = x4264 != x4265
val x4267 = x4263 && x4266
x4267}) {
val x4269 = x4262
x4260 = x4269
val x4271 = x4269 >= x3322
val x4296 = if (x4271) {
x4261 = false
()
} else {
val x4273 = x3305(x4269)
val x4274 = x4273 > ' '
val x4275 = x4273 != ''
val x4276 = x4274 && x4275
val x4294 = if (x4276) {
val x4281 = x4256
val x4282 = x4257
val x4283 = x4258
val x4285 = x4281+x4273
x4256 = x4285
x4257 = false
val x4277 = x4269 + 1
x4258 = x4277
x4262 = x4277
()
} else {
x4261 = false
()
}
x4294
}
x4296
}
val x4299 = x4256
val x4300 = x4257
val x4301 = x4258
val x4307 = if (x4300) {
true
} else {
false
}
val x4316 = if (x4307) {
false
} else {
false
}
val x4322 = if (x4316) {
true
} else {
false
}
val x4345 = if (x4322) {
x161
} else {
val x4321 = if (x4316) {
x935
} else {
val x4313 = if (x4307) {
x161
} else {
val x4306 = if (x4300) {
x161
} else {
val x4304 = new Anon1863173035("","","","",x4299,80)
x4304
}
x4306
}
val x4314 = if (x4307) {
false
} else {
true
}
val x4315 = new OptionAnon1863173035(x4313,x4314)
val x4319 = new Tuple2StringOptionAnon1863173035(x4176,x4315)
x4319
}
val x4327 = x4321._2
val x4328 = x4327.defined
val x4337 = if (x4328) {
val x4329 = x4327.value
val x4330 = x4329.schema
x4330
} else {
""
}
val x4338 = if (x4328) {
val x4329 = x4327.value
val x4331 = x4329.hostName
x4331
} else {
""
}
val x4339 = if (x4328) {
val x4329 = x4327.value
val x4332 = x4329.path
x4332
} else {
""
}
val x4326 = x4321._1
val x4340 = if (x4328) {
x4326
} else {
x4326
}
val x4341 = if (x4328) {
val x4329 = x4327.value
val x4333 = x4329.fragment
x4333
} else {
""
}
val x4342 = if (x4328) {
val x4329 = x4327.value
val x4334 = x4329.port
x4334
} else {
80
}
val x4343 = new Anon1863173035(x4337,x4338,x4339,x4340,x4341,x4342)
x4343
}
x4057 = x4345
val x4346 = if (x4322) {
true
} else {
false
}
x4058 = x4346
val x4323 = if (x4316) {
x4065
} else {
val x4308 = if (x4300) {
x4301
} else {
x4301
}
val x4317 = if (x4307) {
x4308
} else {
x4308
}
x4317
}
val x4347 = if (x4322) {
x4323
} else {
x4323
}
x4059 = x4347
()
}
x4353
} else {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
}
x4359
}
x4361
}
x4363
}
x4365
} else {
x4057 = x161
x4058 = true
x4059 = x4055
()
}
x4371
}
val x4374 = x4057
val x4375 = x4058
val x4376 = x4059
val x4377 = new ParseResultAnon1863173035(x4374,x4375,x4376)
x4377
}
val x4525 = {x4049: (Int) => 
var x4051: Anon1863173035 = x161
var x4052: Boolean = true
var x4053: Int = x4049
val x4380 = x4379(x4049)
val x4381 = x4380.empty
val x4519 = if (x4381) {
val x4382 = x4049 >= x3322
val x4511 = if (x4382) {
x4051 = x161
x4052 = true
x4053 = x4049
()
} else {
val x4384 = x3305(x4049)
val x4385 = x4384 == '#'
val x4509 = if (x4385) {
var x4393: java.lang.String = ""
var x4394: Boolean = false
val x4386 = x4049 + 1
var x4395: Int = x4386
var x4397: Int = -1
var x4398: Boolean = true
var x4399: Int = x4386
val x4433 = while ({val x4400 = x4398
val x4401 = x4397
val x4402 = x4399
val x4403 = x4401 != x4402
val x4404 = x4400 && x4403
x4404}) {
val x4406 = x4399
x4397 = x4406
val x4408 = x4406 >= x3322
val x4431 = if (x4408) {
x4398 = false
()
} else {
val x4410 = x3305(x4406)
val x4411 = x4410 == '#'
val x4429 = if (x4411) {
val x4416 = x4393
val x4417 = x4394
val x4418 = x4395
val x4420 = x4416+x4410
x4393 = x4420
x4394 = false
val x4412 = x4406 + 1
x4395 = x4412
x4399 = x4412
()
} else {
x4398 = false
()
}
x4429
}
x4431
}
val x4434 = x4393
val x4435 = x4394
val x4436 = x4395
val x4503 = if (x4435) {
x4051 = x161
x4052 = true
x4053 = x4386
()
} else {
var x4445: java.lang.String = ""
var x4446: Boolean = false
var x4447: Int = x4436
var x4449: Int = -1
var x4450: Boolean = true
var x4451: Int = x4436
val x4487 = while ({val x4452 = x4450
val x4453 = x4449
val x4454 = x4451
val x4455 = x4453 != x4454
val x4456 = x4452 && x4455
x4456}) {
val x4458 = x4451
x4449 = x4458
val x4460 = x4458 >= x3322
val x4485 = if (x4460) {
x4450 = false
()
} else {
val x4462 = x3305(x4458)
val x4463 = x4462 > ' '
val x4464 = x4462 != ''
val x4465 = x4463 && x4464
val x4483 = if (x4465) {
val x4470 = x4445
val x4471 = x4446
val x4472 = x4447
val x4474 = x4470+x4462
x4445 = x4474
x4446 = false
val x4466 = x4458 + 1
x4447 = x4466
x4451 = x4466
()
} else {
x4450 = false
()
}
x4483
}
x4485
}
val x4488 = x4445
val x4489 = x4446
val x4490 = x4447
val x4495 = if (x4489) {
x161
} else {
val x4493 = new Anon1863173035("","","","",x4488,80)
x4493
}
x4051 = x4495
val x4496 = if (x4489) {
true
} else {
false
}
x4052 = x4496
val x4497 = if (x4489) {
x4490
} else {
x4490
}
x4053 = x4497
()
}
x4503
} else {
x4051 = x161
x4052 = true
x4053 = x4049
()
}
x4509
}
x4511
} else {
val x4513 = x4380.res
x4051 = x4513
x4052 = x4381
val x4516 = x4380.next
x4053 = x4516
()
}
val x4520 = x4051
val x4521 = x4052
val x4522 = x4053
val x4523 = new ParseResultAnon1863173035(x4520,x4521,x4522)
x4523
}
val x5439 = {x3556: (Int) => 
var x3558: Anon1863173035 = x161
var x3559: Boolean = true
var x3560: Int = x3556
val x3562 = x3556 >= x3322
val x5433 = if (x3562) {
x3558 = x161
x3559 = true
x3560 = x3556
()
} else {
val x3564 = x3305(x3556)
val x3565 = x3564 == '/'
val x5431 = if (x3565) {
var x4527: java.lang.String = ""
var x4528: Boolean = false
val x3566 = x3556 + 1
var x4529: Int = x3566
var x4531: Int = -1
var x4532: Boolean = true
var x4533: Int = x3566
val x4573 = while ({val x4534 = x4532
val x4535 = x4531
val x4536 = x4533
val x4537 = x4535 != x4536
val x4538 = x4534 && x4537
x4538}) {
val x4540 = x4533
x4531 = x4540
val x4542 = x4540 >= x3322
val x4571 = if (x4542) {
x4532 = false
()
} else {
val x4544 = x3305(x4540)
val x4545 = x4544 > ' '
val x4546 = x4544 != '#'
val x4547 = x4545 && x4546
val x4548 = x4544 != '?'
val x4549 = x4547 && x4548
val x4550 = x4544 != ''
val x4551 = x4549 && x4550
val x4569 = if (x4551) {
val x4556 = x4527
val x4557 = x4528
val x4558 = x4529
val x4560 = x4556+x4544
x4527 = x4560
x4528 = false
val x4552 = x4540 + 1
x4529 = x4552
x4533 = x4552
()
} else {
x4532 = false
()
}
x4569
}
x4571
}
val x4574 = x4527
val x4575 = x4528
val x4576 = x4529
val x4948 = if (x4575) {
x3558 = x161
x3559 = true
x3560 = x3566
()
} else {
val x4579 = x4525(x4576)
val x4591 = x4579.empty
val x4600 = if (x4591) {
false
} else {
false
}
val x4606 = if (x4600) {
true
} else {
false
}
val x4946 = if (x4606) {
x3558 = x161
x3559 = true
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
x3560 = x4607
()
} else {
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
val x4609 = x4607 >= x3322
val x4944 = if (x4609) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4611 = x3305(x4607)
val x4612 = x4611 == 'H'
val x4942 = if (x4612) {
val x4613 = x4607 + 1
val x4650 = x4613 >= x3322
val x4936 = if (x4650) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4652 = x3305(x4613)
val x4653 = x4652 == 'T'
val x4934 = if (x4653) {
val x4654 = x4613 + 1
val x4662 = x4654 >= x3322
val x4928 = if (x4662) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4664 = x3305(x4654)
val x4665 = x4664 == 'T'
val x4926 = if (x4665) {
val x4666 = x4654 + 1
val x4675 = x4666 >= x3322
val x4920 = if (x4675) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4677 = x3305(x4666)
val x4678 = x4677 == 'P'
val x4918 = if (x4678) {
val x4679 = x4666 + 1
val x4688 = x4679 >= x3322
val x4912 = if (x4688) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4690 = x3305(x4679)
val x4691 = x4690 == '/'
val x4910 = if (x4691) {
var x4723: Int = 0
var x4724: Boolean = false
val x4692 = x4679 + 1
var x4725: Int = x4692
var x4727: Int = -1
var x4728: Boolean = true
var x4729: Int = x4692
val x4770 = while ({val x4730 = x4728
val x4731 = x4727
val x4732 = x4729
val x4733 = x4731 != x4732
val x4734 = x4730 && x4733
x4734}) {
val x4736 = x4729
x4727 = x4736
val x4738 = x4736 >= x3322
val x4768 = if (x4738) {
x4728 = false
()
} else {
val x4740 = x3305(x4736)
val x4741 = x4740 >= '0'
val x4742 = x4740 <= '9'
val x4743 = x4741 && x4742
val x4766 = if (x4743) {
val x4752 = x4723
val x4753 = x4724
val x4754 = x4725
val x4749 = x4740 - '0'
val x4750 = x4749.toInt
val x4756 = x4752 * 10
val x4757 = x4756 + x4750
x4723 = x4757
x4724 = false
val x4744 = x4736 + 1
x4725 = x4744
x4729 = x4744
()
} else {
x4728 = false
()
}
x4766
}
x4768
}
val x4771 = x4723
val x4772 = x4724
val x4773 = x4725
val x4904 = if (x4772) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4776 = x4773 >= x3322
val x4902 = if (x4776) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4778 = x3305(x4773)
val x4779 = x4778 == '.'
val x4900 = if (x4779) {
var x4795: Int = 0
var x4796: Boolean = false
val x4780 = x4773 + 1
var x4797: Int = x4780
var x4799: Int = -1
var x4800: Boolean = true
var x4801: Int = x4780
val x4842 = while ({val x4802 = x4800
val x4803 = x4799
val x4804 = x4801
val x4805 = x4803 != x4804
val x4806 = x4802 && x4805
x4806}) {
val x4808 = x4801
x4799 = x4808
val x4810 = x4808 >= x3322
val x4840 = if (x4810) {
x4800 = false
()
} else {
val x4812 = x3305(x4808)
val x4813 = x4812 >= '0'
val x4814 = x4812 <= '9'
val x4815 = x4813 && x4814
val x4838 = if (x4815) {
val x4824 = x4795
val x4825 = x4796
val x4826 = x4797
val x4821 = x4812 - '0'
val x4822 = x4821.toInt
val x4828 = x4824 * 10
val x4829 = x4828 + x4822
x4795 = x4829
x4796 = false
val x4816 = x4808 + 1
x4797 = x4816
x4801 = x4816
()
} else {
x4800 = false
()
}
x4838
}
x4840
}
val x4843 = x4795
val x4844 = x4796
val x4845 = x4797
val x4850 = if (x4844) {
true
} else {
false
}
val x4859 = if (x4850) {
false
} else {
false
}
val x4864 = if (x4859) {
true
} else {
false
}
val x4888 = if (x4864) {
x161
} else {
val x4863 = if (x4859) {
x935
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
x4605
}
val x4869 = x4863._2
val x4870 = x4869.defined
val x4880 = if (x4870) {
val x4871 = x4869.value
val x4873 = x4871.schema
x4873
} else {
""
}
val x4881 = if (x4870) {
val x4871 = x4869.value
val x4874 = x4871.hostName
x4874
} else {
""
}
val x4868 = x4863._1
val x4872 = "/"+x4868
val x4882 = if (x4870) {
x4872
} else {
x4872
}
val x4883 = if (x4870) {
val x4871 = x4869.value
val x4875 = x4871.queryString
x4875
} else {
""
}
val x4884 = if (x4870) {
val x4871 = x4869.value
val x4876 = x4871.fragment
x4876
} else {
""
}
val x4885 = if (x4870) {
val x4871 = x4869.value
val x4877 = x4871.port
x4877
} else {
80
}
val x4886 = new Anon1863173035(x4880,x4881,x4882,x4883,x4884,x4885)
x4886
}
x3558 = x4888
val x4889 = if (x4864) {
true
} else {
false
}
x3559 = x4889
val x4865 = if (x4859) {
x3566
} else {
val x4851 = if (x4844) {
x4692
} else {
x4845
}
val x4860 = if (x4850) {
x4851
} else {
x4851
}
x4860
}
val x4890 = if (x4864) {
x4865
} else {
x4865
}
x3560 = x4890
()
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
}
x4900
}
x4902
}
x4904
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4910
}
x4912
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4918
}
x4920
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4926
}
x4928
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4934
}
x4936
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4942
}
x4944
}
x4946
}
x4948
} else {
x3558 = x161
x3559 = true
x3560 = x3556
()
}
x5431
}
val x5434 = x3558
val x5435 = x3559
val x5436 = x3560
val x5437 = new ParseResultAnon1863173035(x5434,x5435,x5436)
x5437
}
val x5768 = {x3550: (Int) => 
var x3552: Anon1863173035 = x161
var x3553: Boolean = true
var x3554: Int = x3550
val x5440 = x5439(x3550)
val x5441 = x5440.empty
val x5762 = if (x5441) {
val x5442 = x3550 >= x3322
val x5754 = if (x5442) {
x3552 = x161
x3553 = true
x3554 = x3550
()
} else {
val x5444 = x3305(x3550)
val x5445 = x5444 == '?'
val x5752 = if (x5445) {
var x5453: java.lang.String = ""
var x5454: Boolean = false
val x5446 = x3550 + 1
var x5455: Int = x5446
var x5457: Int = -1
var x5458: Boolean = true
var x5459: Int = x5446
val x5493 = while ({val x5460 = x5458
val x5461 = x5457
val x5462 = x5459
val x5463 = x5461 != x5462
val x5464 = x5460 && x5463
x5464}) {
val x5466 = x5459
x5457 = x5466
val x5468 = x5466 >= x3322
val x5491 = if (x5468) {
x5458 = false
()
} else {
val x5470 = x3305(x5466)
val x5471 = x5470 == '?'
val x5489 = if (x5471) {
val x5476 = x5453
val x5477 = x5454
val x5478 = x5455
val x5480 = x5476+x5470
x5453 = x5480
x5454 = false
val x5472 = x5466 + 1
x5455 = x5472
x5459 = x5472
()
} else {
x5458 = false
()
}
x5489
}
x5491
}
val x5494 = x5453
val x5495 = x5454
val x5496 = x5455
val x5746 = if (x5495) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
var x5512: java.lang.String = ""
var x5513: Boolean = false
var x5514: Int = x5496
var x5516: Int = -1
var x5517: Boolean = true
var x5518: Int = x5496
val x5556 = while ({val x5519 = x5517
val x5520 = x5516
val x5521 = x5518
val x5522 = x5520 != x5521
val x5523 = x5519 && x5522
x5523}) {
val x5525 = x5518
x5516 = x5525
val x5527 = x5525 >= x3322
val x5554 = if (x5527) {
x5517 = false
()
} else {
val x5529 = x3305(x5525)
val x5530 = x5529 > ' '
val x5531 = x5529 != '#'
val x5532 = x5530 && x5531
val x5533 = x5529 != ''
val x5534 = x5532 && x5533
val x5552 = if (x5534) {
val x5539 = x5512
val x5540 = x5513
val x5541 = x5514
val x5543 = x5539+x5529
x5512 = x5543
x5513 = false
val x5535 = x5525 + 1
x5514 = x5535
x5518 = x5535
()
} else {
x5517 = false
()
}
x5552
}
x5554
}
val x5557 = x5512
val x5558 = x5513
val x5559 = x5514
val x5744 = if (x5558) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
val x5561 = x5559 >= x3322
val x5742 = if (x5561) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
} else {
val x5563 = x3305(x5559)
val x5564 = x5563 == '#'
val x5740 = if (x5564) {
var x5582: java.lang.String = ""
var x5583: Boolean = false
val x5565 = x5559 + 1
var x5584: Int = x5565
var x5586: Int = -1
var x5587: Boolean = true
var x5588: Int = x5565
val x5622 = while ({val x5589 = x5587
val x5590 = x5586
val x5591 = x5588
val x5592 = x5590 != x5591
val x5593 = x5589 && x5592
x5593}) {
val x5595 = x5588
x5586 = x5595
val x5597 = x5595 >= x3322
val x5620 = if (x5597) {
x5587 = false
()
} else {
val x5599 = x3305(x5595)
val x5600 = x5599 == '#'
val x5618 = if (x5600) {
val x5605 = x5582
val x5606 = x5583
val x5607 = x5584
val x5609 = x5605+x5599
x5582 = x5609
x5583 = false
val x5601 = x5595 + 1
x5584 = x5601
x5588 = x5601
()
} else {
x5587 = false
()
}
x5618
}
x5620
}
val x5623 = x5582
val x5624 = x5583
val x5625 = x5584
val x5734 = if (x5624) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5565
()
} else {
var x5637: java.lang.String = ""
var x5638: Boolean = false
var x5639: Int = x5625
var x5641: Int = -1
var x5642: Boolean = true
var x5643: Int = x5625
val x5679 = while ({val x5644 = x5642
val x5645 = x5641
val x5646 = x5643
val x5647 = x5645 != x5646
val x5648 = x5644 && x5647
x5648}) {
val x5650 = x5643
x5641 = x5650
val x5652 = x5650 >= x3322
val x5677 = if (x5652) {
x5642 = false
()
} else {
val x5654 = x3305(x5650)
val x5655 = x5654 > ' '
val x5656 = x5654 != ''
val x5657 = x5655 && x5656
val x5675 = if (x5657) {
val x5662 = x5637
val x5663 = x5638
val x5664 = x5639
val x5666 = x5662+x5654
x5637 = x5666
x5638 = false
val x5658 = x5650 + 1
x5639 = x5658
x5643 = x5658
()
} else {
x5642 = false
()
}
x5675
}
x5677
}
val x5680 = x5637
val x5681 = x5638
val x5682 = x5639
val x5688 = if (x5681) {
true
} else {
false
}
val x5697 = if (x5688) {
false
} else {
false
}
val x5703 = if (x5697) {
true
} else {
false
}
val x5726 = if (x5703) {
x161
} else {
val x5702 = if (x5697) {
x935
} else {
val x5694 = if (x5688) {
x161
} else {
val x5687 = if (x5681) {
x161
} else {
val x5685 = new Anon1863173035("","","","",x5680,80)
x5685
}
x5687
}
val x5695 = if (x5688) {
false
} else {
true
}
val x5696 = new OptionAnon1863173035(x5694,x5695)
val x5700 = new Tuple2StringOptionAnon1863173035(x5557,x5696)
x5700
}
val x5708 = x5702._2
val x5709 = x5708.defined
val x5718 = if (x5709) {
val x5710 = x5708.value
val x5711 = x5710.schema
x5711
} else {
""
}
val x5719 = if (x5709) {
val x5710 = x5708.value
val x5712 = x5710.hostName
x5712
} else {
""
}
val x5720 = if (x5709) {
val x5710 = x5708.value
val x5713 = x5710.path
x5713
} else {
""
}
val x5707 = x5702._1
val x5721 = if (x5709) {
x5707
} else {
x5707
}
val x5722 = if (x5709) {
val x5710 = x5708.value
val x5714 = x5710.fragment
x5714
} else {
""
}
val x5723 = if (x5709) {
val x5710 = x5708.value
val x5715 = x5710.port
x5715
} else {
80
}
val x5724 = new Anon1863173035(x5718,x5719,x5720,x5721,x5722,x5723)
x5724
}
x3552 = x5726
val x5727 = if (x5703) {
true
} else {
false
}
x3553 = x5727
val x5704 = if (x5697) {
x5446
} else {
val x5689 = if (x5681) {
x5682
} else {
x5682
}
val x5698 = if (x5688) {
x5689
} else {
x5689
}
x5698
}
val x5728 = if (x5703) {
x5704
} else {
x5704
}
x3554 = x5728
()
}
x5734
} else {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
}
x5740
}
x5742
}
x5744
}
x5746
} else {
x3552 = x161
x3553 = true
x3554 = x3550
()
}
x5752
}
x5754
} else {
val x5756 = x5440.res
x3552 = x5756
x3553 = x5441
val x5759 = x5440.next
x3554 = x5759
()
}
val x5763 = x3552
val x5764 = x3553
val x5765 = x3554
val x5766 = new ParseResultAnon1863173035(x5763,x5764,x5765)
x5766
}
val x6082 = if (x6075) {
0
} else {
val x6051 = if (x6044) {
x5771
} else {
val x6045 = if (x6035) {
x6036
} else {
x6036
}
x6045
}
val x6067 = if (x6050) {
x6051
} else {
x6051
}
val x6076 = if (x6066) {
x6067
} else {
x6067
}
x6076
}
val x6084 = x5768(x6082)
val x6089 = x6084.empty
val x6095 = if (x6089) {
true
} else {
false
}
val x6121 = if (x6095) {
x161
} else {
val x6094 = if (x6089) {
val x5792 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x5792
} else {
val x6080 = if (x6075) {
x935
} else {
val x5805 = x5769.res
val x6072 = if (x6066) {
x161
} else {
val x6065 = if (x6050) {
x161
} else {
val x6049 = if (x6044) {
val x192 = null.asInstanceOf[Tuple2StringOptionInt]
x192
} else {
val x5920 = if (x5912) {
x1
} else {
val x5911 = if (x5906) {
x189
} else {
val x5909 = new Tuple2CharString(x5774,x5905)
x5909
}
val x5916 = x5911._1
val x5917 = x5911._2
val x5918 = x5916+x5917
x5918
}
val x6041 = if (x6035) {
val x285 = null.asInstanceOf[Int]
x285
} else {
x6034
}
val x6042 = if (x6035) {
false
} else {
true
}
val x6043 = new OptionInt(x6041,x6042)
val x6047 = new Tuple2StringOptionInt(x5920,x6043)
x6047
}
val x6055 = x6049._2
val x6056 = x6055.defined
val x6060 = if (x6056) {
""
} else {
""
}
val x6054 = x6049._1
val x6061 = if (x6056) {
x6054
} else {
x6054
}
val x6062 = if (x6056) {
val x6057 = x6055.value
x6057
} else {
80
}
val x6063 = new Anon1863173035(x6060,x6061,x6060,x6060,x6060,x6062)
x6063
}
x6065
}
val x6073 = if (x6066) {
false
} else {
true
}
val x6074 = new OptionAnon1863173035(x6072,x6073)
val x6078 = new Tuple2StringOptionAnon1863173035(x5805,x6074)
x6078
}
val x6090 = x6084.res
val x6091 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x6080,x6090)
x6091
}
val x6099 = x6094._1
val x6101 = x6099._1
val x6102 = x6099._2
val x6103 = x6102.defined
val x6113 = if (x6103) {
x6101
} else {
x6101
}
val x6100 = x6094._2
val x6114 = if (x6103) {
val x6104 = x6102.value
val x6105 = x6104.hostName
x6105
} else {
val x6111 = x6100.hostName
x6111
}
val x6106 = x6100.path
val x6115 = if (x6103) {
x6106
} else {
x6106
}
val x6107 = x6100.queryString
val x6116 = if (x6103) {
x6107
} else {
x6107
}
val x6108 = x6100.fragment
val x6117 = if (x6103) {
x6108
} else {
x6108
}
val x6109 = x6100.port
val x6118 = if (x6103) {
x6109
} else {
x6109
}
val x6119 = new Anon1863173035(x6113,x6114,x6115,x6116,x6117,x6118)
x6119
}
x3306 = x6121
val x6122 = if (x6095) {
true
} else {
false
}
x3307 = x6122
val x6096 = if (x6089) {
0
} else {
val x6092 = x6084.next
x6092
}
val x6123 = if (x6095) {
x6096
} else {
x6096
}
x3308 = x6123
()
}
x6129
} else {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4379 = {x4055: (Int) => 
var x4057: Anon1863173035 = x161
var x4058: Boolean = true
var x4059: Int = x4055
val x4061 = x4055 >= x3322
val x4373 = if (x4061) {
x4057 = x161
x4058 = true
x4059 = x4055
()
} else {
val x4063 = x3305(x4055)
val x4064 = x4063 == '?'
val x4371 = if (x4064) {
var x4072: java.lang.String = ""
var x4073: Boolean = false
val x4065 = x4055 + 1
var x4074: Int = x4065
var x4076: Int = -1
var x4077: Boolean = true
var x4078: Int = x4065
val x4112 = while ({val x4079 = x4077
val x4080 = x4076
val x4081 = x4078
val x4082 = x4080 != x4081
val x4083 = x4079 && x4082
x4083}) {
val x4085 = x4078
x4076 = x4085
val x4087 = x4085 >= x3322
val x4110 = if (x4087) {
x4077 = false
()
} else {
val x4089 = x3305(x4085)
val x4090 = x4089 == '?'
val x4108 = if (x4090) {
val x4095 = x4072
val x4096 = x4073
val x4097 = x4074
val x4099 = x4095+x4089
x4072 = x4099
x4073 = false
val x4091 = x4085 + 1
x4074 = x4091
x4078 = x4091
()
} else {
x4077 = false
()
}
x4108
}
x4110
}
val x4113 = x4072
val x4114 = x4073
val x4115 = x4074
val x4365 = if (x4114) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
var x4131: java.lang.String = ""
var x4132: Boolean = false
var x4133: Int = x4115
var x4135: Int = -1
var x4136: Boolean = true
var x4137: Int = x4115
val x4175 = while ({val x4138 = x4136
val x4139 = x4135
val x4140 = x4137
val x4141 = x4139 != x4140
val x4142 = x4138 && x4141
x4142}) {
val x4144 = x4137
x4135 = x4144
val x4146 = x4144 >= x3322
val x4173 = if (x4146) {
x4136 = false
()
} else {
val x4148 = x3305(x4144)
val x4149 = x4148 > ' '
val x4150 = x4148 != '#'
val x4151 = x4149 && x4150
val x4152 = x4148 != ''
val x4153 = x4151 && x4152
val x4171 = if (x4153) {
val x4158 = x4131
val x4159 = x4132
val x4160 = x4133
val x4162 = x4158+x4148
x4131 = x4162
x4132 = false
val x4154 = x4144 + 1
x4133 = x4154
x4137 = x4154
()
} else {
x4136 = false
()
}
x4171
}
x4173
}
val x4176 = x4131
val x4177 = x4132
val x4178 = x4133
val x4363 = if (x4177) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
val x4180 = x4178 >= x3322
val x4361 = if (x4180) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
} else {
val x4182 = x3305(x4178)
val x4183 = x4182 == '#'
val x4359 = if (x4183) {
var x4201: java.lang.String = ""
var x4202: Boolean = false
val x4184 = x4178 + 1
var x4203: Int = x4184
var x4205: Int = -1
var x4206: Boolean = true
var x4207: Int = x4184
val x4241 = while ({val x4208 = x4206
val x4209 = x4205
val x4210 = x4207
val x4211 = x4209 != x4210
val x4212 = x4208 && x4211
x4212}) {
val x4214 = x4207
x4205 = x4214
val x4216 = x4214 >= x3322
val x4239 = if (x4216) {
x4206 = false
()
} else {
val x4218 = x3305(x4214)
val x4219 = x4218 == '#'
val x4237 = if (x4219) {
val x4224 = x4201
val x4225 = x4202
val x4226 = x4203
val x4228 = x4224+x4218
x4201 = x4228
x4202 = false
val x4220 = x4214 + 1
x4203 = x4220
x4207 = x4220
()
} else {
x4206 = false
()
}
x4237
}
x4239
}
val x4242 = x4201
val x4243 = x4202
val x4244 = x4203
val x4353 = if (x4243) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4184
()
} else {
var x4256: java.lang.String = ""
var x4257: Boolean = false
var x4258: Int = x4244
var x4260: Int = -1
var x4261: Boolean = true
var x4262: Int = x4244
val x4298 = while ({val x4263 = x4261
val x4264 = x4260
val x4265 = x4262
val x4266 = x4264 != x4265
val x4267 = x4263 && x4266
x4267}) {
val x4269 = x4262
x4260 = x4269
val x4271 = x4269 >= x3322
val x4296 = if (x4271) {
x4261 = false
()
} else {
val x4273 = x3305(x4269)
val x4274 = x4273 > ' '
val x4275 = x4273 != ''
val x4276 = x4274 && x4275
val x4294 = if (x4276) {
val x4281 = x4256
val x4282 = x4257
val x4283 = x4258
val x4285 = x4281+x4273
x4256 = x4285
x4257 = false
val x4277 = x4269 + 1
x4258 = x4277
x4262 = x4277
()
} else {
x4261 = false
()
}
x4294
}
x4296
}
val x4299 = x4256
val x4300 = x4257
val x4301 = x4258
val x4307 = if (x4300) {
true
} else {
false
}
val x4316 = if (x4307) {
false
} else {
false
}
val x4322 = if (x4316) {
true
} else {
false
}
val x4345 = if (x4322) {
x161
} else {
val x4321 = if (x4316) {
x935
} else {
val x4313 = if (x4307) {
x161
} else {
val x4306 = if (x4300) {
x161
} else {
val x4304 = new Anon1863173035("","","","",x4299,80)
x4304
}
x4306
}
val x4314 = if (x4307) {
false
} else {
true
}
val x4315 = new OptionAnon1863173035(x4313,x4314)
val x4319 = new Tuple2StringOptionAnon1863173035(x4176,x4315)
x4319
}
val x4327 = x4321._2
val x4328 = x4327.defined
val x4337 = if (x4328) {
val x4329 = x4327.value
val x4330 = x4329.schema
x4330
} else {
""
}
val x4338 = if (x4328) {
val x4329 = x4327.value
val x4331 = x4329.hostName
x4331
} else {
""
}
val x4339 = if (x4328) {
val x4329 = x4327.value
val x4332 = x4329.path
x4332
} else {
""
}
val x4326 = x4321._1
val x4340 = if (x4328) {
x4326
} else {
x4326
}
val x4341 = if (x4328) {
val x4329 = x4327.value
val x4333 = x4329.fragment
x4333
} else {
""
}
val x4342 = if (x4328) {
val x4329 = x4327.value
val x4334 = x4329.port
x4334
} else {
80
}
val x4343 = new Anon1863173035(x4337,x4338,x4339,x4340,x4341,x4342)
x4343
}
x4057 = x4345
val x4346 = if (x4322) {
true
} else {
false
}
x4058 = x4346
val x4323 = if (x4316) {
x4065
} else {
val x4308 = if (x4300) {
x4301
} else {
x4301
}
val x4317 = if (x4307) {
x4308
} else {
x4308
}
x4317
}
val x4347 = if (x4322) {
x4323
} else {
x4323
}
x4059 = x4347
()
}
x4353
} else {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
}
x4359
}
x4361
}
x4363
}
x4365
} else {
x4057 = x161
x4058 = true
x4059 = x4055
()
}
x4371
}
val x4374 = x4057
val x4375 = x4058
val x4376 = x4059
val x4377 = new ParseResultAnon1863173035(x4374,x4375,x4376)
x4377
}
val x4525 = {x4049: (Int) => 
var x4051: Anon1863173035 = x161
var x4052: Boolean = true
var x4053: Int = x4049
val x4380 = x4379(x4049)
val x4381 = x4380.empty
val x4519 = if (x4381) {
val x4382 = x4049 >= x3322
val x4511 = if (x4382) {
x4051 = x161
x4052 = true
x4053 = x4049
()
} else {
val x4384 = x3305(x4049)
val x4385 = x4384 == '#'
val x4509 = if (x4385) {
var x4393: java.lang.String = ""
var x4394: Boolean = false
val x4386 = x4049 + 1
var x4395: Int = x4386
var x4397: Int = -1
var x4398: Boolean = true
var x4399: Int = x4386
val x4433 = while ({val x4400 = x4398
val x4401 = x4397
val x4402 = x4399
val x4403 = x4401 != x4402
val x4404 = x4400 && x4403
x4404}) {
val x4406 = x4399
x4397 = x4406
val x4408 = x4406 >= x3322
val x4431 = if (x4408) {
x4398 = false
()
} else {
val x4410 = x3305(x4406)
val x4411 = x4410 == '#'
val x4429 = if (x4411) {
val x4416 = x4393
val x4417 = x4394
val x4418 = x4395
val x4420 = x4416+x4410
x4393 = x4420
x4394 = false
val x4412 = x4406 + 1
x4395 = x4412
x4399 = x4412
()
} else {
x4398 = false
()
}
x4429
}
x4431
}
val x4434 = x4393
val x4435 = x4394
val x4436 = x4395
val x4503 = if (x4435) {
x4051 = x161
x4052 = true
x4053 = x4386
()
} else {
var x4445: java.lang.String = ""
var x4446: Boolean = false
var x4447: Int = x4436
var x4449: Int = -1
var x4450: Boolean = true
var x4451: Int = x4436
val x4487 = while ({val x4452 = x4450
val x4453 = x4449
val x4454 = x4451
val x4455 = x4453 != x4454
val x4456 = x4452 && x4455
x4456}) {
val x4458 = x4451
x4449 = x4458
val x4460 = x4458 >= x3322
val x4485 = if (x4460) {
x4450 = false
()
} else {
val x4462 = x3305(x4458)
val x4463 = x4462 > ' '
val x4464 = x4462 != ''
val x4465 = x4463 && x4464
val x4483 = if (x4465) {
val x4470 = x4445
val x4471 = x4446
val x4472 = x4447
val x4474 = x4470+x4462
x4445 = x4474
x4446 = false
val x4466 = x4458 + 1
x4447 = x4466
x4451 = x4466
()
} else {
x4450 = false
()
}
x4483
}
x4485
}
val x4488 = x4445
val x4489 = x4446
val x4490 = x4447
val x4495 = if (x4489) {
x161
} else {
val x4493 = new Anon1863173035("","","","",x4488,80)
x4493
}
x4051 = x4495
val x4496 = if (x4489) {
true
} else {
false
}
x4052 = x4496
val x4497 = if (x4489) {
x4490
} else {
x4490
}
x4053 = x4497
()
}
x4503
} else {
x4051 = x161
x4052 = true
x4053 = x4049
()
}
x4509
}
x4511
} else {
val x4513 = x4380.res
x4051 = x4513
x4052 = x4381
val x4516 = x4380.next
x4053 = x4516
()
}
val x4520 = x4051
val x4521 = x4052
val x4522 = x4053
val x4523 = new ParseResultAnon1863173035(x4520,x4521,x4522)
x4523
}
val x5439 = {x3556: (Int) => 
var x3558: Anon1863173035 = x161
var x3559: Boolean = true
var x3560: Int = x3556
val x3562 = x3556 >= x3322
val x5433 = if (x3562) {
x3558 = x161
x3559 = true
x3560 = x3556
()
} else {
val x3564 = x3305(x3556)
val x3565 = x3564 == '/'
val x5431 = if (x3565) {
var x4527: java.lang.String = ""
var x4528: Boolean = false
val x3566 = x3556 + 1
var x4529: Int = x3566
var x4531: Int = -1
var x4532: Boolean = true
var x4533: Int = x3566
val x4573 = while ({val x4534 = x4532
val x4535 = x4531
val x4536 = x4533
val x4537 = x4535 != x4536
val x4538 = x4534 && x4537
x4538}) {
val x4540 = x4533
x4531 = x4540
val x4542 = x4540 >= x3322
val x4571 = if (x4542) {
x4532 = false
()
} else {
val x4544 = x3305(x4540)
val x4545 = x4544 > ' '
val x4546 = x4544 != '#'
val x4547 = x4545 && x4546
val x4548 = x4544 != '?'
val x4549 = x4547 && x4548
val x4550 = x4544 != ''
val x4551 = x4549 && x4550
val x4569 = if (x4551) {
val x4556 = x4527
val x4557 = x4528
val x4558 = x4529
val x4560 = x4556+x4544
x4527 = x4560
x4528 = false
val x4552 = x4540 + 1
x4529 = x4552
x4533 = x4552
()
} else {
x4532 = false
()
}
x4569
}
x4571
}
val x4574 = x4527
val x4575 = x4528
val x4576 = x4529
val x4948 = if (x4575) {
x3558 = x161
x3559 = true
x3560 = x3566
()
} else {
val x4579 = x4525(x4576)
val x4591 = x4579.empty
val x4600 = if (x4591) {
false
} else {
false
}
val x4606 = if (x4600) {
true
} else {
false
}
val x4946 = if (x4606) {
x3558 = x161
x3559 = true
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
x3560 = x4607
()
} else {
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
val x4609 = x4607 >= x3322
val x4944 = if (x4609) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4611 = x3305(x4607)
val x4612 = x4611 == 'H'
val x4942 = if (x4612) {
val x4613 = x4607 + 1
val x4650 = x4613 >= x3322
val x4936 = if (x4650) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4652 = x3305(x4613)
val x4653 = x4652 == 'T'
val x4934 = if (x4653) {
val x4654 = x4613 + 1
val x4662 = x4654 >= x3322
val x4928 = if (x4662) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4664 = x3305(x4654)
val x4665 = x4664 == 'T'
val x4926 = if (x4665) {
val x4666 = x4654 + 1
val x4675 = x4666 >= x3322
val x4920 = if (x4675) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4677 = x3305(x4666)
val x4678 = x4677 == 'P'
val x4918 = if (x4678) {
val x4679 = x4666 + 1
val x4688 = x4679 >= x3322
val x4912 = if (x4688) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4690 = x3305(x4679)
val x4691 = x4690 == '/'
val x4910 = if (x4691) {
var x4723: Int = 0
var x4724: Boolean = false
val x4692 = x4679 + 1
var x4725: Int = x4692
var x4727: Int = -1
var x4728: Boolean = true
var x4729: Int = x4692
val x4770 = while ({val x4730 = x4728
val x4731 = x4727
val x4732 = x4729
val x4733 = x4731 != x4732
val x4734 = x4730 && x4733
x4734}) {
val x4736 = x4729
x4727 = x4736
val x4738 = x4736 >= x3322
val x4768 = if (x4738) {
x4728 = false
()
} else {
val x4740 = x3305(x4736)
val x4741 = x4740 >= '0'
val x4742 = x4740 <= '9'
val x4743 = x4741 && x4742
val x4766 = if (x4743) {
val x4752 = x4723
val x4753 = x4724
val x4754 = x4725
val x4749 = x4740 - '0'
val x4750 = x4749.toInt
val x4756 = x4752 * 10
val x4757 = x4756 + x4750
x4723 = x4757
x4724 = false
val x4744 = x4736 + 1
x4725 = x4744
x4729 = x4744
()
} else {
x4728 = false
()
}
x4766
}
x4768
}
val x4771 = x4723
val x4772 = x4724
val x4773 = x4725
val x4904 = if (x4772) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4776 = x4773 >= x3322
val x4902 = if (x4776) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4778 = x3305(x4773)
val x4779 = x4778 == '.'
val x4900 = if (x4779) {
var x4795: Int = 0
var x4796: Boolean = false
val x4780 = x4773 + 1
var x4797: Int = x4780
var x4799: Int = -1
var x4800: Boolean = true
var x4801: Int = x4780
val x4842 = while ({val x4802 = x4800
val x4803 = x4799
val x4804 = x4801
val x4805 = x4803 != x4804
val x4806 = x4802 && x4805
x4806}) {
val x4808 = x4801
x4799 = x4808
val x4810 = x4808 >= x3322
val x4840 = if (x4810) {
x4800 = false
()
} else {
val x4812 = x3305(x4808)
val x4813 = x4812 >= '0'
val x4814 = x4812 <= '9'
val x4815 = x4813 && x4814
val x4838 = if (x4815) {
val x4824 = x4795
val x4825 = x4796
val x4826 = x4797
val x4821 = x4812 - '0'
val x4822 = x4821.toInt
val x4828 = x4824 * 10
val x4829 = x4828 + x4822
x4795 = x4829
x4796 = false
val x4816 = x4808 + 1
x4797 = x4816
x4801 = x4816
()
} else {
x4800 = false
()
}
x4838
}
x4840
}
val x4843 = x4795
val x4844 = x4796
val x4845 = x4797
val x4850 = if (x4844) {
true
} else {
false
}
val x4859 = if (x4850) {
false
} else {
false
}
val x4864 = if (x4859) {
true
} else {
false
}
val x4888 = if (x4864) {
x161
} else {
val x4863 = if (x4859) {
x935
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
x4605
}
val x4869 = x4863._2
val x4870 = x4869.defined
val x4880 = if (x4870) {
val x4871 = x4869.value
val x4873 = x4871.schema
x4873
} else {
""
}
val x4881 = if (x4870) {
val x4871 = x4869.value
val x4874 = x4871.hostName
x4874
} else {
""
}
val x4868 = x4863._1
val x4872 = "/"+x4868
val x4882 = if (x4870) {
x4872
} else {
x4872
}
val x4883 = if (x4870) {
val x4871 = x4869.value
val x4875 = x4871.queryString
x4875
} else {
""
}
val x4884 = if (x4870) {
val x4871 = x4869.value
val x4876 = x4871.fragment
x4876
} else {
""
}
val x4885 = if (x4870) {
val x4871 = x4869.value
val x4877 = x4871.port
x4877
} else {
80
}
val x4886 = new Anon1863173035(x4880,x4881,x4882,x4883,x4884,x4885)
x4886
}
x3558 = x4888
val x4889 = if (x4864) {
true
} else {
false
}
x3559 = x4889
val x4865 = if (x4859) {
x3566
} else {
val x4851 = if (x4844) {
x4692
} else {
x4845
}
val x4860 = if (x4850) {
x4851
} else {
x4851
}
x4860
}
val x4890 = if (x4864) {
x4865
} else {
x4865
}
x3560 = x4890
()
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
}
x4900
}
x4902
}
x4904
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4910
}
x4912
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4918
}
x4920
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4926
}
x4928
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4934
}
x4936
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4942
}
x4944
}
x4946
}
x4948
} else {
x3558 = x161
x3559 = true
x3560 = x3556
()
}
x5431
}
val x5434 = x3558
val x5435 = x3559
val x5436 = x3560
val x5437 = new ParseResultAnon1863173035(x5434,x5435,x5436)
x5437
}
val x5768 = {x3550: (Int) => 
var x3552: Anon1863173035 = x161
var x3553: Boolean = true
var x3554: Int = x3550
val x5440 = x5439(x3550)
val x5441 = x5440.empty
val x5762 = if (x5441) {
val x5442 = x3550 >= x3322
val x5754 = if (x5442) {
x3552 = x161
x3553 = true
x3554 = x3550
()
} else {
val x5444 = x3305(x3550)
val x5445 = x5444 == '?'
val x5752 = if (x5445) {
var x5453: java.lang.String = ""
var x5454: Boolean = false
val x5446 = x3550 + 1
var x5455: Int = x5446
var x5457: Int = -1
var x5458: Boolean = true
var x5459: Int = x5446
val x5493 = while ({val x5460 = x5458
val x5461 = x5457
val x5462 = x5459
val x5463 = x5461 != x5462
val x5464 = x5460 && x5463
x5464}) {
val x5466 = x5459
x5457 = x5466
val x5468 = x5466 >= x3322
val x5491 = if (x5468) {
x5458 = false
()
} else {
val x5470 = x3305(x5466)
val x5471 = x5470 == '?'
val x5489 = if (x5471) {
val x5476 = x5453
val x5477 = x5454
val x5478 = x5455
val x5480 = x5476+x5470
x5453 = x5480
x5454 = false
val x5472 = x5466 + 1
x5455 = x5472
x5459 = x5472
()
} else {
x5458 = false
()
}
x5489
}
x5491
}
val x5494 = x5453
val x5495 = x5454
val x5496 = x5455
val x5746 = if (x5495) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
var x5512: java.lang.String = ""
var x5513: Boolean = false
var x5514: Int = x5496
var x5516: Int = -1
var x5517: Boolean = true
var x5518: Int = x5496
val x5556 = while ({val x5519 = x5517
val x5520 = x5516
val x5521 = x5518
val x5522 = x5520 != x5521
val x5523 = x5519 && x5522
x5523}) {
val x5525 = x5518
x5516 = x5525
val x5527 = x5525 >= x3322
val x5554 = if (x5527) {
x5517 = false
()
} else {
val x5529 = x3305(x5525)
val x5530 = x5529 > ' '
val x5531 = x5529 != '#'
val x5532 = x5530 && x5531
val x5533 = x5529 != ''
val x5534 = x5532 && x5533
val x5552 = if (x5534) {
val x5539 = x5512
val x5540 = x5513
val x5541 = x5514
val x5543 = x5539+x5529
x5512 = x5543
x5513 = false
val x5535 = x5525 + 1
x5514 = x5535
x5518 = x5535
()
} else {
x5517 = false
()
}
x5552
}
x5554
}
val x5557 = x5512
val x5558 = x5513
val x5559 = x5514
val x5744 = if (x5558) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
val x5561 = x5559 >= x3322
val x5742 = if (x5561) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
} else {
val x5563 = x3305(x5559)
val x5564 = x5563 == '#'
val x5740 = if (x5564) {
var x5582: java.lang.String = ""
var x5583: Boolean = false
val x5565 = x5559 + 1
var x5584: Int = x5565
var x5586: Int = -1
var x5587: Boolean = true
var x5588: Int = x5565
val x5622 = while ({val x5589 = x5587
val x5590 = x5586
val x5591 = x5588
val x5592 = x5590 != x5591
val x5593 = x5589 && x5592
x5593}) {
val x5595 = x5588
x5586 = x5595
val x5597 = x5595 >= x3322
val x5620 = if (x5597) {
x5587 = false
()
} else {
val x5599 = x3305(x5595)
val x5600 = x5599 == '#'
val x5618 = if (x5600) {
val x5605 = x5582
val x5606 = x5583
val x5607 = x5584
val x5609 = x5605+x5599
x5582 = x5609
x5583 = false
val x5601 = x5595 + 1
x5584 = x5601
x5588 = x5601
()
} else {
x5587 = false
()
}
x5618
}
x5620
}
val x5623 = x5582
val x5624 = x5583
val x5625 = x5584
val x5734 = if (x5624) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5565
()
} else {
var x5637: java.lang.String = ""
var x5638: Boolean = false
var x5639: Int = x5625
var x5641: Int = -1
var x5642: Boolean = true
var x5643: Int = x5625
val x5679 = while ({val x5644 = x5642
val x5645 = x5641
val x5646 = x5643
val x5647 = x5645 != x5646
val x5648 = x5644 && x5647
x5648}) {
val x5650 = x5643
x5641 = x5650
val x5652 = x5650 >= x3322
val x5677 = if (x5652) {
x5642 = false
()
} else {
val x5654 = x3305(x5650)
val x5655 = x5654 > ' '
val x5656 = x5654 != ''
val x5657 = x5655 && x5656
val x5675 = if (x5657) {
val x5662 = x5637
val x5663 = x5638
val x5664 = x5639
val x5666 = x5662+x5654
x5637 = x5666
x5638 = false
val x5658 = x5650 + 1
x5639 = x5658
x5643 = x5658
()
} else {
x5642 = false
()
}
x5675
}
x5677
}
val x5680 = x5637
val x5681 = x5638
val x5682 = x5639
val x5688 = if (x5681) {
true
} else {
false
}
val x5697 = if (x5688) {
false
} else {
false
}
val x5703 = if (x5697) {
true
} else {
false
}
val x5726 = if (x5703) {
x161
} else {
val x5702 = if (x5697) {
x935
} else {
val x5694 = if (x5688) {
x161
} else {
val x5687 = if (x5681) {
x161
} else {
val x5685 = new Anon1863173035("","","","",x5680,80)
x5685
}
x5687
}
val x5695 = if (x5688) {
false
} else {
true
}
val x5696 = new OptionAnon1863173035(x5694,x5695)
val x5700 = new Tuple2StringOptionAnon1863173035(x5557,x5696)
x5700
}
val x5708 = x5702._2
val x5709 = x5708.defined
val x5718 = if (x5709) {
val x5710 = x5708.value
val x5711 = x5710.schema
x5711
} else {
""
}
val x5719 = if (x5709) {
val x5710 = x5708.value
val x5712 = x5710.hostName
x5712
} else {
""
}
val x5720 = if (x5709) {
val x5710 = x5708.value
val x5713 = x5710.path
x5713
} else {
""
}
val x5707 = x5702._1
val x5721 = if (x5709) {
x5707
} else {
x5707
}
val x5722 = if (x5709) {
val x5710 = x5708.value
val x5714 = x5710.fragment
x5714
} else {
""
}
val x5723 = if (x5709) {
val x5710 = x5708.value
val x5715 = x5710.port
x5715
} else {
80
}
val x5724 = new Anon1863173035(x5718,x5719,x5720,x5721,x5722,x5723)
x5724
}
x3552 = x5726
val x5727 = if (x5703) {
true
} else {
false
}
x3553 = x5727
val x5704 = if (x5697) {
x5446
} else {
val x5689 = if (x5681) {
x5682
} else {
x5682
}
val x5698 = if (x5688) {
x5689
} else {
x5689
}
x5698
}
val x5728 = if (x5703) {
x5704
} else {
x5704
}
x3554 = x5728
()
}
x5734
} else {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
}
x5740
}
x5742
}
x5744
}
x5746
} else {
x3552 = x161
x3553 = true
x3554 = x3550
()
}
x5752
}
x5754
} else {
val x5756 = x5440.res
x3552 = x5756
x3553 = x5441
val x5759 = x5440.next
x3554 = x5759
()
}
val x5763 = x3552
val x5764 = x3553
val x5765 = x3554
val x5766 = new ParseResultAnon1863173035(x5763,x5764,x5765)
x5766
}
val x5944 = x5768(x5922)
val x5945 = x5944.empty
val x5951 = if (x5945) {
true
} else {
false
}
val x5977 = if (x5951) {
x161
} else {
val x5950 = if (x5945) {
val x5792 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x5792
} else {
val x5805 = x5769.res
val x5920 = if (x5912) {
x1
} else {
val x5911 = if (x5906) {
x189
} else {
val x5909 = new Tuple2CharString(x5774,x5905)
x5909
}
val x5916 = x5911._1
val x5917 = x5911._2
val x5918 = x5916+x5917
x5918
}
val x5938 = new Anon1863173035("",x5920,"","","",80)
val x5940 = new OptionAnon1863173035(x5938,true)
val x5942 = new Tuple2StringOptionAnon1863173035(x5805,x5940)
val x5946 = x5944.res
val x5947 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5942,x5946)
x5947
}
val x5955 = x5950._1
val x5957 = x5955._1
val x5958 = x5955._2
val x5959 = x5958.defined
val x5969 = if (x5959) {
x5957
} else {
x5957
}
val x5956 = x5950._2
val x5970 = if (x5959) {
val x5960 = x5958.value
val x5961 = x5960.hostName
x5961
} else {
val x5967 = x5956.hostName
x5967
}
val x5962 = x5956.path
val x5971 = if (x5959) {
x5962
} else {
x5962
}
val x5963 = x5956.queryString
val x5972 = if (x5959) {
x5963
} else {
x5963
}
val x5964 = x5956.fragment
val x5973 = if (x5959) {
x5964
} else {
x5964
}
val x5965 = x5956.port
val x5974 = if (x5959) {
x5965
} else {
x5965
}
val x5975 = new Anon1863173035(x5969,x5970,x5971,x5972,x5973,x5974)
x5975
}
x3306 = x5977
val x5978 = if (x5951) {
true
} else {
false
}
x3307 = x5978
val x5952 = if (x5945) {
0
} else {
val x5948 = x5944.next
x5948
}
val x5979 = if (x5951) {
x5952
} else {
x5952
}
x3308 = x5979
()
}
x6135
}
x6137
}
x6139
} else {
val x935 = null.asInstanceOf[Tuple2StringOptionAnon1863173035]
val x4379 = {x4055: (Int) => 
var x4057: Anon1863173035 = x161
var x4058: Boolean = true
var x4059: Int = x4055
val x4061 = x4055 >= x3322
val x4373 = if (x4061) {
x4057 = x161
x4058 = true
x4059 = x4055
()
} else {
val x4063 = x3305(x4055)
val x4064 = x4063 == '?'
val x4371 = if (x4064) {
var x4072: java.lang.String = ""
var x4073: Boolean = false
val x4065 = x4055 + 1
var x4074: Int = x4065
var x4076: Int = -1
var x4077: Boolean = true
var x4078: Int = x4065
val x4112 = while ({val x4079 = x4077
val x4080 = x4076
val x4081 = x4078
val x4082 = x4080 != x4081
val x4083 = x4079 && x4082
x4083}) {
val x4085 = x4078
x4076 = x4085
val x4087 = x4085 >= x3322
val x4110 = if (x4087) {
x4077 = false
()
} else {
val x4089 = x3305(x4085)
val x4090 = x4089 == '?'
val x4108 = if (x4090) {
val x4095 = x4072
val x4096 = x4073
val x4097 = x4074
val x4099 = x4095+x4089
x4072 = x4099
x4073 = false
val x4091 = x4085 + 1
x4074 = x4091
x4078 = x4091
()
} else {
x4077 = false
()
}
x4108
}
x4110
}
val x4113 = x4072
val x4114 = x4073
val x4115 = x4074
val x4365 = if (x4114) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
var x4131: java.lang.String = ""
var x4132: Boolean = false
var x4133: Int = x4115
var x4135: Int = -1
var x4136: Boolean = true
var x4137: Int = x4115
val x4175 = while ({val x4138 = x4136
val x4139 = x4135
val x4140 = x4137
val x4141 = x4139 != x4140
val x4142 = x4138 && x4141
x4142}) {
val x4144 = x4137
x4135 = x4144
val x4146 = x4144 >= x3322
val x4173 = if (x4146) {
x4136 = false
()
} else {
val x4148 = x3305(x4144)
val x4149 = x4148 > ' '
val x4150 = x4148 != '#'
val x4151 = x4149 && x4150
val x4152 = x4148 != ''
val x4153 = x4151 && x4152
val x4171 = if (x4153) {
val x4158 = x4131
val x4159 = x4132
val x4160 = x4133
val x4162 = x4158+x4148
x4131 = x4162
x4132 = false
val x4154 = x4144 + 1
x4133 = x4154
x4137 = x4154
()
} else {
x4136 = false
()
}
x4171
}
x4173
}
val x4176 = x4131
val x4177 = x4132
val x4178 = x4133
val x4363 = if (x4177) {
x4057 = x161
x4058 = true
x4059 = x4065
()
} else {
val x4180 = x4178 >= x3322
val x4361 = if (x4180) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
} else {
val x4182 = x3305(x4178)
val x4183 = x4182 == '#'
val x4359 = if (x4183) {
var x4201: java.lang.String = ""
var x4202: Boolean = false
val x4184 = x4178 + 1
var x4203: Int = x4184
var x4205: Int = -1
var x4206: Boolean = true
var x4207: Int = x4184
val x4241 = while ({val x4208 = x4206
val x4209 = x4205
val x4210 = x4207
val x4211 = x4209 != x4210
val x4212 = x4208 && x4211
x4212}) {
val x4214 = x4207
x4205 = x4214
val x4216 = x4214 >= x3322
val x4239 = if (x4216) {
x4206 = false
()
} else {
val x4218 = x3305(x4214)
val x4219 = x4218 == '#'
val x4237 = if (x4219) {
val x4224 = x4201
val x4225 = x4202
val x4226 = x4203
val x4228 = x4224+x4218
x4201 = x4228
x4202 = false
val x4220 = x4214 + 1
x4203 = x4220
x4207 = x4220
()
} else {
x4206 = false
()
}
x4237
}
x4239
}
val x4242 = x4201
val x4243 = x4202
val x4244 = x4203
val x4353 = if (x4243) {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4184
()
} else {
var x4256: java.lang.String = ""
var x4257: Boolean = false
var x4258: Int = x4244
var x4260: Int = -1
var x4261: Boolean = true
var x4262: Int = x4244
val x4298 = while ({val x4263 = x4261
val x4264 = x4260
val x4265 = x4262
val x4266 = x4264 != x4265
val x4267 = x4263 && x4266
x4267}) {
val x4269 = x4262
x4260 = x4269
val x4271 = x4269 >= x3322
val x4296 = if (x4271) {
x4261 = false
()
} else {
val x4273 = x3305(x4269)
val x4274 = x4273 > ' '
val x4275 = x4273 != ''
val x4276 = x4274 && x4275
val x4294 = if (x4276) {
val x4281 = x4256
val x4282 = x4257
val x4283 = x4258
val x4285 = x4281+x4273
x4256 = x4285
x4257 = false
val x4277 = x4269 + 1
x4258 = x4277
x4262 = x4277
()
} else {
x4261 = false
()
}
x4294
}
x4296
}
val x4299 = x4256
val x4300 = x4257
val x4301 = x4258
val x4307 = if (x4300) {
true
} else {
false
}
val x4316 = if (x4307) {
false
} else {
false
}
val x4322 = if (x4316) {
true
} else {
false
}
val x4345 = if (x4322) {
x161
} else {
val x4321 = if (x4316) {
x935
} else {
val x4313 = if (x4307) {
x161
} else {
val x4306 = if (x4300) {
x161
} else {
val x4304 = new Anon1863173035("","","","",x4299,80)
x4304
}
x4306
}
val x4314 = if (x4307) {
false
} else {
true
}
val x4315 = new OptionAnon1863173035(x4313,x4314)
val x4319 = new Tuple2StringOptionAnon1863173035(x4176,x4315)
x4319
}
val x4327 = x4321._2
val x4328 = x4327.defined
val x4337 = if (x4328) {
val x4329 = x4327.value
val x4330 = x4329.schema
x4330
} else {
""
}
val x4338 = if (x4328) {
val x4329 = x4327.value
val x4331 = x4329.hostName
x4331
} else {
""
}
val x4339 = if (x4328) {
val x4329 = x4327.value
val x4332 = x4329.path
x4332
} else {
""
}
val x4326 = x4321._1
val x4340 = if (x4328) {
x4326
} else {
x4326
}
val x4341 = if (x4328) {
val x4329 = x4327.value
val x4333 = x4329.fragment
x4333
} else {
""
}
val x4342 = if (x4328) {
val x4329 = x4327.value
val x4334 = x4329.port
x4334
} else {
80
}
val x4343 = new Anon1863173035(x4337,x4338,x4339,x4340,x4341,x4342)
x4343
}
x4057 = x4345
val x4346 = if (x4322) {
true
} else {
false
}
x4058 = x4346
val x4323 = if (x4316) {
x4065
} else {
val x4308 = if (x4300) {
x4301
} else {
x4301
}
val x4317 = if (x4307) {
x4308
} else {
x4308
}
x4317
}
val x4347 = if (x4322) {
x4323
} else {
x4323
}
x4059 = x4347
()
}
x4353
} else {
val x4194 = new Anon1863173035("","","",x4176,"",80)
x4057 = x4194
x4058 = false
x4059 = x4178
()
}
x4359
}
x4361
}
x4363
}
x4365
} else {
x4057 = x161
x4058 = true
x4059 = x4055
()
}
x4371
}
val x4374 = x4057
val x4375 = x4058
val x4376 = x4059
val x4377 = new ParseResultAnon1863173035(x4374,x4375,x4376)
x4377
}
val x4525 = {x4049: (Int) => 
var x4051: Anon1863173035 = x161
var x4052: Boolean = true
var x4053: Int = x4049
val x4380 = x4379(x4049)
val x4381 = x4380.empty
val x4519 = if (x4381) {
val x4382 = x4049 >= x3322
val x4511 = if (x4382) {
x4051 = x161
x4052 = true
x4053 = x4049
()
} else {
val x4384 = x3305(x4049)
val x4385 = x4384 == '#'
val x4509 = if (x4385) {
var x4393: java.lang.String = ""
var x4394: Boolean = false
val x4386 = x4049 + 1
var x4395: Int = x4386
var x4397: Int = -1
var x4398: Boolean = true
var x4399: Int = x4386
val x4433 = while ({val x4400 = x4398
val x4401 = x4397
val x4402 = x4399
val x4403 = x4401 != x4402
val x4404 = x4400 && x4403
x4404}) {
val x4406 = x4399
x4397 = x4406
val x4408 = x4406 >= x3322
val x4431 = if (x4408) {
x4398 = false
()
} else {
val x4410 = x3305(x4406)
val x4411 = x4410 == '#'
val x4429 = if (x4411) {
val x4416 = x4393
val x4417 = x4394
val x4418 = x4395
val x4420 = x4416+x4410
x4393 = x4420
x4394 = false
val x4412 = x4406 + 1
x4395 = x4412
x4399 = x4412
()
} else {
x4398 = false
()
}
x4429
}
x4431
}
val x4434 = x4393
val x4435 = x4394
val x4436 = x4395
val x4503 = if (x4435) {
x4051 = x161
x4052 = true
x4053 = x4386
()
} else {
var x4445: java.lang.String = ""
var x4446: Boolean = false
var x4447: Int = x4436
var x4449: Int = -1
var x4450: Boolean = true
var x4451: Int = x4436
val x4487 = while ({val x4452 = x4450
val x4453 = x4449
val x4454 = x4451
val x4455 = x4453 != x4454
val x4456 = x4452 && x4455
x4456}) {
val x4458 = x4451
x4449 = x4458
val x4460 = x4458 >= x3322
val x4485 = if (x4460) {
x4450 = false
()
} else {
val x4462 = x3305(x4458)
val x4463 = x4462 > ' '
val x4464 = x4462 != ''
val x4465 = x4463 && x4464
val x4483 = if (x4465) {
val x4470 = x4445
val x4471 = x4446
val x4472 = x4447
val x4474 = x4470+x4462
x4445 = x4474
x4446 = false
val x4466 = x4458 + 1
x4447 = x4466
x4451 = x4466
()
} else {
x4450 = false
()
}
x4483
}
x4485
}
val x4488 = x4445
val x4489 = x4446
val x4490 = x4447
val x4495 = if (x4489) {
x161
} else {
val x4493 = new Anon1863173035("","","","",x4488,80)
x4493
}
x4051 = x4495
val x4496 = if (x4489) {
true
} else {
false
}
x4052 = x4496
val x4497 = if (x4489) {
x4490
} else {
x4490
}
x4053 = x4497
()
}
x4503
} else {
x4051 = x161
x4052 = true
x4053 = x4049
()
}
x4509
}
x4511
} else {
val x4513 = x4380.res
x4051 = x4513
x4052 = x4381
val x4516 = x4380.next
x4053 = x4516
()
}
val x4520 = x4051
val x4521 = x4052
val x4522 = x4053
val x4523 = new ParseResultAnon1863173035(x4520,x4521,x4522)
x4523
}
val x5439 = {x3556: (Int) => 
var x3558: Anon1863173035 = x161
var x3559: Boolean = true
var x3560: Int = x3556
val x3562 = x3556 >= x3322
val x5433 = if (x3562) {
x3558 = x161
x3559 = true
x3560 = x3556
()
} else {
val x3564 = x3305(x3556)
val x3565 = x3564 == '/'
val x5431 = if (x3565) {
var x4527: java.lang.String = ""
var x4528: Boolean = false
val x3566 = x3556 + 1
var x4529: Int = x3566
var x4531: Int = -1
var x4532: Boolean = true
var x4533: Int = x3566
val x4573 = while ({val x4534 = x4532
val x4535 = x4531
val x4536 = x4533
val x4537 = x4535 != x4536
val x4538 = x4534 && x4537
x4538}) {
val x4540 = x4533
x4531 = x4540
val x4542 = x4540 >= x3322
val x4571 = if (x4542) {
x4532 = false
()
} else {
val x4544 = x3305(x4540)
val x4545 = x4544 > ' '
val x4546 = x4544 != '#'
val x4547 = x4545 && x4546
val x4548 = x4544 != '?'
val x4549 = x4547 && x4548
val x4550 = x4544 != ''
val x4551 = x4549 && x4550
val x4569 = if (x4551) {
val x4556 = x4527
val x4557 = x4528
val x4558 = x4529
val x4560 = x4556+x4544
x4527 = x4560
x4528 = false
val x4552 = x4540 + 1
x4529 = x4552
x4533 = x4552
()
} else {
x4532 = false
()
}
x4569
}
x4571
}
val x4574 = x4527
val x4575 = x4528
val x4576 = x4529
val x4948 = if (x4575) {
x3558 = x161
x3559 = true
x3560 = x3566
()
} else {
val x4579 = x4525(x4576)
val x4591 = x4579.empty
val x4600 = if (x4591) {
false
} else {
false
}
val x4606 = if (x4600) {
true
} else {
false
}
val x4946 = if (x4606) {
x3558 = x161
x3559 = true
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
x3560 = x4607
()
} else {
val x4607 = if (x4600) {
x3566
} else {
val x4592 = x4579.next
val x4601 = if (x4591) {
x4592
} else {
x4592
}
x4601
}
val x4609 = x4607 >= x3322
val x4944 = if (x4609) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4611 = x3305(x4607)
val x4612 = x4611 == 'H'
val x4942 = if (x4612) {
val x4613 = x4607 + 1
val x4650 = x4613 >= x3322
val x4936 = if (x4650) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4652 = x3305(x4613)
val x4653 = x4652 == 'T'
val x4934 = if (x4653) {
val x4654 = x4613 + 1
val x4662 = x4654 >= x3322
val x4928 = if (x4662) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4664 = x3305(x4654)
val x4665 = x4664 == 'T'
val x4926 = if (x4665) {
val x4666 = x4654 + 1
val x4675 = x4666 >= x3322
val x4920 = if (x4675) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4677 = x3305(x4666)
val x4678 = x4677 == 'P'
val x4918 = if (x4678) {
val x4679 = x4666 + 1
val x4688 = x4679 >= x3322
val x4912 = if (x4688) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
} else {
val x4690 = x3305(x4679)
val x4691 = x4690 == '/'
val x4910 = if (x4691) {
var x4723: Int = 0
var x4724: Boolean = false
val x4692 = x4679 + 1
var x4725: Int = x4692
var x4727: Int = -1
var x4728: Boolean = true
var x4729: Int = x4692
val x4770 = while ({val x4730 = x4728
val x4731 = x4727
val x4732 = x4729
val x4733 = x4731 != x4732
val x4734 = x4730 && x4733
x4734}) {
val x4736 = x4729
x4727 = x4736
val x4738 = x4736 >= x3322
val x4768 = if (x4738) {
x4728 = false
()
} else {
val x4740 = x3305(x4736)
val x4741 = x4740 >= '0'
val x4742 = x4740 <= '9'
val x4743 = x4741 && x4742
val x4766 = if (x4743) {
val x4752 = x4723
val x4753 = x4724
val x4754 = x4725
val x4749 = x4740 - '0'
val x4750 = x4749.toInt
val x4756 = x4752 * 10
val x4757 = x4756 + x4750
x4723 = x4757
x4724 = false
val x4744 = x4736 + 1
x4725 = x4744
x4729 = x4744
()
} else {
x4728 = false
()
}
x4766
}
x4768
}
val x4771 = x4723
val x4772 = x4724
val x4773 = x4725
val x4904 = if (x4772) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4776 = x4773 >= x3322
val x4902 = if (x4776) {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
} else {
val x4778 = x3305(x4773)
val x4779 = x4778 == '.'
val x4900 = if (x4779) {
var x4795: Int = 0
var x4796: Boolean = false
val x4780 = x4773 + 1
var x4797: Int = x4780
var x4799: Int = -1
var x4800: Boolean = true
var x4801: Int = x4780
val x4842 = while ({val x4802 = x4800
val x4803 = x4799
val x4804 = x4801
val x4805 = x4803 != x4804
val x4806 = x4802 && x4805
x4806}) {
val x4808 = x4801
x4799 = x4808
val x4810 = x4808 >= x3322
val x4840 = if (x4810) {
x4800 = false
()
} else {
val x4812 = x3305(x4808)
val x4813 = x4812 >= '0'
val x4814 = x4812 <= '9'
val x4815 = x4813 && x4814
val x4838 = if (x4815) {
val x4824 = x4795
val x4825 = x4796
val x4826 = x4797
val x4821 = x4812 - '0'
val x4822 = x4821.toInt
val x4828 = x4824 * 10
val x4829 = x4828 + x4822
x4795 = x4829
x4796 = false
val x4816 = x4808 + 1
x4797 = x4816
x4801 = x4816
()
} else {
x4800 = false
()
}
x4838
}
x4840
}
val x4843 = x4795
val x4844 = x4796
val x4845 = x4797
val x4850 = if (x4844) {
true
} else {
false
}
val x4859 = if (x4850) {
false
} else {
false
}
val x4864 = if (x4859) {
true
} else {
false
}
val x4888 = if (x4864) {
x161
} else {
val x4863 = if (x4859) {
x935
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
x4605
}
val x4869 = x4863._2
val x4870 = x4869.defined
val x4880 = if (x4870) {
val x4871 = x4869.value
val x4873 = x4871.schema
x4873
} else {
""
}
val x4881 = if (x4870) {
val x4871 = x4869.value
val x4874 = x4871.hostName
x4874
} else {
""
}
val x4868 = x4863._1
val x4872 = "/"+x4868
val x4882 = if (x4870) {
x4872
} else {
x4872
}
val x4883 = if (x4870) {
val x4871 = x4869.value
val x4875 = x4871.queryString
x4875
} else {
""
}
val x4884 = if (x4870) {
val x4871 = x4869.value
val x4876 = x4871.fragment
x4876
} else {
""
}
val x4885 = if (x4870) {
val x4871 = x4869.value
val x4877 = x4871.port
x4877
} else {
80
}
val x4886 = new Anon1863173035(x4880,x4881,x4882,x4883,x4884,x4885)
x4886
}
x3558 = x4888
val x4889 = if (x4864) {
true
} else {
false
}
x3559 = x4889
val x4865 = if (x4859) {
x3566
} else {
val x4851 = if (x4844) {
x4692
} else {
x4845
}
val x4860 = if (x4850) {
x4851
} else {
x4851
}
x4860
}
val x4890 = if (x4864) {
x4865
} else {
x4865
}
x3560 = x4890
()
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4692
()
}
x4900
}
x4902
}
x4904
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4910
}
x4912
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4918
}
x4920
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4926
}
x4928
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4934
}
x4936
} else {
val x4605 = if (x4600) {
x935
} else {
val x4597 = if (x4591) {
x161
} else {
val x4594 = x4579.res
x4594
}
val x4598 = if (x4591) {
false
} else {
true
}
val x4599 = new OptionAnon1863173035(x4597,x4598)
val x4603 = new Tuple2StringOptionAnon1863173035(x4574,x4599)
x4603
}
val x4627 = x4605._2
val x4628 = x4627.defined
val x4638 = if (x4628) {
val x4629 = x4627.value
val x4631 = x4629.schema
x4631
} else {
""
}
val x4639 = if (x4628) {
val x4629 = x4627.value
val x4632 = x4629.hostName
x4632
} else {
""
}
val x4626 = x4605._1
val x4630 = "/"+x4626
val x4640 = if (x4628) {
x4630
} else {
x4630
}
val x4641 = if (x4628) {
val x4629 = x4627.value
val x4633 = x4629.queryString
x4633
} else {
""
}
val x4642 = if (x4628) {
val x4629 = x4627.value
val x4634 = x4629.fragment
x4634
} else {
""
}
val x4643 = if (x4628) {
val x4629 = x4627.value
val x4635 = x4629.port
x4635
} else {
80
}
val x4644 = new Anon1863173035(x4638,x4639,x4640,x4641,x4642,x4643)
x3558 = x4644
x3559 = false
x3560 = x4607
()
}
x4942
}
x4944
}
x4946
}
x4948
} else {
x3558 = x161
x3559 = true
x3560 = x3556
()
}
x5431
}
val x5434 = x3558
val x5435 = x3559
val x5436 = x3560
val x5437 = new ParseResultAnon1863173035(x5434,x5435,x5436)
x5437
}
val x5768 = {x3550: (Int) => 
var x3552: Anon1863173035 = x161
var x3553: Boolean = true
var x3554: Int = x3550
val x5440 = x5439(x3550)
val x5441 = x5440.empty
val x5762 = if (x5441) {
val x5442 = x3550 >= x3322
val x5754 = if (x5442) {
x3552 = x161
x3553 = true
x3554 = x3550
()
} else {
val x5444 = x3305(x3550)
val x5445 = x5444 == '?'
val x5752 = if (x5445) {
var x5453: java.lang.String = ""
var x5454: Boolean = false
val x5446 = x3550 + 1
var x5455: Int = x5446
var x5457: Int = -1
var x5458: Boolean = true
var x5459: Int = x5446
val x5493 = while ({val x5460 = x5458
val x5461 = x5457
val x5462 = x5459
val x5463 = x5461 != x5462
val x5464 = x5460 && x5463
x5464}) {
val x5466 = x5459
x5457 = x5466
val x5468 = x5466 >= x3322
val x5491 = if (x5468) {
x5458 = false
()
} else {
val x5470 = x3305(x5466)
val x5471 = x5470 == '?'
val x5489 = if (x5471) {
val x5476 = x5453
val x5477 = x5454
val x5478 = x5455
val x5480 = x5476+x5470
x5453 = x5480
x5454 = false
val x5472 = x5466 + 1
x5455 = x5472
x5459 = x5472
()
} else {
x5458 = false
()
}
x5489
}
x5491
}
val x5494 = x5453
val x5495 = x5454
val x5496 = x5455
val x5746 = if (x5495) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
var x5512: java.lang.String = ""
var x5513: Boolean = false
var x5514: Int = x5496
var x5516: Int = -1
var x5517: Boolean = true
var x5518: Int = x5496
val x5556 = while ({val x5519 = x5517
val x5520 = x5516
val x5521 = x5518
val x5522 = x5520 != x5521
val x5523 = x5519 && x5522
x5523}) {
val x5525 = x5518
x5516 = x5525
val x5527 = x5525 >= x3322
val x5554 = if (x5527) {
x5517 = false
()
} else {
val x5529 = x3305(x5525)
val x5530 = x5529 > ' '
val x5531 = x5529 != '#'
val x5532 = x5530 && x5531
val x5533 = x5529 != ''
val x5534 = x5532 && x5533
val x5552 = if (x5534) {
val x5539 = x5512
val x5540 = x5513
val x5541 = x5514
val x5543 = x5539+x5529
x5512 = x5543
x5513 = false
val x5535 = x5525 + 1
x5514 = x5535
x5518 = x5535
()
} else {
x5517 = false
()
}
x5552
}
x5554
}
val x5557 = x5512
val x5558 = x5513
val x5559 = x5514
val x5744 = if (x5558) {
x3552 = x161
x3553 = true
x3554 = x5446
()
} else {
val x5561 = x5559 >= x3322
val x5742 = if (x5561) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
} else {
val x5563 = x3305(x5559)
val x5564 = x5563 == '#'
val x5740 = if (x5564) {
var x5582: java.lang.String = ""
var x5583: Boolean = false
val x5565 = x5559 + 1
var x5584: Int = x5565
var x5586: Int = -1
var x5587: Boolean = true
var x5588: Int = x5565
val x5622 = while ({val x5589 = x5587
val x5590 = x5586
val x5591 = x5588
val x5592 = x5590 != x5591
val x5593 = x5589 && x5592
x5593}) {
val x5595 = x5588
x5586 = x5595
val x5597 = x5595 >= x3322
val x5620 = if (x5597) {
x5587 = false
()
} else {
val x5599 = x3305(x5595)
val x5600 = x5599 == '#'
val x5618 = if (x5600) {
val x5605 = x5582
val x5606 = x5583
val x5607 = x5584
val x5609 = x5605+x5599
x5582 = x5609
x5583 = false
val x5601 = x5595 + 1
x5584 = x5601
x5588 = x5601
()
} else {
x5587 = false
()
}
x5618
}
x5620
}
val x5623 = x5582
val x5624 = x5583
val x5625 = x5584
val x5734 = if (x5624) {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5565
()
} else {
var x5637: java.lang.String = ""
var x5638: Boolean = false
var x5639: Int = x5625
var x5641: Int = -1
var x5642: Boolean = true
var x5643: Int = x5625
val x5679 = while ({val x5644 = x5642
val x5645 = x5641
val x5646 = x5643
val x5647 = x5645 != x5646
val x5648 = x5644 && x5647
x5648}) {
val x5650 = x5643
x5641 = x5650
val x5652 = x5650 >= x3322
val x5677 = if (x5652) {
x5642 = false
()
} else {
val x5654 = x3305(x5650)
val x5655 = x5654 > ' '
val x5656 = x5654 != ''
val x5657 = x5655 && x5656
val x5675 = if (x5657) {
val x5662 = x5637
val x5663 = x5638
val x5664 = x5639
val x5666 = x5662+x5654
x5637 = x5666
x5638 = false
val x5658 = x5650 + 1
x5639 = x5658
x5643 = x5658
()
} else {
x5642 = false
()
}
x5675
}
x5677
}
val x5680 = x5637
val x5681 = x5638
val x5682 = x5639
val x5688 = if (x5681) {
true
} else {
false
}
val x5697 = if (x5688) {
false
} else {
false
}
val x5703 = if (x5697) {
true
} else {
false
}
val x5726 = if (x5703) {
x161
} else {
val x5702 = if (x5697) {
x935
} else {
val x5694 = if (x5688) {
x161
} else {
val x5687 = if (x5681) {
x161
} else {
val x5685 = new Anon1863173035("","","","",x5680,80)
x5685
}
x5687
}
val x5695 = if (x5688) {
false
} else {
true
}
val x5696 = new OptionAnon1863173035(x5694,x5695)
val x5700 = new Tuple2StringOptionAnon1863173035(x5557,x5696)
x5700
}
val x5708 = x5702._2
val x5709 = x5708.defined
val x5718 = if (x5709) {
val x5710 = x5708.value
val x5711 = x5710.schema
x5711
} else {
""
}
val x5719 = if (x5709) {
val x5710 = x5708.value
val x5712 = x5710.hostName
x5712
} else {
""
}
val x5720 = if (x5709) {
val x5710 = x5708.value
val x5713 = x5710.path
x5713
} else {
""
}
val x5707 = x5702._1
val x5721 = if (x5709) {
x5707
} else {
x5707
}
val x5722 = if (x5709) {
val x5710 = x5708.value
val x5714 = x5710.fragment
x5714
} else {
""
}
val x5723 = if (x5709) {
val x5710 = x5708.value
val x5715 = x5710.port
x5715
} else {
80
}
val x5724 = new Anon1863173035(x5718,x5719,x5720,x5721,x5722,x5723)
x5724
}
x3552 = x5726
val x5727 = if (x5703) {
true
} else {
false
}
x3553 = x5727
val x5704 = if (x5697) {
x5446
} else {
val x5689 = if (x5681) {
x5682
} else {
x5682
}
val x5698 = if (x5688) {
x5689
} else {
x5689
}
x5698
}
val x5728 = if (x5703) {
x5704
} else {
x5704
}
x3554 = x5728
()
}
x5734
} else {
val x5575 = new Anon1863173035("","","",x5557,"",80)
x3552 = x5575
x3553 = false
x3554 = x5559
()
}
x5740
}
x5742
}
x5744
}
x5746
} else {
x3552 = x161
x3553 = true
x3554 = x3550
()
}
x5752
}
x5754
} else {
val x5756 = x5440.res
x3552 = x5756
x3553 = x5441
val x5759 = x5440.next
x3554 = x5759
()
}
val x5763 = x3552
val x5764 = x3553
val x5765 = x3554
val x5766 = new ParseResultAnon1863173035(x5763,x5764,x5765)
x5766
}
val x5808 = x5768(x5771)
val x5809 = x5808.empty
val x5815 = if (x5809) {
true
} else {
false
}
val x5841 = if (x5815) {
x161
} else {
val x5814 = if (x5809) {
val x5792 = null.asInstanceOf[Tuple2Tuple2StringOptionAnon1863173035Anon1863173035]
x5792
} else {
val x1006 = new OptionAnon1863173035(x161,false)
val x5805 = x5769.res
val x5806 = new Tuple2StringOptionAnon1863173035(x5805,x1006)
val x5810 = x5808.res
val x5811 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5806,x5810)
x5811
}
val x5819 = x5814._1
val x5821 = x5819._1
val x5822 = x5819._2
val x5823 = x5822.defined
val x5833 = if (x5823) {
x5821
} else {
x5821
}
val x5820 = x5814._2
val x5834 = if (x5823) {
val x5824 = x5822.value
val x5825 = x5824.hostName
x5825
} else {
val x5831 = x5820.hostName
x5831
}
val x5826 = x5820.path
val x5835 = if (x5823) {
x5826
} else {
x5826
}
val x5827 = x5820.queryString
val x5836 = if (x5823) {
x5827
} else {
x5827
}
val x5828 = x5820.fragment
val x5837 = if (x5823) {
x5828
} else {
x5828
}
val x5829 = x5820.port
val x5838 = if (x5823) {
x5829
} else {
x5829
}
val x5839 = new Anon1863173035(x5833,x5834,x5835,x5836,x5837,x5838)
x5839
}
x3306 = x5841
val x5842 = if (x5815) {
true
} else {
false
}
x3307 = x5842
val x5816 = if (x5809) {
0
} else {
val x5812 = x5808.next
x5812
}
val x5843 = if (x5815) {
x5816
} else {
x5816
}
x3308 = x5843
()
}
x6145
}
x6147
}
val x6150 = x3306
val x6151 = x3307
val x6152 = x3308
val x6153 = new ParseResultAnon1863173035(x6150,x6151,x6152)
val x6154 = println(x6153)
x6154
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=7000
nVars=8000
nVars=9000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/URI_scheme,,,80),false,39)
ParseResultAnon1863173035(Anon1863173035(https,developer.mozilla.org,/en-US/docs/Web/JavaScript/Guide/Regular_Expressions,redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions,,80),false,156)
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/List_of_HTTP_headers,,Responses,80),false,59)
ParseResultAnon1863173035(Anon1863173035(ldap,ldap1.example.net,/o=University%20of%20Michigan,,,,80),false,59)
