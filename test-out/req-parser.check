/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqTypeParse extends ((Array[Char])=>(Unit)) {
def apply(x0:Array[Char]): Unit = {
var x2: java.lang.String = null
var x3: Boolean = true
var x4: Int = -1
var x7: java.lang.String = ""
var x8: Boolean = false
var x9: Int = 0
var x11: Int = -1
var x12: Boolean = true
var x13: Int = 0
val x22 = x0.length
val x54 = while ({val x14 = x12
val x15 = x11
val x16 = x13
val x17 = x15 != x16
val x18 = x14 && x17
x18}) {
val x20 = x13
x11 = x20
val x23 = x20 >= x22
val x52 = if (x23) {
x12 = false
()
} else {
val x27 = x0(x20)
val x28 = x27 >= 'a'
val x29 = x27 <= 'z'
val x30 = x28 && x29
val x31 = x27 >= 'A'
val x32 = x27 <= 'Z'
val x33 = x31 && x32
val x34 = x30 || x33
val x50 = if (x34) {
val x37 = x7
val x38 = x8
val x39 = x9
val x41 = x37+x27
x7 = x41
x8 = false
val x35 = x20 + 1
x9 = x35
x13 = x35
()
} else {
x12 = false
()
}
x50
}
x52
}
val x55 = x7
val x56 = x8
val x57 = x9
val x67 = if (x56) {
val x58 = new ParseResultString(x55,x56,x57)
x58
} else {
val x59 = collection.mutable.HashSet[java.lang.String]("connect","copy","checkout","delete","get","head","lock","merge","mkactivity","mkcol","move","msearch","notify","options","post","propfind","proppatch","put","report","subscribe","trace","unlock","unsubscribe")
val x60 = x59.contains(x55)
val x62 = if (x60) {
x55
} else {
null
}
val x63 = if (x60) {
x56
} else {
true
}
val x64 = if (x60) {
x57
} else {
x57
}
val x65 = new ParseResultString(x62,x63,x64)
x65
}
val x68 = x67.res
x2 = x68
val x70 = x67.empty
x3 = x70
val x72 = x67.next
x4 = x72
val x74 = x2
val x75 = x3
val x76 = x4
val x77 = new ParseResultString(x74,x75,x76)
val x78 = println(x77)
x78
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultString(connect,false,7)
ParseResultString(copy,false,4)
ParseResultString(checkout,false,8)
ParseResultString(delete,false,6)
ParseResultString(get,false,3)
ParseResultString(head,false,4)
ParseResultString(lock,false,4)
ParseResultString(merge,false,5)
ParseResultString(mkactivity,false,10)
ParseResultString(mkcol,false,5)
ParseResultString(move,false,4)
ParseResultString(msearch,false,7)
ParseResultString(notify,false,6)
ParseResultString(options,false,7)
ParseResultString(post,false,4)
ParseResultString(propfind,false,8)
ParseResultString(proppatch,false,9)
ParseResultString(put,false,3)
ParseResultString(report,false,6)
ParseResultString(subscribe,false,9)
ParseResultString(trace,false,5)
ParseResultString(unlock,false,6)
ParseResultString(unsubscribe,false,11)
ParseResultString(null,true,4)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class hostParse extends ((Array[Char])=>(Unit)) {
def apply(x158:Array[Char]): Unit = {
var x160: Anon1863173035 = null
var x161: Boolean = true
var x162: Int = -1
val x165 = x158.length
val x166 = 0 >= x165
val x425 = if (x166) {
x160 = null
x161 = true
x162 = 0
()
} else {
val x176 = x158(0)
val x177 = x176 >= '0'
val x178 = x176 <= '9'
val x179 = x177 && x178
val x180 = x176 >= 'a'
val x181 = x176 <= 'z'
val x182 = x180 && x181
val x183 = x176 >= 'A'
val x184 = x176 <= 'Z'
val x185 = x183 && x184
val x186 = x182 || x185
val x187 = x179 || x186
val x188 = x176 == '-'
val x189 = x187 || x188
val x190 = x176 == '.'
val x191 = x189 || x190
val x423 = if (x191) {
var x195: java.lang.String = ""
var x196: Boolean = false
val x192 = 0 + 1
var x197: Int = x192
var x199: Int = -1
var x200: Boolean = true
var x201: Int = x192
val x249 = while ({val x202 = x200
val x203 = x199
val x204 = x201
val x205 = x203 != x204
val x206 = x202 && x205
x206}) {
val x208 = x201
x199 = x208
val x210 = x208 >= x165
val x247 = if (x210) {
x200 = false
()
} else {
val x214 = x158(x208)
val x215 = x214 >= '0'
val x216 = x214 <= '9'
val x217 = x215 && x216
val x218 = x214 >= 'a'
val x219 = x214 <= 'z'
val x220 = x218 && x219
val x221 = x214 >= 'A'
val x222 = x214 <= 'Z'
val x223 = x221 && x222
val x224 = x220 || x223
val x225 = x217 || x224
val x226 = x214 == '-'
val x227 = x225 || x226
val x228 = x214 == '.'
val x229 = x227 || x228
val x245 = if (x229) {
val x232 = x195
val x233 = x196
val x234 = x197
val x236 = x232+x214
x195 = x236
x196 = false
val x230 = x208 + 1
x197 = x230
x201 = x230
()
} else {
x200 = false
()
}
x245
}
x247
}
val x250 = x195
val x251 = x196
val x252 = x197
val x257 = if (x251) {
true
} else {
false
}
val x266 = if (x257) {
true
} else {
false
}
val x417 = if (x266) {
x160 = null
x161 = true
x162 = 0
()
} else {
val x258 = if (x251) {
0
} else {
x252
}
val x267 = if (x257) {
x258
} else {
x258
}
val x273 = x267 >= x165
val x415 = if (x273) {
val x265 = if (x257) {
null
} else {
val x256 = if (x251) {
null
} else {
val x254 = new Tuple2CharString(x176,x250)
x254
}
val x261 = x256._1
val x262 = x256._2
val x263 = x261+x262
x263
}
val x281 = new Anon1863173035("",x265,"","","",80)
x160 = x281
x161 = false
x162 = x267
()
} else {
val x287 = x158(x267)
val x288 = x287 == ':'
val x413 = if (x288) {
val x289 = x267 + 1
val x291 = x289 >= x165
val x407 = if (x291) {
val x265 = if (x257) {
null
} else {
val x256 = if (x251) {
null
} else {
val x254 = new Tuple2CharString(x176,x250)
x254
}
val x261 = x256._1
val x262 = x256._2
val x263 = x261+x262
x263
}
val x281 = new Anon1863173035("",x265,"","","",80)
x160 = x281
x161 = false
x162 = x289
()
} else {
val x301 = x158(x289)
val x302 = x301 >= '0'
val x303 = x301 <= '9'
val x304 = x302 && x303
val x405 = if (x304) {
val x307 = x301 - '0'
val x308 = x307.toInt
var x310: Int = x308
var x311: Boolean = false
val x305 = x289 + 1
var x312: Int = x305
var x314: Int = -1
var x315: Boolean = true
var x316: Int = x305
val x357 = while ({val x317 = x315
val x318 = x314
val x319 = x316
val x320 = x318 != x319
val x321 = x317 && x320
x321}) {
val x323 = x316
x314 = x323
val x325 = x323 >= x165
val x355 = if (x325) {
x315 = false
()
} else {
val x330 = x158(x323)
val x331 = x330 >= '0'
val x332 = x330 <= '9'
val x333 = x331 && x332
val x353 = if (x333) {
val x339 = x310
val x340 = x311
val x341 = x312
val x336 = x330 - '0'
val x337 = x336.toInt
val x343 = x339 * 10
val x344 = x343 + x337
x310 = x344
x311 = false
val x334 = x323 + 1
x312 = x334
x316 = x334
()
} else {
x315 = false
()
}
x353
}
x355
}
val x358 = x310
val x359 = x311
val x360 = x312
val x363 = if (x359) {
true
} else {
x359
}
val x372 = if (x363) {
false
} else {
false
}
val x378 = if (x372) {
true
} else {
false
}
val x393 = if (x378) {
null
} else {
val x377 = if (x372) {
null
} else {
val x265 = if (x257) {
null
} else {
val x256 = if (x251) {
null
} else {
val x254 = new Tuple2CharString(x176,x250)
x254
}
val x261 = x256._1
val x262 = x256._2
val x263 = x261+x262
x263
}
val x369 = if (x363) {
val x276 = null.asInstanceOf[Int]
x276
} else {
val x362 = if (x359) {
0
} else {
x358
}
x362
}
val x370 = if (x363) {
false
} else {
true
}
val x371 = new OptionInt(x369,x370)
val x375 = new Tuple2StringOptionInt(x265,x371)
x375
}
val x383 = x377._2
val x384 = x383.defined
val x388 = if (x384) {
""
} else {
""
}
val x382 = x377._1
val x389 = if (x384) {
x382
} else {
x382
}
val x390 = if (x384) {
val x385 = x383.value
x385
} else {
80
}
val x391 = new Anon1863173035(x388,x389,x388,x388,x388,x390)
x391
}
x160 = x393
val x394 = if (x378) {
true
} else {
false
}
x161 = x394
val x379 = if (x372) {
0
} else {
val x364 = if (x359) {
x289
} else {
x360
}
val x373 = if (x363) {
x364
} else {
x364
}
x373
}
val x395 = if (x378) {
x379
} else {
x379
}
x162 = x395
()
} else {
val x265 = if (x257) {
null
} else {
val x256 = if (x251) {
null
} else {
val x254 = new Tuple2CharString(x176,x250)
x254
}
val x261 = x256._1
val x262 = x256._2
val x263 = x261+x262
x263
}
val x281 = new Anon1863173035("",x265,"","","",80)
x160 = x281
x161 = false
x162 = x289
()
}
x405
}
x407
} else {
val x265 = if (x257) {
null
} else {
val x256 = if (x251) {
null
} else {
val x254 = new Tuple2CharString(x176,x250)
x254
}
val x261 = x256._1
val x262 = x256._2
val x263 = x261+x262
x263
}
val x281 = new Anon1863173035("",x265,"","","",80)
x160 = x281
x161 = false
x162 = x267
()
}
x413
}
x415
}
x417
} else {
x160 = null
x161 = true
x162 = 0
()
}
x423
}
val x426 = x160
val x427 = x161
val x428 = x162
val x429 = new ParseResultAnon1863173035(x426,x427,x428)
val x430 = println(x429)
x430
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,90),false,17)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,14)
ParseResultAnon1863173035(null,true,0)
ParseResultAnon1863173035(Anon1863173035(,123..asdf3.adf,,,,80),false,15)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqFragmentParse extends ((Array[Char])=>(Unit)) {
def apply(x695:Array[Char]): Unit = {
var x696: Anon1863173035 = null
var x697: Boolean = true
var x698: Int = -1
var x700: java.lang.String = ""
var x701: Boolean = false
var x702: Int = 0
var x704: Int = -1
var x705: Boolean = true
var x706: Int = 0
val x715 = x695.length
val x741 = while ({val x707 = x705
val x708 = x704
val x709 = x706
val x710 = x708 != x709
val x711 = x707 && x710
x711}) {
val x713 = x706
x704 = x713
val x716 = x713 >= x715
val x739 = if (x716) {
x705 = false
()
} else {
val x720 = x695(x713)
val x721 = x720 == '#'
val x737 = if (x721) {
val x724 = x700
val x725 = x701
val x726 = x702
val x728 = x724+x720
x700 = x728
x701 = false
val x722 = x713 + 1
x702 = x722
x706 = x722
()
} else {
x705 = false
()
}
x737
}
x739
}
val x742 = x700
val x743 = x701
val x744 = x702
val x809 = if (x743) {
x696 = null
x697 = true
x698 = 0
()
} else {
var x751: java.lang.String = ""
var x752: Boolean = false
var x753: Int = x744
var x755: Int = -1
var x756: Boolean = true
var x757: Int = x744
val x793 = while ({val x758 = x756
val x759 = x755
val x760 = x757
val x761 = x759 != x760
val x762 = x758 && x761
x762}) {
val x764 = x757
x755 = x764
val x766 = x764 >= x715
val x791 = if (x766) {
x756 = false
()
} else {
val x770 = x695(x764)
val x771 = x770 > ' '
val x772 = x770 != ''
val x773 = x771 && x772
val x789 = if (x773) {
val x776 = x751
val x777 = x752
val x778 = x753
val x780 = x776+x770
x751 = x780
x752 = false
val x774 = x764 + 1
x753 = x774
x757 = x774
()
} else {
x756 = false
()
}
x789
}
x791
}
val x794 = x751
val x795 = x752
val x796 = x753
val x801 = if (x795) {
null
} else {
val x799 = new Anon1863173035("","","","",x794,80)
x799
}
x696 = x801
val x802 = if (x795) {
true
} else {
false
}
x697 = x802
val x803 = if (x795) {
x796
} else {
x796
}
x698 = x803
()
}
val x810 = x696
val x811 = x697
val x812 = x698
val x813 = new ParseResultAnon1863173035(x810,x811,x812)
val x814 = println(x813)
x814
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,,3adsfd.html,80),false,13)
ParseResultAnon1863173035(Anon1863173035(,,,,3asfd#adf,80),false,11)
ParseResultAnon1863173035(Anon1863173035(,,,,asdf,80),false,4)
nVars=1000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class qStringParse extends ((Array[Char])=>(Unit)) {
def apply(x937:Array[Char]): Unit = {
var x938: Anon1863173035 = null
var x939: Boolean = true
var x940: Int = -1
var x942: java.lang.String = ""
var x943: Boolean = false
var x944: Int = 0
var x946: Int = -1
var x947: Boolean = true
var x948: Int = 0
val x957 = x937.length
val x983 = while ({val x949 = x947
val x950 = x946
val x951 = x948
val x952 = x950 != x951
val x953 = x949 && x952
x953}) {
val x955 = x948
x946 = x955
val x958 = x955 >= x957
val x981 = if (x958) {
x947 = false
()
} else {
val x962 = x937(x955)
val x963 = x962 == '?'
val x979 = if (x963) {
val x966 = x942
val x967 = x943
val x968 = x944
val x970 = x966+x962
x942 = x970
x943 = false
val x964 = x955 + 1
x944 = x964
x948 = x964
()
} else {
x947 = false
()
}
x979
}
x981
}
val x984 = x942
val x985 = x943
val x986 = x944
val x1230 = if (x985) {
x938 = null
x939 = true
x940 = 0
()
} else {
var x994: java.lang.String = ""
var x995: Boolean = false
var x996: Int = x986
var x998: Int = -1
var x999: Boolean = true
var x1000: Int = x986
val x1038 = while ({val x1001 = x999
val x1002 = x998
val x1003 = x1000
val x1004 = x1002 != x1003
val x1005 = x1001 && x1004
x1005}) {
val x1007 = x1000
x998 = x1007
val x1009 = x1007 >= x957
val x1036 = if (x1009) {
x999 = false
()
} else {
val x1013 = x937(x1007)
val x1014 = x1013 > ' '
val x1015 = x1013 != '#'
val x1016 = x1014 && x1015
val x1017 = x1013 != ''
val x1018 = x1016 && x1017
val x1034 = if (x1018) {
val x1021 = x994
val x1022 = x995
val x1023 = x996
val x1025 = x1021+x1013
x994 = x1025
x995 = false
val x1019 = x1007 + 1
x996 = x1019
x1000 = x1019
()
} else {
x999 = false
()
}
x1034
}
x1036
}
val x1039 = x994
val x1040 = x995
val x1041 = x996
val x1228 = if (x1040) {
x938 = null
x939 = true
x940 = 0
()
} else {
val x1047 = x1041 >= x957
val x1226 = if (x1047) {
val x1055 = new Anon1863173035("","","",x1039,"",80)
x938 = x1055
x939 = false
x940 = x1041
()
} else {
val x1061 = x937(x1041)
val x1062 = x1061 == '#'
val x1224 = if (x1062) {
var x1066: java.lang.String = ""
var x1067: Boolean = false
val x1063 = x1041 + 1
var x1068: Int = x1063
var x1070: Int = -1
var x1071: Boolean = true
var x1072: Int = x1063
val x1106 = while ({val x1073 = x1071
val x1074 = x1070
val x1075 = x1072
val x1076 = x1074 != x1075
val x1077 = x1073 && x1076
x1077}) {
val x1079 = x1072
x1070 = x1079
val x1081 = x1079 >= x957
val x1104 = if (x1081) {
x1071 = false
()
} else {
val x1085 = x937(x1079)
val x1086 = x1085 == '#'
val x1102 = if (x1086) {
val x1089 = x1066
val x1090 = x1067
val x1091 = x1068
val x1093 = x1089+x1085
x1066 = x1093
x1067 = false
val x1087 = x1079 + 1
x1068 = x1087
x1072 = x1087
()
} else {
x1071 = false
()
}
x1102
}
x1104
}
val x1107 = x1066
val x1108 = x1067
val x1109 = x1068
val x1218 = if (x1108) {
val x1055 = new Anon1863173035("","","",x1039,"",80)
x938 = x1055
x939 = false
x940 = x1063
()
} else {
var x1121: java.lang.String = ""
var x1122: Boolean = false
var x1123: Int = x1109
var x1125: Int = -1
var x1126: Boolean = true
var x1127: Int = x1109
val x1163 = while ({val x1128 = x1126
val x1129 = x1125
val x1130 = x1127
val x1131 = x1129 != x1130
val x1132 = x1128 && x1131
x1132}) {
val x1134 = x1127
x1125 = x1134
val x1136 = x1134 >= x957
val x1161 = if (x1136) {
x1126 = false
()
} else {
val x1140 = x937(x1134)
val x1141 = x1140 > ' '
val x1142 = x1140 != ''
val x1143 = x1141 && x1142
val x1159 = if (x1143) {
val x1146 = x1121
val x1147 = x1122
val x1148 = x1123
val x1150 = x1146+x1140
x1121 = x1150
x1122 = false
val x1144 = x1134 + 1
x1123 = x1144
x1127 = x1144
()
} else {
x1126 = false
()
}
x1159
}
x1161
}
val x1164 = x1121
val x1165 = x1122
val x1166 = x1123
val x1172 = if (x1165) {
true
} else {
false
}
val x1181 = if (x1172) {
false
} else {
false
}
val x1187 = if (x1181) {
true
} else {
false
}
val x1210 = if (x1187) {
null
} else {
val x1186 = if (x1181) {
null
} else {
val x1178 = if (x1172) {
val x1050 = null.asInstanceOf[Anon1863173035]
x1050
} else {
val x1171 = if (x1165) {
null
} else {
val x1169 = new Anon1863173035("","","","",x1164,80)
x1169
}
x1171
}
val x1179 = if (x1172) {
false
} else {
true
}
val x1180 = new OptionAnon1863173035(x1178,x1179)
val x1184 = new Tuple2StringOptionAnon1863173035(x1039,x1180)
x1184
}
val x1192 = x1186._2
val x1193 = x1192.defined
val x1202 = if (x1193) {
val x1194 = x1192.value
val x1195 = x1194.schema
x1195
} else {
""
}
val x1203 = if (x1193) {
val x1194 = x1192.value
val x1196 = x1194.hostName
x1196
} else {
""
}
val x1204 = if (x1193) {
val x1194 = x1192.value
val x1197 = x1194.path
x1197
} else {
""
}
val x1191 = x1186._1
val x1205 = if (x1193) {
x1191
} else {
x1191
}
val x1206 = if (x1193) {
val x1194 = x1192.value
val x1198 = x1194.fragment
x1198
} else {
""
}
val x1207 = if (x1193) {
val x1194 = x1192.value
val x1199 = x1194.port
x1199
} else {
80
}
val x1208 = new Anon1863173035(x1202,x1203,x1204,x1205,x1206,x1207)
x1208
}
x938 = x1210
val x1211 = if (x1187) {
true
} else {
false
}
x939 = x1211
val x1188 = if (x1181) {
0
} else {
val x1173 = if (x1165) {
x1166
} else {
x1166
}
val x1182 = if (x1172) {
x1173
} else {
x1173
}
x1182
}
val x1212 = if (x1187) {
x1188
} else {
x1188
}
x940 = x1212
()
}
x1218
} else {
val x1055 = new Anon1863173035("","","",x1039,"",80)
x938 = x1055
x939 = false
x940 = x1041
()
}
x1224
}
x1226
}
x1228
}
val x1231 = x938
val x1232 = x939
val x1233 = x940
val x1234 = new ParseResultAnon1863173035(x1231,x1232,x1233)
val x1235 = println(x1234)
x1235
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,asdf,80),false,17)
ParseResultAnon1863173035(Anon1863173035(,,,asdf?adsf,,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,,asd,,80),false,3)
nVars=2000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class reqPathParse extends ((Array[Char])=>(Unit)) {
def apply(x1534:Array[Char]): Unit = {
var x1535: Anon1863173035 = null
var x1536: Boolean = true
var x1537: Int = -1
var x2011: java.lang.String = ""
var x2012: Boolean = false
var x2013: Int = 0
var x2015: Int = -1
var x2016: Boolean = true
var x2017: Int = 0
val x1551 = x1534.length
val x2057 = while ({val x2018 = x2016
val x2019 = x2015
val x2020 = x2017
val x2021 = x2019 != x2020
val x2022 = x2018 && x2021
x2022}) {
val x2024 = x2017
x2015 = x2024
val x2026 = x2024 >= x1551
val x2055 = if (x2026) {
x2016 = false
()
} else {
val x2030 = x1534(x2024)
val x2031 = x2030 > ' '
val x2032 = x2030 != '#'
val x2033 = x2031 && x2032
val x2034 = x2030 != '?'
val x2035 = x2033 && x2034
val x2036 = x2030 != ''
val x2037 = x2035 && x2036
val x2053 = if (x2037) {
val x2040 = x2011
val x2041 = x2012
val x2042 = x2013
val x2044 = x2040+x2030
x2011 = x2044
x2012 = false
val x2038 = x2024 + 1
x2013 = x2038
x2017 = x2038
()
} else {
x2016 = false
()
}
x2053
}
x2055
}
val x2058 = x2011
val x2059 = x2012
val x2060 = x2013
val x2476 = if (x2059) {
x1535 = null
x1536 = true
x1537 = 0
()
} else {
val x1050 = null.asInstanceOf[Anon1863173035]
val x1864 = {x1545: (Int) => 
var x1547: Anon1863173035 = null
var x1548: Boolean = true
var x1549: Int = x1545
val x1552 = x1545 >= x1551
val x1858 = if (x1552) {
x1547 = null
x1548 = true
x1549 = x1545
()
} else {
val x1558 = x1534(x1545)
val x1559 = x1558 == '?'
val x1856 = if (x1559) {
var x1563: java.lang.String = ""
var x1564: Boolean = false
val x1560 = x1545 + 1
var x1565: Int = x1560
var x1567: Int = -1
var x1568: Boolean = true
var x1569: Int = x1560
val x1603 = while ({val x1570 = x1568
val x1571 = x1567
val x1572 = x1569
val x1573 = x1571 != x1572
val x1574 = x1570 && x1573
x1574}) {
val x1576 = x1569
x1567 = x1576
val x1578 = x1576 >= x1551
val x1601 = if (x1578) {
x1568 = false
()
} else {
val x1582 = x1534(x1576)
val x1583 = x1582 == '?'
val x1599 = if (x1583) {
val x1586 = x1563
val x1587 = x1564
val x1588 = x1565
val x1590 = x1586+x1582
x1563 = x1590
x1564 = false
val x1584 = x1576 + 1
x1565 = x1584
x1569 = x1584
()
} else {
x1568 = false
()
}
x1599
}
x1601
}
val x1604 = x1563
val x1605 = x1564
val x1606 = x1565
val x1850 = if (x1605) {
x1547 = null
x1548 = true
x1549 = x1560
()
} else {
var x1616: java.lang.String = ""
var x1617: Boolean = false
var x1618: Int = x1606
var x1620: Int = -1
var x1621: Boolean = true
var x1622: Int = x1606
val x1660 = while ({val x1623 = x1621
val x1624 = x1620
val x1625 = x1622
val x1626 = x1624 != x1625
val x1627 = x1623 && x1626
x1627}) {
val x1629 = x1622
x1620 = x1629
val x1631 = x1629 >= x1551
val x1658 = if (x1631) {
x1621 = false
()
} else {
val x1635 = x1534(x1629)
val x1636 = x1635 > ' '
val x1637 = x1635 != '#'
val x1638 = x1636 && x1637
val x1639 = x1635 != ''
val x1640 = x1638 && x1639
val x1656 = if (x1640) {
val x1643 = x1616
val x1644 = x1617
val x1645 = x1618
val x1647 = x1643+x1635
x1616 = x1647
x1617 = false
val x1641 = x1629 + 1
x1618 = x1641
x1622 = x1641
()
} else {
x1621 = false
()
}
x1656
}
x1658
}
val x1661 = x1616
val x1662 = x1617
val x1663 = x1618
val x1848 = if (x1662) {
x1547 = null
x1548 = true
x1549 = x1560
()
} else {
val x1669 = x1663 >= x1551
val x1846 = if (x1669) {
val x1675 = new Anon1863173035("","","",x1661,"",80)
x1547 = x1675
x1548 = false
x1549 = x1663
()
} else {
val x1681 = x1534(x1663)
val x1682 = x1681 == '#'
val x1844 = if (x1682) {
var x1686: java.lang.String = ""
var x1687: Boolean = false
val x1683 = x1663 + 1
var x1688: Int = x1683
var x1690: Int = -1
var x1691: Boolean = true
var x1692: Int = x1683
val x1726 = while ({val x1693 = x1691
val x1694 = x1690
val x1695 = x1692
val x1696 = x1694 != x1695
val x1697 = x1693 && x1696
x1697}) {
val x1699 = x1692
x1690 = x1699
val x1701 = x1699 >= x1551
val x1724 = if (x1701) {
x1691 = false
()
} else {
val x1705 = x1534(x1699)
val x1706 = x1705 == '#'
val x1722 = if (x1706) {
val x1709 = x1686
val x1710 = x1687
val x1711 = x1688
val x1713 = x1709+x1705
x1686 = x1713
x1687 = false
val x1707 = x1699 + 1
x1688 = x1707
x1692 = x1707
()
} else {
x1691 = false
()
}
x1722
}
x1724
}
val x1727 = x1686
val x1728 = x1687
val x1729 = x1688
val x1838 = if (x1728) {
val x1675 = new Anon1863173035("","","",x1661,"",80)
x1547 = x1675
x1548 = false
x1549 = x1683
()
} else {
var x1741: java.lang.String = ""
var x1742: Boolean = false
var x1743: Int = x1729
var x1745: Int = -1
var x1746: Boolean = true
var x1747: Int = x1729
val x1783 = while ({val x1748 = x1746
val x1749 = x1745
val x1750 = x1747
val x1751 = x1749 != x1750
val x1752 = x1748 && x1751
x1752}) {
val x1754 = x1747
x1745 = x1754
val x1756 = x1754 >= x1551
val x1781 = if (x1756) {
x1746 = false
()
} else {
val x1760 = x1534(x1754)
val x1761 = x1760 > ' '
val x1762 = x1760 != ''
val x1763 = x1761 && x1762
val x1779 = if (x1763) {
val x1766 = x1741
val x1767 = x1742
val x1768 = x1743
val x1770 = x1766+x1760
x1741 = x1770
x1742 = false
val x1764 = x1754 + 1
x1743 = x1764
x1747 = x1764
()
} else {
x1746 = false
()
}
x1779
}
x1781
}
val x1784 = x1741
val x1785 = x1742
val x1786 = x1743
val x1792 = if (x1785) {
true
} else {
false
}
val x1801 = if (x1792) {
false
} else {
false
}
val x1807 = if (x1801) {
true
} else {
false
}
val x1830 = if (x1807) {
null
} else {
val x1806 = if (x1801) {
null
} else {
val x1798 = if (x1792) {
x1050
} else {
val x1791 = if (x1785) {
null
} else {
val x1789 = new Anon1863173035("","","","",x1784,80)
x1789
}
x1791
}
val x1799 = if (x1792) {
false
} else {
true
}
val x1800 = new OptionAnon1863173035(x1798,x1799)
val x1804 = new Tuple2StringOptionAnon1863173035(x1661,x1800)
x1804
}
val x1812 = x1806._2
val x1813 = x1812.defined
val x1822 = if (x1813) {
val x1814 = x1812.value
val x1815 = x1814.schema
x1815
} else {
""
}
val x1823 = if (x1813) {
val x1814 = x1812.value
val x1816 = x1814.hostName
x1816
} else {
""
}
val x1824 = if (x1813) {
val x1814 = x1812.value
val x1817 = x1814.path
x1817
} else {
""
}
val x1811 = x1806._1
val x1825 = if (x1813) {
x1811
} else {
x1811
}
val x1826 = if (x1813) {
val x1814 = x1812.value
val x1818 = x1814.fragment
x1818
} else {
""
}
val x1827 = if (x1813) {
val x1814 = x1812.value
val x1819 = x1814.port
x1819
} else {
80
}
val x1828 = new Anon1863173035(x1822,x1823,x1824,x1825,x1826,x1827)
x1828
}
x1547 = x1830
val x1831 = if (x1807) {
true
} else {
false
}
x1548 = x1831
val x1808 = if (x1801) {
x1560
} else {
val x1793 = if (x1785) {
x1786
} else {
x1786
}
val x1802 = if (x1792) {
x1793
} else {
x1793
}
x1802
}
val x1832 = if (x1807) {
x1808
} else {
x1808
}
x1549 = x1832
()
}
x1838
} else {
val x1675 = new Anon1863173035("","","",x1661,"",80)
x1547 = x1675
x1548 = false
x1549 = x1663
()
}
x1844
}
x1846
}
x1848
}
x1850
} else {
x1547 = null
x1548 = true
x1549 = x1545
()
}
x1856
}
val x1859 = x1547
val x1860 = x1548
val x1861 = x1549
val x1862 = new ParseResultAnon1863173035(x1859,x1860,x1861)
x1862: ParseResultAnon1863173035
}
val x2010 = {x1539: (Int) => 
var x1541: Anon1863173035 = null
var x1542: Boolean = true
var x1543: Int = x1539
val x1865 = x1864(x1539)
val x1866 = x1865.empty
val x2004 = if (x1866) {
val x1867 = x1539 >= x1551
val x1996 = if (x1867) {
x1541 = null
x1542 = true
x1543 = x1539
()
} else {
val x1873 = x1534(x1539)
val x1874 = x1873 == '#'
val x1994 = if (x1874) {
var x1878: java.lang.String = ""
var x1879: Boolean = false
val x1875 = x1539 + 1
var x1880: Int = x1875
var x1882: Int = -1
var x1883: Boolean = true
var x1884: Int = x1875
val x1918 = while ({val x1885 = x1883
val x1886 = x1882
val x1887 = x1884
val x1888 = x1886 != x1887
val x1889 = x1885 && x1888
x1889}) {
val x1891 = x1884
x1882 = x1891
val x1893 = x1891 >= x1551
val x1916 = if (x1893) {
x1883 = false
()
} else {
val x1897 = x1534(x1891)
val x1898 = x1897 == '#'
val x1914 = if (x1898) {
val x1901 = x1878
val x1902 = x1879
val x1903 = x1880
val x1905 = x1901+x1897
x1878 = x1905
x1879 = false
val x1899 = x1891 + 1
x1880 = x1899
x1884 = x1899
()
} else {
x1883 = false
()
}
x1914
}
x1916
}
val x1919 = x1878
val x1920 = x1879
val x1921 = x1880
val x1988 = if (x1920) {
x1541 = null
x1542 = true
x1543 = x1875
()
} else {
var x1930: java.lang.String = ""
var x1931: Boolean = false
var x1932: Int = x1921
var x1934: Int = -1
var x1935: Boolean = true
var x1936: Int = x1921
val x1972 = while ({val x1937 = x1935
val x1938 = x1934
val x1939 = x1936
val x1940 = x1938 != x1939
val x1941 = x1937 && x1940
x1941}) {
val x1943 = x1936
x1934 = x1943
val x1945 = x1943 >= x1551
val x1970 = if (x1945) {
x1935 = false
()
} else {
val x1949 = x1534(x1943)
val x1950 = x1949 > ' '
val x1951 = x1949 != ''
val x1952 = x1950 && x1951
val x1968 = if (x1952) {
val x1955 = x1930
val x1956 = x1931
val x1957 = x1932
val x1959 = x1955+x1949
x1930 = x1959
x1931 = false
val x1953 = x1943 + 1
x1932 = x1953
x1936 = x1953
()
} else {
x1935 = false
()
}
x1968
}
x1970
}
val x1973 = x1930
val x1974 = x1931
val x1975 = x1932
val x1980 = if (x1974) {
null
} else {
val x1978 = new Anon1863173035("","","","",x1973,80)
x1978
}
x1541 = x1980
val x1981 = if (x1974) {
true
} else {
false
}
x1542 = x1981
val x1982 = if (x1974) {
x1975
} else {
x1975
}
x1543 = x1982
()
}
x1988
} else {
x1541 = null
x1542 = true
x1543 = x1539
()
}
x1994
}
x1996
} else {
val x1998 = x1865.res
x1541 = x1998
x1542 = x1866
val x2001 = x1865.next
x1543 = x2001
()
}
val x2005 = x1541
val x2006 = x1542
val x2007 = x1543
val x2008 = new ParseResultAnon1863173035(x2005,x2006,x2007)
x2008: ParseResultAnon1863173035
}
val x2066 = x2010(x2060)
val x2067 = x2066.empty
val x2076 = if (x2067) {
false
} else {
false
}
val x2082 = if (x2076) {
true
} else {
false
}
val x2474 = if (x2082) {
x1535 = null
x1536 = true
val x2083 = if (x2076) {
0
} else {
val x2068 = x2066.next
val x2077 = if (x2067) {
x2068
} else {
x2068
}
x2077
}
x1537 = x2083
()
} else {
val x2083 = if (x2076) {
0
} else {
val x2068 = x2066.next
val x2077 = if (x2067) {
x2068
} else {
x2068
}
x2077
}
val x2090 = x2083 >= x1551
val x2472 = if (x2090) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
} else {
val x2123 = x1534(x2083)
val x2124 = x2123 == 'H'
val x2470 = if (x2124) {
val x2125 = x2083 + 1
val x2127 = x2125 >= x1551
val x2464 = if (x2127) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
} else {
val x2135 = x1534(x2125)
val x2136 = x2135 == 'T'
val x2462 = if (x2136) {
val x2137 = x2125 + 1
val x2139 = x2137 >= x1551
val x2456 = if (x2139) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
} else {
val x2147 = x1534(x2137)
val x2148 = x2147 == 'T'
val x2454 = if (x2148) {
val x2149 = x2137 + 1
val x2151 = x2149 >= x1551
val x2448 = if (x2151) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
} else {
val x2159 = x1534(x2149)
val x2160 = x2159 == 'P'
val x2446 = if (x2160) {
val x2161 = x2149 + 1
val x2163 = x2161 >= x1551
val x2440 = if (x2163) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
} else {
val x2171 = x1534(x2161)
val x2172 = x2171 == '/'
val x2438 = if (x2172) {
val x2173 = x2161 + 1
val x2196 = x2173 >= x1551
val x2432 = if (x2196) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
} else {
val x2207 = x1534(x2173)
val x2208 = x2207 >= '0'
val x2209 = x2207 <= '9'
val x2210 = x2208 && x2209
val x2430 = if (x2210) {
val x2213 = x2207 - '0'
val x2214 = x2213.toInt
var x2216: Int = x2214
var x2217: Boolean = false
val x2211 = x2173 + 1
var x2218: Int = x2211
var x2220: Int = -1
var x2221: Boolean = true
var x2222: Int = x2211
val x2263 = while ({val x2223 = x2221
val x2224 = x2220
val x2225 = x2222
val x2226 = x2224 != x2225
val x2227 = x2223 && x2226
x2227}) {
val x2229 = x2222
x2220 = x2229
val x2231 = x2229 >= x1551
val x2261 = if (x2231) {
x2221 = false
()
} else {
val x2236 = x1534(x2229)
val x2237 = x2236 >= '0'
val x2238 = x2236 <= '9'
val x2239 = x2237 && x2238
val x2259 = if (x2239) {
val x2245 = x2216
val x2246 = x2217
val x2247 = x2218
val x2242 = x2236 - '0'
val x2243 = x2242.toInt
val x2249 = x2245 * 10
val x2250 = x2249 + x2243
x2216 = x2250
x2217 = false
val x2240 = x2229 + 1
x2218 = x2240
x2222 = x2240
()
} else {
x2221 = false
()
}
x2259
}
x2261
}
val x2264 = x2216
val x2265 = x2217
val x2266 = x2218
val x2269 = if (x2265) {
true
} else {
x2265
}
val x2424 = if (x2269) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
} else {
val x2270 = if (x2265) {
x2173
} else {
x2266
}
val x2276 = x2270 >= x1551
val x2422 = if (x2276) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
} else {
val x2283 = x1534(x2270)
val x2284 = x2283 == '.'
val x2420 = if (x2284) {
val x2285 = x2270 + 1
val x2287 = x2285 >= x1551
val x2414 = if (x2287) {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
} else {
val x2294 = x1534(x2285)
val x2295 = x2294 >= '0'
val x2296 = x2294 <= '9'
val x2297 = x2295 && x2296
val x2412 = if (x2297) {
val x2300 = x2294 - '0'
val x2301 = x2300.toInt
var x2303: Int = x2301
var x2304: Boolean = false
val x2298 = x2285 + 1
var x2305: Int = x2298
var x2307: Int = -1
var x2308: Boolean = true
var x2309: Int = x2298
val x2350 = while ({val x2310 = x2308
val x2311 = x2307
val x2312 = x2309
val x2313 = x2311 != x2312
val x2314 = x2310 && x2313
x2314}) {
val x2316 = x2309
x2307 = x2316
val x2318 = x2316 >= x1551
val x2348 = if (x2318) {
x2308 = false
()
} else {
val x2323 = x1534(x2316)
val x2324 = x2323 >= '0'
val x2325 = x2323 <= '9'
val x2326 = x2324 && x2325
val x2346 = if (x2326) {
val x2332 = x2303
val x2333 = x2304
val x2334 = x2305
val x2329 = x2323 - '0'
val x2330 = x2329.toInt
val x2336 = x2332 * 10
val x2337 = x2336 + x2330
x2303 = x2337
x2304 = false
val x2327 = x2316 + 1
x2305 = x2327
x2309 = x2327
()
} else {
x2308 = false
()
}
x2346
}
x2348
}
val x2351 = x2303
val x2352 = x2304
val x2353 = x2305
val x2356 = if (x2352) {
true
} else {
x2352
}
val x2362 = if (x2356) {
true
} else {
false
}
val x2371 = if (x2362) {
false
} else {
false
}
val x2376 = if (x2371) {
true
} else {
false
}
val x2400 = if (x2376) {
null
} else {
val x2375 = if (x2371) {
null
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
x2081
}
val x2381 = x2375._2
val x2382 = x2381.defined
val x2392 = if (x2382) {
val x2383 = x2381.value
val x2385 = x2383.schema
x2385
} else {
""
}
val x2393 = if (x2382) {
val x2383 = x2381.value
val x2386 = x2383.hostName
x2386
} else {
""
}
val x2380 = x2375._1
val x2384 = "/"+x2380
val x2394 = if (x2382) {
x2384
} else {
x2384
}
val x2395 = if (x2382) {
val x2383 = x2381.value
val x2387 = x2383.queryString
x2387
} else {
""
}
val x2396 = if (x2382) {
val x2383 = x2381.value
val x2388 = x2383.fragment
x2388
} else {
""
}
val x2397 = if (x2382) {
val x2383 = x2381.value
val x2389 = x2383.port
x2389
} else {
80
}
val x2398 = new Anon1863173035(x2392,x2393,x2394,x2395,x2396,x2397)
x2398
}
x1535 = x2400
val x2401 = if (x2376) {
true
} else {
false
}
x1536 = x2401
val x2377 = if (x2371) {
0
} else {
val x2363 = if (x2356) {
x2173
} else {
val x2357 = if (x2352) {
x2285
} else {
x2353
}
x2357
}
val x2372 = if (x2362) {
x2363
} else {
x2363
}
x2372
}
val x2402 = if (x2376) {
x2377
} else {
x2377
}
x1537 = x2402
()
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
}
x2412
}
x2414
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
}
x2420
}
x2422
}
x2424
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2173
()
}
x2430
}
x2432
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
}
x2438
}
x2440
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
}
x2446
}
x2448
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
}
x2454
}
x2456
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
}
x2462
}
x2464
} else {
val x2081 = if (x2076) {
null
} else {
val x2073 = if (x2067) {
x1050
} else {
val x2070 = x2066.res
x2070
}
val x2074 = if (x2067) {
false
} else {
true
}
val x2075 = new OptionAnon1863173035(x2073,x2074)
val x2079 = new Tuple2StringOptionAnon1863173035(x2058,x2075)
x2079
}
val x2100 = x2081._2
val x2101 = x2100.defined
val x2111 = if (x2101) {
val x2102 = x2100.value
val x2104 = x2102.schema
x2104
} else {
""
}
val x2112 = if (x2101) {
val x2102 = x2100.value
val x2105 = x2102.hostName
x2105
} else {
""
}
val x2099 = x2081._1
val x2103 = "/"+x2099
val x2113 = if (x2101) {
x2103
} else {
x2103
}
val x2114 = if (x2101) {
val x2102 = x2100.value
val x2106 = x2102.queryString
x2106
} else {
""
}
val x2115 = if (x2101) {
val x2102 = x2100.value
val x2107 = x2102.fragment
x2107
} else {
""
}
val x2116 = if (x2101) {
val x2102 = x2100.value
val x2108 = x2102.port
x2108
} else {
80
}
val x2117 = new Anon1863173035(x2111,x2112,x2113,x2114,x2115,x2116)
x1535 = x2117
x1536 = false
x1537 = x2083
()
}
x2470
}
x2472
}
x2474
}
val x2477 = x1535
val x2478 = x1536
val x2479 = x1537
val x2480 = new ParseResultAnon1863173035(x2477,x2478,x2479)
val x2481 = println(x2480)
x2481
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=3000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(,,/,asdf,sadf,80),false,12)
ParseResultAnon1863173035(Anon1863173035(,,/,,asdfadsf,80),false,10)
ParseResultAnon1863173035(Anon1863173035(,,/adsfasd.html,asdf,adsf,80),false,24)
ParseResultAnon1863173035(Anon1863173035(,,/asd,,,80),false,3)
nVars=4000
nVars=5000
/*****************************************
  Emitting Generated Code                  
*******************************************/
class urlParse extends ((Array[Char])=>(Unit)) {
def apply(x3430:Array[Char]): Unit = {
var x3431: Anon1863173035 = null
var x3432: Boolean = true
var x3433: Int = -1
val x3447 = x3430.length
val x3628 = {x3441: (Int) => 
var x3443: java.lang.String = null
var x3444: Boolean = true
var x3445: Int = x3441
val x3448 = x3441 >= x3447
val x3622 = if (x3448) {
x3443 = null
x3444 = true
x3445 = x3441
()
} else {
val x3455 = x3430(x3441)
val x3456 = x3455 >= 'a'
val x3457 = x3455 <= 'z'
val x3458 = x3456 && x3457
val x3459 = x3455 >= 'A'
val x3460 = x3455 <= 'Z'
val x3461 = x3459 && x3460
val x3462 = x3458 || x3461
val x3620 = if (x3462) {
var x3466: java.lang.String = ""
var x3467: Boolean = false
val x3463 = x3441 + 1
var x3468: Int = x3463
var x3470: Int = -1
var x3471: Boolean = true
var x3472: Int = x3463
val x3512 = while ({val x3473 = x3471
val x3474 = x3470
val x3475 = x3472
val x3476 = x3474 != x3475
val x3477 = x3473 && x3476
x3477}) {
val x3479 = x3472
x3470 = x3479
val x3481 = x3479 >= x3447
val x3510 = if (x3481) {
x3471 = false
()
} else {
val x3485 = x3430(x3479)
val x3486 = x3485 >= 'a'
val x3487 = x3485 <= 'z'
val x3488 = x3486 && x3487
val x3489 = x3485 >= 'A'
val x3490 = x3485 <= 'Z'
val x3491 = x3489 && x3490
val x3492 = x3488 || x3491
val x3508 = if (x3492) {
val x3495 = x3466
val x3496 = x3467
val x3497 = x3468
val x3499 = x3495+x3485
x3466 = x3499
x3467 = false
val x3493 = x3479 + 1
x3468 = x3493
x3472 = x3493
()
} else {
x3471 = false
()
}
x3508
}
x3510
}
val x3513 = x3466
val x3514 = x3467
val x3515 = x3468
val x3520 = if (x3514) {
true
} else {
false
}
val x3529 = if (x3520) {
true
} else {
false
}
val x3614 = if (x3529) {
val x3528 = if (x3520) {
null
} else {
val x3519 = if (x3514) {
null
} else {
val x3517 = new Tuple2CharString(x3455,x3513)
x3517
}
val x3524 = x3519._1
val x3525 = x3519._2
val x3526 = x3524+x3525
x3526
}
x3443 = x3528
x3444 = x3529
val x3521 = if (x3514) {
x3441
} else {
x3515
}
val x3530 = if (x3520) {
x3521
} else {
x3521
}
x3445 = x3530
()
} else {
val x3521 = if (x3514) {
x3441
} else {
x3515
}
val x3530 = if (x3520) {
x3521
} else {
x3521
}
val x3536 = x3530 >= x3447
val x3612 = if (x3536) {
x3443 = null
x3444 = true
x3445 = x3441
()
} else {
val x3544 = x3430(x3530)
val x3545 = x3544 == ':'
val x3610 = if (x3545) {
val x3546 = x3530 + 1
val x3548 = x3546 >= x3447
val x3604 = if (x3548) {
x3443 = null
x3444 = true
x3445 = x3441
()
} else {
val x3556 = x3430(x3546)
val x3557 = x3556 == '/'
val x3602 = if (x3557) {
val x3558 = x3546 + 1
val x3560 = x3558 >= x3447
val x3596 = if (x3560) {
x3443 = null
x3444 = true
x3445 = x3441
()
} else {
val x3568 = x3430(x3558)
val x3569 = x3568 == '/'
val x3594 = if (x3569) {
val x3528 = if (x3520) {
null
} else {
val x3519 = if (x3514) {
null
} else {
val x3517 = new Tuple2CharString(x3455,x3513)
x3517
}
val x3524 = x3519._1
val x3525 = x3519._2
val x3526 = x3524+x3525
x3526
}
x3443 = x3528
x3444 = false
val x3570 = x3558 + 1
x3445 = x3570
()
} else {
x3443 = null
x3444 = true
x3445 = x3441
()
}
x3594
}
x3596
} else {
x3443 = null
x3444 = true
x3445 = x3441
()
}
x3602
}
x3604
} else {
x3443 = null
x3444 = true
x3445 = x3441
()
}
x3610
}
x3612
}
x3614
} else {
x3443 = null
x3444 = true
x3445 = x3441
()
}
x3620
}
val x3623 = x3443
val x3624 = x3444
val x3625 = x3445
val x3626 = new ParseResultString(x3623,x3624,x3625)
x3626: ParseResultString
}
val x3671 = {x3435: (Int) => 
var x3437: java.lang.String = null
var x3438: Boolean = true
var x3439: Int = x3435
val x3629 = x3628(x3435)
val x3630 = x3629.empty
val x3665 = if (x3630) {
val x3631 = x3435 >= x3447
val x3657 = if (x3631) {
x3437 = null
x3438 = true
x3439 = x3435
()
} else {
val x3637 = x3430(x3435)
val x3638 = x3637 >= '0'
val x3639 = x3637 <= '9'
val x3640 = x3638 && x3639
val x3641 = x3637 == '.'
val x3642 = x3640 || x3641
val x3655 = if (x3642) {
val x3645 = ""+x3637
x3437 = x3645
x3438 = false
val x3643 = x3435 + 1
x3439 = x3643
()
} else {
x3437 = null
x3438 = true
x3439 = x3435
()
}
x3655
}
x3657
} else {
val x3659 = x3629.res
x3437 = x3659
x3438 = x3630
val x3662 = x3629.next
x3439 = x3662
()
}
val x3666 = x3437
val x3667 = x3438
val x3668 = x3439
val x3669 = new ParseResultString(x3666,x3667,x3668)
x3669: ParseResultString
}
val x4969 = x3671(0)
val x4970 = x4969.empty
val x5415 = if (x4970) {
x3431 = null
x3432 = true
x3433 = 0
()
} else {
val x4976 = x4969.next
val x4977 = x4976 >= x3447
val x5413 = if (x4977) {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x4987 = x4968(x4976)
val x4988 = x4987.empty
val x4994 = if (x4988) {
true
} else {
false
}
val x5020 = if (x4994) {
null
} else {
val x4993 = if (x4988) {
null
} else {
val x1051 = new OptionAnon1863173035(x1050,false)
val x4984 = x4969.res
val x4985 = new Tuple2StringOptionAnon1863173035(x4984,x1051)
val x4989 = x4987.res
val x4990 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x4985,x4989)
x4990
}
val x4998 = x4993._1
val x5000 = x4998._1
val x5001 = x4998._2
val x5002 = x5001.defined
val x5012 = if (x5002) {
x5000
} else {
x5000
}
val x4999 = x4993._2
val x5013 = if (x5002) {
val x5003 = x5001.value
val x5004 = x5003.hostName
x5004
} else {
val x5010 = x4999.hostName
x5010
}
val x5005 = x4999.path
val x5014 = if (x5002) {
x5005
} else {
x5005
}
val x5006 = x4999.queryString
val x5015 = if (x5002) {
x5006
} else {
x5006
}
val x5007 = x4999.fragment
val x5016 = if (x5002) {
x5007
} else {
x5007
}
val x5008 = x4999.port
val x5017 = if (x5002) {
x5008
} else {
x5008
}
val x5018 = new Anon1863173035(x5012,x5013,x5014,x5015,x5016,x5017)
x5018
}
x3431 = x5020
val x5021 = if (x4994) {
true
} else {
false
}
x3432 = x5021
val x4995 = if (x4988) {
0
} else {
val x4991 = x4987.next
x4991
}
val x5022 = if (x4994) {
x4995
} else {
x4995
}
x3433 = x5022
()
} else {
val x5028 = x3430(x4976)
val x5029 = x5028 >= '0'
val x5030 = x5028 <= '9'
val x5031 = x5029 && x5030
val x5032 = x5028 >= 'a'
val x5033 = x5028 <= 'z'
val x5034 = x5032 && x5033
val x5035 = x5028 >= 'A'
val x5036 = x5028 <= 'Z'
val x5037 = x5035 && x5036
val x5038 = x5034 || x5037
val x5039 = x5031 || x5038
val x5040 = x5028 == '-'
val x5041 = x5039 || x5040
val x5042 = x5028 == '.'
val x5043 = x5041 || x5042
val x5411 = if (x5043) {
var x5047: java.lang.String = ""
var x5048: Boolean = false
val x5044 = x4976 + 1
var x5049: Int = x5044
var x5051: Int = -1
var x5052: Boolean = true
var x5053: Int = x5044
val x5101 = while ({val x5054 = x5052
val x5055 = x5051
val x5056 = x5053
val x5057 = x5055 != x5056
val x5058 = x5054 && x5057
x5058}) {
val x5060 = x5053
x5051 = x5060
val x5062 = x5060 >= x3447
val x5099 = if (x5062) {
x5052 = false
()
} else {
val x5066 = x3430(x5060)
val x5067 = x5066 >= '0'
val x5068 = x5066 <= '9'
val x5069 = x5067 && x5068
val x5070 = x5066 >= 'a'
val x5071 = x5066 <= 'z'
val x5072 = x5070 && x5071
val x5073 = x5066 >= 'A'
val x5074 = x5066 <= 'Z'
val x5075 = x5073 && x5074
val x5076 = x5072 || x5075
val x5077 = x5069 || x5076
val x5078 = x5066 == '-'
val x5079 = x5077 || x5078
val x5080 = x5066 == '.'
val x5081 = x5079 || x5080
val x5097 = if (x5081) {
val x5084 = x5047
val x5085 = x5048
val x5086 = x5049
val x5088 = x5084+x5066
x5047 = x5088
x5048 = false
val x5082 = x5060 + 1
x5049 = x5082
x5053 = x5082
()
} else {
x5052 = false
()
}
x5097
}
x5099
}
val x5102 = x5047
val x5103 = x5048
val x5104 = x5049
val x5109 = if (x5103) {
true
} else {
false
}
val x5118 = if (x5109) {
true
} else {
false
}
val x5405 = if (x5118) {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x4987 = x4968(x4976)
val x4988 = x4987.empty
val x4994 = if (x4988) {
true
} else {
false
}
val x5020 = if (x4994) {
null
} else {
val x4993 = if (x4988) {
null
} else {
val x1051 = new OptionAnon1863173035(x1050,false)
val x4984 = x4969.res
val x4985 = new Tuple2StringOptionAnon1863173035(x4984,x1051)
val x4989 = x4987.res
val x4990 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x4985,x4989)
x4990
}
val x4998 = x4993._1
val x5000 = x4998._1
val x5001 = x4998._2
val x5002 = x5001.defined
val x5012 = if (x5002) {
x5000
} else {
x5000
}
val x4999 = x4993._2
val x5013 = if (x5002) {
val x5003 = x5001.value
val x5004 = x5003.hostName
x5004
} else {
val x5010 = x4999.hostName
x5010
}
val x5005 = x4999.path
val x5014 = if (x5002) {
x5005
} else {
x5005
}
val x5006 = x4999.queryString
val x5015 = if (x5002) {
x5006
} else {
x5006
}
val x5007 = x4999.fragment
val x5016 = if (x5002) {
x5007
} else {
x5007
}
val x5008 = x4999.port
val x5017 = if (x5002) {
x5008
} else {
x5008
}
val x5018 = new Anon1863173035(x5012,x5013,x5014,x5015,x5016,x5017)
x5018
}
x3431 = x5020
val x5021 = if (x4994) {
true
} else {
false
}
x3432 = x5021
val x4995 = if (x4988) {
0
} else {
val x4991 = x4987.next
x4991
}
val x5022 = if (x4994) {
x4995
} else {
x4995
}
x3433 = x5022
()
} else {
val x5110 = if (x5103) {
x4976
} else {
x5104
}
val x5119 = if (x5109) {
x5110
} else {
x5110
}
val x5125 = x5119 >= x3447
val x5403 = if (x5125) {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x5137 = x4968(x5119)
val x5138 = x5137.empty
val x5144 = if (x5138) {
true
} else {
false
}
val x5170 = if (x5144) {
null
} else {
val x5143 = if (x5138) {
null
} else {
val x4984 = x4969.res
val x5117 = if (x5109) {
null
} else {
val x5108 = if (x5103) {
null
} else {
val x5106 = new Tuple2CharString(x5028,x5102)
x5106
}
val x5113 = x5108._1
val x5114 = x5108._2
val x5115 = x5113+x5114
x5115
}
val x5131 = new Anon1863173035("",x5117,"","","",80)
val x5133 = new OptionAnon1863173035(x5131,true)
val x5135 = new Tuple2StringOptionAnon1863173035(x4984,x5133)
val x5139 = x5137.res
val x5140 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5135,x5139)
x5140
}
val x5148 = x5143._1
val x5150 = x5148._1
val x5151 = x5148._2
val x5152 = x5151.defined
val x5162 = if (x5152) {
x5150
} else {
x5150
}
val x5149 = x5143._2
val x5163 = if (x5152) {
val x5153 = x5151.value
val x5154 = x5153.hostName
x5154
} else {
val x5160 = x5149.hostName
x5160
}
val x5155 = x5149.path
val x5164 = if (x5152) {
x5155
} else {
x5155
}
val x5156 = x5149.queryString
val x5165 = if (x5152) {
x5156
} else {
x5156
}
val x5157 = x5149.fragment
val x5166 = if (x5152) {
x5157
} else {
x5157
}
val x5158 = x5149.port
val x5167 = if (x5152) {
x5158
} else {
x5158
}
val x5168 = new Anon1863173035(x5162,x5163,x5164,x5165,x5166,x5167)
x5168
}
x3431 = x5170
val x5171 = if (x5144) {
true
} else {
false
}
x3432 = x5171
val x5145 = if (x5138) {
0
} else {
val x5141 = x5137.next
x5141
}
val x5172 = if (x5144) {
x5145
} else {
x5145
}
x3433 = x5172
()
} else {
val x5178 = x3430(x5119)
val x5179 = x5178 == ':'
val x5401 = if (x5179) {
val x5180 = x5119 + 1
val x5182 = x5180 >= x3447
val x5395 = if (x5182) {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x5190 = x4968(x5180)
val x5191 = x5190.empty
val x5197 = if (x5191) {
true
} else {
false
}
val x5223 = if (x5197) {
null
} else {
val x5196 = if (x5191) {
null
} else {
val x4984 = x4969.res
val x5117 = if (x5109) {
null
} else {
val x5108 = if (x5103) {
null
} else {
val x5106 = new Tuple2CharString(x5028,x5102)
x5106
}
val x5113 = x5108._1
val x5114 = x5108._2
val x5115 = x5113+x5114
x5115
}
val x5131 = new Anon1863173035("",x5117,"","","",80)
val x5133 = new OptionAnon1863173035(x5131,true)
val x5135 = new Tuple2StringOptionAnon1863173035(x4984,x5133)
val x5192 = x5190.res
val x5193 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5135,x5192)
x5193
}
val x5201 = x5196._1
val x5203 = x5201._1
val x5204 = x5201._2
val x5205 = x5204.defined
val x5215 = if (x5205) {
x5203
} else {
x5203
}
val x5202 = x5196._2
val x5216 = if (x5205) {
val x5206 = x5204.value
val x5207 = x5206.hostName
x5207
} else {
val x5213 = x5202.hostName
x5213
}
val x5208 = x5202.path
val x5217 = if (x5205) {
x5208
} else {
x5208
}
val x5209 = x5202.queryString
val x5218 = if (x5205) {
x5209
} else {
x5209
}
val x5210 = x5202.fragment
val x5219 = if (x5205) {
x5210
} else {
x5210
}
val x5211 = x5202.port
val x5220 = if (x5205) {
x5211
} else {
x5211
}
val x5221 = new Anon1863173035(x5215,x5216,x5217,x5218,x5219,x5220)
x5221
}
x3431 = x5223
val x5224 = if (x5197) {
true
} else {
false
}
x3432 = x5224
val x5198 = if (x5191) {
0
} else {
val x5194 = x5190.next
x5194
}
val x5225 = if (x5197) {
x5198
} else {
x5198
}
x3433 = x5225
()
} else {
val x5231 = x3430(x5180)
val x5232 = x5231 >= '0'
val x5233 = x5231 <= '9'
val x5234 = x5232 && x5233
val x5393 = if (x5234) {
val x5237 = x5231 - '0'
val x5238 = x5237.toInt
var x5240: Int = x5238
var x5241: Boolean = false
val x5235 = x5180 + 1
var x5242: Int = x5235
var x5244: Int = -1
var x5245: Boolean = true
var x5246: Int = x5235
val x5287 = while ({val x5247 = x5245
val x5248 = x5244
val x5249 = x5246
val x5250 = x5248 != x5249
val x5251 = x5247 && x5250
x5251}) {
val x5253 = x5246
x5244 = x5253
val x5255 = x5253 >= x3447
val x5285 = if (x5255) {
x5245 = false
()
} else {
val x5260 = x3430(x5253)
val x5261 = x5260 >= '0'
val x5262 = x5260 <= '9'
val x5263 = x5261 && x5262
val x5283 = if (x5263) {
val x5269 = x5240
val x5270 = x5241
val x5271 = x5242
val x5266 = x5260 - '0'
val x5267 = x5266.toInt
val x5273 = x5269 * 10
val x5274 = x5273 + x5267
x5240 = x5274
x5241 = false
val x5264 = x5253 + 1
x5242 = x5264
x5246 = x5264
()
} else {
x5245 = false
()
}
x5283
}
x5285
}
val x5288 = x5240
val x5289 = x5241
val x5290 = x5242
val x5293 = if (x5289) {
true
} else {
x5289
}
val x5302 = if (x5293) {
false
} else {
false
}
val x5308 = if (x5302) {
true
} else {
false
}
val x5324 = if (x5308) {
true
} else {
false
}
val x5333 = if (x5324) {
false
} else {
false
}
val x5339 = if (x5333) {
true
} else {
false
}
val x5387 = if (x5339) {
x3431 = null
x3432 = true
x3433 = 0
()
} else {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x5340 = if (x5333) {
0
} else {
val x5309 = if (x5302) {
x4976
} else {
val x5294 = if (x5289) {
x5180
} else {
x5290
}
val x5303 = if (x5293) {
x5294
} else {
x5294
}
x5303
}
val x5325 = if (x5308) {
x5309
} else {
x5309
}
val x5334 = if (x5324) {
x5325
} else {
x5325
}
x5334
}
val x5346 = x4968(x5340)
val x5347 = x5346.empty
val x5353 = if (x5347) {
true
} else {
false
}
val x5379 = if (x5353) {
null
} else {
val x5352 = if (x5347) {
null
} else {
val x5338 = if (x5333) {
null
} else {
val x4984 = x4969.res
val x5330 = if (x5324) {
x1050
} else {
val x5323 = if (x5308) {
null
} else {
val x5307 = if (x5302) {
null
} else {
val x5117 = if (x5109) {
null
} else {
val x5108 = if (x5103) {
null
} else {
val x5106 = new Tuple2CharString(x5028,x5102)
x5106
}
val x5113 = x5108._1
val x5114 = x5108._2
val x5115 = x5113+x5114
x5115
}
val x5299 = if (x5293) {
val x276 = null.asInstanceOf[Int]
x276
} else {
val x5292 = if (x5289) {
0
} else {
x5288
}
x5292
}
val x5300 = if (x5293) {
false
} else {
true
}
val x5301 = new OptionInt(x5299,x5300)
val x5305 = new Tuple2StringOptionInt(x5117,x5301)
x5305
}
val x5313 = x5307._2
val x5314 = x5313.defined
val x5318 = if (x5314) {
""
} else {
""
}
val x5312 = x5307._1
val x5319 = if (x5314) {
x5312
} else {
x5312
}
val x5320 = if (x5314) {
val x5315 = x5313.value
x5315
} else {
80
}
val x5321 = new Anon1863173035(x5318,x5319,x5318,x5318,x5318,x5320)
x5321
}
x5323
}
val x5331 = if (x5324) {
false
} else {
true
}
val x5332 = new OptionAnon1863173035(x5330,x5331)
val x5336 = new Tuple2StringOptionAnon1863173035(x4984,x5332)
x5336
}
val x5348 = x5346.res
val x5349 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5338,x5348)
x5349
}
val x5357 = x5352._1
val x5359 = x5357._1
val x5360 = x5357._2
val x5361 = x5360.defined
val x5371 = if (x5361) {
x5359
} else {
x5359
}
val x5358 = x5352._2
val x5372 = if (x5361) {
val x5362 = x5360.value
val x5363 = x5362.hostName
x5363
} else {
val x5369 = x5358.hostName
x5369
}
val x5364 = x5358.path
val x5373 = if (x5361) {
x5364
} else {
x5364
}
val x5365 = x5358.queryString
val x5374 = if (x5361) {
x5365
} else {
x5365
}
val x5366 = x5358.fragment
val x5375 = if (x5361) {
x5366
} else {
x5366
}
val x5367 = x5358.port
val x5376 = if (x5361) {
x5367
} else {
x5367
}
val x5377 = new Anon1863173035(x5371,x5372,x5373,x5374,x5375,x5376)
x5377
}
x3431 = x5379
val x5380 = if (x5353) {
true
} else {
false
}
x3432 = x5380
val x5354 = if (x5347) {
0
} else {
val x5350 = x5346.next
x5350
}
val x5381 = if (x5353) {
x5354
} else {
x5354
}
x3433 = x5381
()
}
x5387
} else {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x5190 = x4968(x5180)
val x5191 = x5190.empty
val x5197 = if (x5191) {
true
} else {
false
}
val x5223 = if (x5197) {
null
} else {
val x5196 = if (x5191) {
null
} else {
val x4984 = x4969.res
val x5117 = if (x5109) {
null
} else {
val x5108 = if (x5103) {
null
} else {
val x5106 = new Tuple2CharString(x5028,x5102)
x5106
}
val x5113 = x5108._1
val x5114 = x5108._2
val x5115 = x5113+x5114
x5115
}
val x5131 = new Anon1863173035("",x5117,"","","",80)
val x5133 = new OptionAnon1863173035(x5131,true)
val x5135 = new Tuple2StringOptionAnon1863173035(x4984,x5133)
val x5192 = x5190.res
val x5193 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5135,x5192)
x5193
}
val x5201 = x5196._1
val x5203 = x5201._1
val x5204 = x5201._2
val x5205 = x5204.defined
val x5215 = if (x5205) {
x5203
} else {
x5203
}
val x5202 = x5196._2
val x5216 = if (x5205) {
val x5206 = x5204.value
val x5207 = x5206.hostName
x5207
} else {
val x5213 = x5202.hostName
x5213
}
val x5208 = x5202.path
val x5217 = if (x5205) {
x5208
} else {
x5208
}
val x5209 = x5202.queryString
val x5218 = if (x5205) {
x5209
} else {
x5209
}
val x5210 = x5202.fragment
val x5219 = if (x5205) {
x5210
} else {
x5210
}
val x5211 = x5202.port
val x5220 = if (x5205) {
x5211
} else {
x5211
}
val x5221 = new Anon1863173035(x5215,x5216,x5217,x5218,x5219,x5220)
x5221
}
x3431 = x5223
val x5224 = if (x5197) {
true
} else {
false
}
x3432 = x5224
val x5198 = if (x5191) {
0
} else {
val x5194 = x5190.next
x5194
}
val x5225 = if (x5197) {
x5198
} else {
x5198
}
x3433 = x5225
()
}
x5393
}
x5395
} else {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x5137 = x4968(x5119)
val x5138 = x5137.empty
val x5144 = if (x5138) {
true
} else {
false
}
val x5170 = if (x5144) {
null
} else {
val x5143 = if (x5138) {
null
} else {
val x4984 = x4969.res
val x5117 = if (x5109) {
null
} else {
val x5108 = if (x5103) {
null
} else {
val x5106 = new Tuple2CharString(x5028,x5102)
x5106
}
val x5113 = x5108._1
val x5114 = x5108._2
val x5115 = x5113+x5114
x5115
}
val x5131 = new Anon1863173035("",x5117,"","","",80)
val x5133 = new OptionAnon1863173035(x5131,true)
val x5135 = new Tuple2StringOptionAnon1863173035(x4984,x5133)
val x5139 = x5137.res
val x5140 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x5135,x5139)
x5140
}
val x5148 = x5143._1
val x5150 = x5148._1
val x5151 = x5148._2
val x5152 = x5151.defined
val x5162 = if (x5152) {
x5150
} else {
x5150
}
val x5149 = x5143._2
val x5163 = if (x5152) {
val x5153 = x5151.value
val x5154 = x5153.hostName
x5154
} else {
val x5160 = x5149.hostName
x5160
}
val x5155 = x5149.path
val x5164 = if (x5152) {
x5155
} else {
x5155
}
val x5156 = x5149.queryString
val x5165 = if (x5152) {
x5156
} else {
x5156
}
val x5157 = x5149.fragment
val x5166 = if (x5152) {
x5157
} else {
x5157
}
val x5158 = x5149.port
val x5167 = if (x5152) {
x5158
} else {
x5158
}
val x5168 = new Anon1863173035(x5162,x5163,x5164,x5165,x5166,x5167)
x5168
}
x3431 = x5170
val x5171 = if (x5144) {
true
} else {
false
}
x3432 = x5171
val x5145 = if (x5138) {
0
} else {
val x5141 = x5137.next
x5141
}
val x5172 = if (x5144) {
x5145
} else {
x5145
}
x3433 = x5172
()
}
x5401
}
x5403
}
x5405
} else {
val x1050 = null.asInstanceOf[Anon1863173035]
val x4018 = {x3700: (Int) => 
var x3702: Anon1863173035 = null
var x3703: Boolean = true
var x3704: Int = x3700
val x3706 = x3700 >= x3447
val x4012 = if (x3706) {
x3702 = null
x3703 = true
x3704 = x3700
()
} else {
val x3712 = x3430(x3700)
val x3713 = x3712 == '?'
val x4010 = if (x3713) {
var x3717: java.lang.String = ""
var x3718: Boolean = false
val x3714 = x3700 + 1
var x3719: Int = x3714
var x3721: Int = -1
var x3722: Boolean = true
var x3723: Int = x3714
val x3757 = while ({val x3724 = x3722
val x3725 = x3721
val x3726 = x3723
val x3727 = x3725 != x3726
val x3728 = x3724 && x3727
x3728}) {
val x3730 = x3723
x3721 = x3730
val x3732 = x3730 >= x3447
val x3755 = if (x3732) {
x3722 = false
()
} else {
val x3736 = x3430(x3730)
val x3737 = x3736 == '?'
val x3753 = if (x3737) {
val x3740 = x3717
val x3741 = x3718
val x3742 = x3719
val x3744 = x3740+x3736
x3717 = x3744
x3718 = false
val x3738 = x3730 + 1
x3719 = x3738
x3723 = x3738
()
} else {
x3722 = false
()
}
x3753
}
x3755
}
val x3758 = x3717
val x3759 = x3718
val x3760 = x3719
val x4004 = if (x3759) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
var x3770: java.lang.String = ""
var x3771: Boolean = false
var x3772: Int = x3760
var x3774: Int = -1
var x3775: Boolean = true
var x3776: Int = x3760
val x3814 = while ({val x3777 = x3775
val x3778 = x3774
val x3779 = x3776
val x3780 = x3778 != x3779
val x3781 = x3777 && x3780
x3781}) {
val x3783 = x3776
x3774 = x3783
val x3785 = x3783 >= x3447
val x3812 = if (x3785) {
x3775 = false
()
} else {
val x3789 = x3430(x3783)
val x3790 = x3789 > ' '
val x3791 = x3789 != '#'
val x3792 = x3790 && x3791
val x3793 = x3789 != ''
val x3794 = x3792 && x3793
val x3810 = if (x3794) {
val x3797 = x3770
val x3798 = x3771
val x3799 = x3772
val x3801 = x3797+x3789
x3770 = x3801
x3771 = false
val x3795 = x3783 + 1
x3772 = x3795
x3776 = x3795
()
} else {
x3775 = false
()
}
x3810
}
x3812
}
val x3815 = x3770
val x3816 = x3771
val x3817 = x3772
val x4002 = if (x3816) {
x3702 = null
x3703 = true
x3704 = x3714
()
} else {
val x3823 = x3817 >= x3447
val x4000 = if (x3823) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
} else {
val x3835 = x3430(x3817)
val x3836 = x3835 == '#'
val x3998 = if (x3836) {
var x3840: java.lang.String = ""
var x3841: Boolean = false
val x3837 = x3817 + 1
var x3842: Int = x3837
var x3844: Int = -1
var x3845: Boolean = true
var x3846: Int = x3837
val x3880 = while ({val x3847 = x3845
val x3848 = x3844
val x3849 = x3846
val x3850 = x3848 != x3849
val x3851 = x3847 && x3850
x3851}) {
val x3853 = x3846
x3844 = x3853
val x3855 = x3853 >= x3447
val x3878 = if (x3855) {
x3845 = false
()
} else {
val x3859 = x3430(x3853)
val x3860 = x3859 == '#'
val x3876 = if (x3860) {
val x3863 = x3840
val x3864 = x3841
val x3865 = x3842
val x3867 = x3863+x3859
x3840 = x3867
x3841 = false
val x3861 = x3853 + 1
x3842 = x3861
x3846 = x3861
()
} else {
x3845 = false
()
}
x3876
}
x3878
}
val x3881 = x3840
val x3882 = x3841
val x3883 = x3842
val x3992 = if (x3882) {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3837
()
} else {
var x3895: java.lang.String = ""
var x3896: Boolean = false
var x3897: Int = x3883
var x3899: Int = -1
var x3900: Boolean = true
var x3901: Int = x3883
val x3937 = while ({val x3902 = x3900
val x3903 = x3899
val x3904 = x3901
val x3905 = x3903 != x3904
val x3906 = x3902 && x3905
x3906}) {
val x3908 = x3901
x3899 = x3908
val x3910 = x3908 >= x3447
val x3935 = if (x3910) {
x3900 = false
()
} else {
val x3914 = x3430(x3908)
val x3915 = x3914 > ' '
val x3916 = x3914 != ''
val x3917 = x3915 && x3916
val x3933 = if (x3917) {
val x3920 = x3895
val x3921 = x3896
val x3922 = x3897
val x3924 = x3920+x3914
x3895 = x3924
x3896 = false
val x3918 = x3908 + 1
x3897 = x3918
x3901 = x3918
()
} else {
x3900 = false
()
}
x3933
}
x3935
}
val x3938 = x3895
val x3939 = x3896
val x3940 = x3897
val x3946 = if (x3939) {
true
} else {
false
}
val x3955 = if (x3946) {
false
} else {
false
}
val x3961 = if (x3955) {
true
} else {
false
}
val x3984 = if (x3961) {
null
} else {
val x3960 = if (x3955) {
null
} else {
val x3952 = if (x3946) {
x1050
} else {
val x3945 = if (x3939) {
null
} else {
val x3943 = new Anon1863173035("","","","",x3938,80)
x3943
}
x3945
}
val x3953 = if (x3946) {
false
} else {
true
}
val x3954 = new OptionAnon1863173035(x3952,x3953)
val x3958 = new Tuple2StringOptionAnon1863173035(x3815,x3954)
x3958
}
val x3966 = x3960._2
val x3967 = x3966.defined
val x3976 = if (x3967) {
val x3968 = x3966.value
val x3969 = x3968.schema
x3969
} else {
""
}
val x3977 = if (x3967) {
val x3968 = x3966.value
val x3970 = x3968.hostName
x3970
} else {
""
}
val x3978 = if (x3967) {
val x3968 = x3966.value
val x3971 = x3968.path
x3971
} else {
""
}
val x3965 = x3960._1
val x3979 = if (x3967) {
x3965
} else {
x3965
}
val x3980 = if (x3967) {
val x3968 = x3966.value
val x3972 = x3968.fragment
x3972
} else {
""
}
val x3981 = if (x3967) {
val x3968 = x3966.value
val x3973 = x3968.port
x3973
} else {
80
}
val x3982 = new Anon1863173035(x3976,x3977,x3978,x3979,x3980,x3981)
x3982
}
x3702 = x3984
val x3985 = if (x3961) {
true
} else {
false
}
x3703 = x3985
val x3962 = if (x3955) {
x3714
} else {
val x3947 = if (x3939) {
x3940
} else {
x3940
}
val x3956 = if (x3946) {
x3947
} else {
x3947
}
x3956
}
val x3986 = if (x3961) {
x3962
} else {
x3962
}
x3704 = x3986
()
}
x3992
} else {
val x3829 = new Anon1863173035("","","",x3815,"",80)
x3702 = x3829
x3703 = false
x3704 = x3817
()
}
x3998
}
x4000
}
x4002
}
x4004
} else {
x3702 = null
x3703 = true
x3704 = x3700
()
}
x4010
}
val x4013 = x3702
val x4014 = x3703
val x4015 = x3704
val x4016 = new ParseResultAnon1863173035(x4013,x4014,x4015)
x4016: ParseResultAnon1863173035
}
val x4164 = {x3694: (Int) => 
var x3696: Anon1863173035 = null
var x3697: Boolean = true
var x3698: Int = x3694
val x4019 = x4018(x3694)
val x4020 = x4019.empty
val x4158 = if (x4020) {
val x4021 = x3694 >= x3447
val x4150 = if (x4021) {
x3696 = null
x3697 = true
x3698 = x3694
()
} else {
val x4027 = x3430(x3694)
val x4028 = x4027 == '#'
val x4148 = if (x4028) {
var x4032: java.lang.String = ""
var x4033: Boolean = false
val x4029 = x3694 + 1
var x4034: Int = x4029
var x4036: Int = -1
var x4037: Boolean = true
var x4038: Int = x4029
val x4072 = while ({val x4039 = x4037
val x4040 = x4036
val x4041 = x4038
val x4042 = x4040 != x4041
val x4043 = x4039 && x4042
x4043}) {
val x4045 = x4038
x4036 = x4045
val x4047 = x4045 >= x3447
val x4070 = if (x4047) {
x4037 = false
()
} else {
val x4051 = x3430(x4045)
val x4052 = x4051 == '#'
val x4068 = if (x4052) {
val x4055 = x4032
val x4056 = x4033
val x4057 = x4034
val x4059 = x4055+x4051
x4032 = x4059
x4033 = false
val x4053 = x4045 + 1
x4034 = x4053
x4038 = x4053
()
} else {
x4037 = false
()
}
x4068
}
x4070
}
val x4073 = x4032
val x4074 = x4033
val x4075 = x4034
val x4142 = if (x4074) {
x3696 = null
x3697 = true
x3698 = x4029
()
} else {
var x4084: java.lang.String = ""
var x4085: Boolean = false
var x4086: Int = x4075
var x4088: Int = -1
var x4089: Boolean = true
var x4090: Int = x4075
val x4126 = while ({val x4091 = x4089
val x4092 = x4088
val x4093 = x4090
val x4094 = x4092 != x4093
val x4095 = x4091 && x4094
x4095}) {
val x4097 = x4090
x4088 = x4097
val x4099 = x4097 >= x3447
val x4124 = if (x4099) {
x4089 = false
()
} else {
val x4103 = x3430(x4097)
val x4104 = x4103 > ' '
val x4105 = x4103 != ''
val x4106 = x4104 && x4105
val x4122 = if (x4106) {
val x4109 = x4084
val x4110 = x4085
val x4111 = x4086
val x4113 = x4109+x4103
x4084 = x4113
x4085 = false
val x4107 = x4097 + 1
x4086 = x4107
x4090 = x4107
()
} else {
x4089 = false
()
}
x4122
}
x4124
}
val x4127 = x4084
val x4128 = x4085
val x4129 = x4086
val x4134 = if (x4128) {
null
} else {
val x4132 = new Anon1863173035("","","","",x4127,80)
x4132
}
x3696 = x4134
val x4135 = if (x4128) {
true
} else {
false
}
x3697 = x4135
val x4136 = if (x4128) {
x4129
} else {
x4129
}
x3698 = x4136
()
}
x4142
} else {
x3696 = null
x3697 = true
x3698 = x3694
()
}
x4148
}
x4150
} else {
val x4152 = x4019.res
x3696 = x4152
x3697 = x4020
val x4155 = x4019.next
x3698 = x4155
()
}
val x4159 = x3696
val x4160 = x3697
val x4161 = x3698
val x4162 = new ParseResultAnon1863173035(x4159,x4160,x4161)
x4162: ParseResultAnon1863173035
}
val x4645 = {x3678: (Int) => 
var x3680: Anon1863173035 = null
var x3681: Boolean = true
var x3682: Int = x3678
val x3684 = x3678 >= x3447
val x4639 = if (x3684) {
x3680 = null
x3681 = true
x3682 = x3678
()
} else {
val x3690 = x3430(x3678)
val x3691 = x3690 == '/'
val x4637 = if (x3691) {
var x4166: java.lang.String = ""
var x4167: Boolean = false
val x3692 = x3678 + 1
var x4168: Int = x3692
var x4170: Int = -1
var x4171: Boolean = true
var x4172: Int = x3692
val x4212 = while ({val x4173 = x4171
val x4174 = x4170
val x4175 = x4172
val x4176 = x4174 != x4175
val x4177 = x4173 && x4176
x4177}) {
val x4179 = x4172
x4170 = x4179
val x4181 = x4179 >= x3447
val x4210 = if (x4181) {
x4171 = false
()
} else {
val x4185 = x3430(x4179)
val x4186 = x4185 > ' '
val x4187 = x4185 != '#'
val x4188 = x4186 && x4187
val x4189 = x4185 != '?'
val x4190 = x4188 && x4189
val x4191 = x4185 != ''
val x4192 = x4190 && x4191
val x4208 = if (x4192) {
val x4195 = x4166
val x4196 = x4167
val x4197 = x4168
val x4199 = x4195+x4185
x4166 = x4199
x4167 = false
val x4193 = x4179 + 1
x4168 = x4193
x4172 = x4193
()
} else {
x4171 = false
()
}
x4208
}
x4210
}
val x4213 = x4166
val x4214 = x4167
val x4215 = x4168
val x4631 = if (x4214) {
x3680 = null
x3681 = true
x3682 = x3692
()
} else {
val x4223 = x4164(x4215)
val x4224 = x4223.empty
val x4233 = if (x4224) {
false
} else {
false
}
val x4239 = if (x4233) {
true
} else {
false
}
val x4629 = if (x4239) {
x3680 = null
x3681 = true
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
x3682 = x4240
()
} else {
val x4240 = if (x4233) {
x3692
} else {
val x4225 = x4223.next
val x4234 = if (x4224) {
x4225
} else {
x4225
}
x4234
}
val x4247 = x4240 >= x3447
val x4627 = if (x4247) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4278 = x3430(x4240)
val x4279 = x4278 == 'H'
val x4625 = if (x4279) {
val x4280 = x4240 + 1
val x4282 = x4280 >= x3447
val x4619 = if (x4282) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4290 = x3430(x4280)
val x4291 = x4290 == 'T'
val x4617 = if (x4291) {
val x4292 = x4280 + 1
val x4294 = x4292 >= x3447
val x4611 = if (x4294) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4302 = x3430(x4292)
val x4303 = x4302 == 'T'
val x4609 = if (x4303) {
val x4304 = x4292 + 1
val x4306 = x4304 >= x3447
val x4603 = if (x4306) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4314 = x3430(x4304)
val x4315 = x4314 == 'P'
val x4601 = if (x4315) {
val x4316 = x4304 + 1
val x4318 = x4316 >= x3447
val x4595 = if (x4318) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
} else {
val x4326 = x3430(x4316)
val x4327 = x4326 == '/'
val x4593 = if (x4327) {
val x4328 = x4316 + 1
val x4351 = x4328 >= x3447
val x4587 = if (x4351) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4362 = x3430(x4328)
val x4363 = x4362 >= '0'
val x4364 = x4362 <= '9'
val x4365 = x4363 && x4364
val x4585 = if (x4365) {
val x4368 = x4362 - '0'
val x4369 = x4368.toInt
var x4371: Int = x4369
var x4372: Boolean = false
val x4366 = x4328 + 1
var x4373: Int = x4366
var x4375: Int = -1
var x4376: Boolean = true
var x4377: Int = x4366
val x4418 = while ({val x4378 = x4376
val x4379 = x4375
val x4380 = x4377
val x4381 = x4379 != x4380
val x4382 = x4378 && x4381
x4382}) {
val x4384 = x4377
x4375 = x4384
val x4386 = x4384 >= x3447
val x4416 = if (x4386) {
x4376 = false
()
} else {
val x4391 = x3430(x4384)
val x4392 = x4391 >= '0'
val x4393 = x4391 <= '9'
val x4394 = x4392 && x4393
val x4414 = if (x4394) {
val x4400 = x4371
val x4401 = x4372
val x4402 = x4373
val x4397 = x4391 - '0'
val x4398 = x4397.toInt
val x4404 = x4400 * 10
val x4405 = x4404 + x4398
x4371 = x4405
x4372 = false
val x4395 = x4384 + 1
x4373 = x4395
x4377 = x4395
()
} else {
x4376 = false
()
}
x4414
}
x4416
}
val x4419 = x4371
val x4420 = x4372
val x4421 = x4373
val x4424 = if (x4420) {
true
} else {
x4420
}
val x4579 = if (x4424) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4425 = if (x4420) {
x4328
} else {
x4421
}
val x4431 = x4425 >= x3447
val x4577 = if (x4431) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4438 = x3430(x4425)
val x4439 = x4438 == '.'
val x4575 = if (x4439) {
val x4440 = x4425 + 1
val x4442 = x4440 >= x3447
val x4569 = if (x4442) {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
} else {
val x4449 = x3430(x4440)
val x4450 = x4449 >= '0'
val x4451 = x4449 <= '9'
val x4452 = x4450 && x4451
val x4567 = if (x4452) {
val x4455 = x4449 - '0'
val x4456 = x4455.toInt
var x4458: Int = x4456
var x4459: Boolean = false
val x4453 = x4440 + 1
var x4460: Int = x4453
var x4462: Int = -1
var x4463: Boolean = true
var x4464: Int = x4453
val x4505 = while ({val x4465 = x4463
val x4466 = x4462
val x4467 = x4464
val x4468 = x4466 != x4467
val x4469 = x4465 && x4468
x4469}) {
val x4471 = x4464
x4462 = x4471
val x4473 = x4471 >= x3447
val x4503 = if (x4473) {
x4463 = false
()
} else {
val x4478 = x3430(x4471)
val x4479 = x4478 >= '0'
val x4480 = x4478 <= '9'
val x4481 = x4479 && x4480
val x4501 = if (x4481) {
val x4487 = x4458
val x4488 = x4459
val x4489 = x4460
val x4484 = x4478 - '0'
val x4485 = x4484.toInt
val x4491 = x4487 * 10
val x4492 = x4491 + x4485
x4458 = x4492
x4459 = false
val x4482 = x4471 + 1
x4460 = x4482
x4464 = x4482
()
} else {
x4463 = false
()
}
x4501
}
x4503
}
val x4506 = x4458
val x4507 = x4459
val x4508 = x4460
val x4511 = if (x4507) {
true
} else {
x4507
}
val x4517 = if (x4511) {
true
} else {
false
}
val x4526 = if (x4517) {
false
} else {
false
}
val x4531 = if (x4526) {
true
} else {
false
}
val x4555 = if (x4531) {
null
} else {
val x4530 = if (x4526) {
null
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
x4238
}
val x4536 = x4530._2
val x4537 = x4536.defined
val x4547 = if (x4537) {
val x4538 = x4536.value
val x4540 = x4538.schema
x4540
} else {
""
}
val x4548 = if (x4537) {
val x4538 = x4536.value
val x4541 = x4538.hostName
x4541
} else {
""
}
val x4535 = x4530._1
val x4539 = "/"+x4535
val x4549 = if (x4537) {
x4539
} else {
x4539
}
val x4550 = if (x4537) {
val x4538 = x4536.value
val x4542 = x4538.queryString
x4542
} else {
""
}
val x4551 = if (x4537) {
val x4538 = x4536.value
val x4543 = x4538.fragment
x4543
} else {
""
}
val x4552 = if (x4537) {
val x4538 = x4536.value
val x4544 = x4538.port
x4544
} else {
80
}
val x4553 = new Anon1863173035(x4547,x4548,x4549,x4550,x4551,x4552)
x4553
}
x3680 = x4555
val x4556 = if (x4531) {
true
} else {
false
}
x3681 = x4556
val x4532 = if (x4526) {
x3692
} else {
val x4518 = if (x4511) {
x4328
} else {
val x4512 = if (x4507) {
x4440
} else {
x4508
}
x4512
}
val x4527 = if (x4517) {
x4518
} else {
x4518
}
x4527
}
val x4557 = if (x4531) {
x4532
} else {
x4532
}
x3682 = x4557
()
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4567
}
x4569
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4575
}
x4577
}
x4579
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4328
()
}
x4585
}
x4587
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4593
}
x4595
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4601
}
x4603
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4609
}
x4611
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4617
}
x4619
} else {
val x4238 = if (x4233) {
null
} else {
val x4230 = if (x4224) {
x1050
} else {
val x4227 = x4223.res
x4227
}
val x4231 = if (x4224) {
false
} else {
true
}
val x4232 = new OptionAnon1863173035(x4230,x4231)
val x4236 = new Tuple2StringOptionAnon1863173035(x4213,x4232)
x4236
}
val x4255 = x4238._2
val x4256 = x4255.defined
val x4266 = if (x4256) {
val x4257 = x4255.value
val x4259 = x4257.schema
x4259
} else {
""
}
val x4267 = if (x4256) {
val x4257 = x4255.value
val x4260 = x4257.hostName
x4260
} else {
""
}
val x4254 = x4238._1
val x4258 = "/"+x4254
val x4268 = if (x4256) {
x4258
} else {
x4258
}
val x4269 = if (x4256) {
val x4257 = x4255.value
val x4261 = x4257.queryString
x4261
} else {
""
}
val x4270 = if (x4256) {
val x4257 = x4255.value
val x4262 = x4257.fragment
x4262
} else {
""
}
val x4271 = if (x4256) {
val x4257 = x4255.value
val x4263 = x4257.port
x4263
} else {
80
}
val x4272 = new Anon1863173035(x4266,x4267,x4268,x4269,x4270,x4271)
x3680 = x4272
x3681 = false
x3682 = x4240
()
}
x4625
}
x4627
}
x4629
}
x4631
} else {
x3680 = null
x3681 = true
x3682 = x3678
()
}
x4637
}
val x4640 = x3680
val x4641 = x3681
val x4642 = x3682
val x4643 = new ParseResultAnon1863173035(x4640,x4641,x4642)
x4643: ParseResultAnon1863173035
}
val x4968 = {x3672: (Int) => 
var x3674: Anon1863173035 = null
var x3675: Boolean = true
var x3676: Int = x3672
val x4646 = x4645(x3672)
val x4647 = x4646.empty
val x4962 = if (x4647) {
val x4648 = x3672 >= x3447
val x4954 = if (x4648) {
x3674 = null
x3675 = true
x3676 = x3672
()
} else {
val x4654 = x3430(x3672)
val x4655 = x4654 == '?'
val x4952 = if (x4655) {
var x4659: java.lang.String = ""
var x4660: Boolean = false
val x4656 = x3672 + 1
var x4661: Int = x4656
var x4663: Int = -1
var x4664: Boolean = true
var x4665: Int = x4656
val x4699 = while ({val x4666 = x4664
val x4667 = x4663
val x4668 = x4665
val x4669 = x4667 != x4668
val x4670 = x4666 && x4669
x4670}) {
val x4672 = x4665
x4663 = x4672
val x4674 = x4672 >= x3447
val x4697 = if (x4674) {
x4664 = false
()
} else {
val x4678 = x3430(x4672)
val x4679 = x4678 == '?'
val x4695 = if (x4679) {
val x4682 = x4659
val x4683 = x4660
val x4684 = x4661
val x4686 = x4682+x4678
x4659 = x4686
x4660 = false
val x4680 = x4672 + 1
x4661 = x4680
x4665 = x4680
()
} else {
x4664 = false
()
}
x4695
}
x4697
}
val x4700 = x4659
val x4701 = x4660
val x4702 = x4661
val x4946 = if (x4701) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
var x4712: java.lang.String = ""
var x4713: Boolean = false
var x4714: Int = x4702
var x4716: Int = -1
var x4717: Boolean = true
var x4718: Int = x4702
val x4756 = while ({val x4719 = x4717
val x4720 = x4716
val x4721 = x4718
val x4722 = x4720 != x4721
val x4723 = x4719 && x4722
x4723}) {
val x4725 = x4718
x4716 = x4725
val x4727 = x4725 >= x3447
val x4754 = if (x4727) {
x4717 = false
()
} else {
val x4731 = x3430(x4725)
val x4732 = x4731 > ' '
val x4733 = x4731 != '#'
val x4734 = x4732 && x4733
val x4735 = x4731 != ''
val x4736 = x4734 && x4735
val x4752 = if (x4736) {
val x4739 = x4712
val x4740 = x4713
val x4741 = x4714
val x4743 = x4739+x4731
x4712 = x4743
x4713 = false
val x4737 = x4725 + 1
x4714 = x4737
x4718 = x4737
()
} else {
x4717 = false
()
}
x4752
}
x4754
}
val x4757 = x4712
val x4758 = x4713
val x4759 = x4714
val x4944 = if (x4758) {
x3674 = null
x3675 = true
x3676 = x4656
()
} else {
val x4765 = x4759 >= x3447
val x4942 = if (x4765) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
} else {
val x4777 = x3430(x4759)
val x4778 = x4777 == '#'
val x4940 = if (x4778) {
var x4782: java.lang.String = ""
var x4783: Boolean = false
val x4779 = x4759 + 1
var x4784: Int = x4779
var x4786: Int = -1
var x4787: Boolean = true
var x4788: Int = x4779
val x4822 = while ({val x4789 = x4787
val x4790 = x4786
val x4791 = x4788
val x4792 = x4790 != x4791
val x4793 = x4789 && x4792
x4793}) {
val x4795 = x4788
x4786 = x4795
val x4797 = x4795 >= x3447
val x4820 = if (x4797) {
x4787 = false
()
} else {
val x4801 = x3430(x4795)
val x4802 = x4801 == '#'
val x4818 = if (x4802) {
val x4805 = x4782
val x4806 = x4783
val x4807 = x4784
val x4809 = x4805+x4801
x4782 = x4809
x4783 = false
val x4803 = x4795 + 1
x4784 = x4803
x4788 = x4803
()
} else {
x4787 = false
()
}
x4818
}
x4820
}
val x4823 = x4782
val x4824 = x4783
val x4825 = x4784
val x4934 = if (x4824) {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4779
()
} else {
var x4837: java.lang.String = ""
var x4838: Boolean = false
var x4839: Int = x4825
var x4841: Int = -1
var x4842: Boolean = true
var x4843: Int = x4825
val x4879 = while ({val x4844 = x4842
val x4845 = x4841
val x4846 = x4843
val x4847 = x4845 != x4846
val x4848 = x4844 && x4847
x4848}) {
val x4850 = x4843
x4841 = x4850
val x4852 = x4850 >= x3447
val x4877 = if (x4852) {
x4842 = false
()
} else {
val x4856 = x3430(x4850)
val x4857 = x4856 > ' '
val x4858 = x4856 != ''
val x4859 = x4857 && x4858
val x4875 = if (x4859) {
val x4862 = x4837
val x4863 = x4838
val x4864 = x4839
val x4866 = x4862+x4856
x4837 = x4866
x4838 = false
val x4860 = x4850 + 1
x4839 = x4860
x4843 = x4860
()
} else {
x4842 = false
()
}
x4875
}
x4877
}
val x4880 = x4837
val x4881 = x4838
val x4882 = x4839
val x4888 = if (x4881) {
true
} else {
false
}
val x4897 = if (x4888) {
false
} else {
false
}
val x4903 = if (x4897) {
true
} else {
false
}
val x4926 = if (x4903) {
null
} else {
val x4902 = if (x4897) {
null
} else {
val x4894 = if (x4888) {
x1050
} else {
val x4887 = if (x4881) {
null
} else {
val x4885 = new Anon1863173035("","","","",x4880,80)
x4885
}
x4887
}
val x4895 = if (x4888) {
false
} else {
true
}
val x4896 = new OptionAnon1863173035(x4894,x4895)
val x4900 = new Tuple2StringOptionAnon1863173035(x4757,x4896)
x4900
}
val x4908 = x4902._2
val x4909 = x4908.defined
val x4918 = if (x4909) {
val x4910 = x4908.value
val x4911 = x4910.schema
x4911
} else {
""
}
val x4919 = if (x4909) {
val x4910 = x4908.value
val x4912 = x4910.hostName
x4912
} else {
""
}
val x4920 = if (x4909) {
val x4910 = x4908.value
val x4913 = x4910.path
x4913
} else {
""
}
val x4907 = x4902._1
val x4921 = if (x4909) {
x4907
} else {
x4907
}
val x4922 = if (x4909) {
val x4910 = x4908.value
val x4914 = x4910.fragment
x4914
} else {
""
}
val x4923 = if (x4909) {
val x4910 = x4908.value
val x4915 = x4910.port
x4915
} else {
80
}
val x4924 = new Anon1863173035(x4918,x4919,x4920,x4921,x4922,x4923)
x4924
}
x3674 = x4926
val x4927 = if (x4903) {
true
} else {
false
}
x3675 = x4927
val x4904 = if (x4897) {
x4656
} else {
val x4889 = if (x4881) {
x4882
} else {
x4882
}
val x4898 = if (x4888) {
x4889
} else {
x4889
}
x4898
}
val x4928 = if (x4903) {
x4904
} else {
x4904
}
x3676 = x4928
()
}
x4934
} else {
val x4771 = new Anon1863173035("","","",x4757,"",80)
x3674 = x4771
x3675 = false
x3676 = x4759
()
}
x4940
}
x4942
}
x4944
}
x4946
} else {
x3674 = null
x3675 = true
x3676 = x3672
()
}
x4952
}
x4954
} else {
val x4956 = x4646.res
x3674 = x4956
x3675 = x4647
val x4959 = x4646.next
x3676 = x4959
()
}
val x4963 = x3674
val x4964 = x3675
val x4965 = x3676
val x4966 = new ParseResultAnon1863173035(x4963,x4964,x4965)
x4966: ParseResultAnon1863173035
}
val x4987 = x4968(x4976)
val x4988 = x4987.empty
val x4994 = if (x4988) {
true
} else {
false
}
val x5020 = if (x4994) {
null
} else {
val x4993 = if (x4988) {
null
} else {
val x1051 = new OptionAnon1863173035(x1050,false)
val x4984 = x4969.res
val x4985 = new Tuple2StringOptionAnon1863173035(x4984,x1051)
val x4989 = x4987.res
val x4990 = new Tuple2Tuple2StringOptionAnon1863173035Anon1863173035(x4985,x4989)
x4990
}
val x4998 = x4993._1
val x5000 = x4998._1
val x5001 = x4998._2
val x5002 = x5001.defined
val x5012 = if (x5002) {
x5000
} else {
x5000
}
val x4999 = x4993._2
val x5013 = if (x5002) {
val x5003 = x5001.value
val x5004 = x5003.hostName
x5004
} else {
val x5010 = x4999.hostName
x5010
}
val x5005 = x4999.path
val x5014 = if (x5002) {
x5005
} else {
x5005
}
val x5006 = x4999.queryString
val x5015 = if (x5002) {
x5006
} else {
x5006
}
val x5007 = x4999.fragment
val x5016 = if (x5002) {
x5007
} else {
x5007
}
val x5008 = x4999.port
val x5017 = if (x5002) {
x5008
} else {
x5008
}
val x5018 = new Anon1863173035(x5012,x5013,x5014,x5015,x5016,x5017)
x5018
}
x3431 = x5020
val x5021 = if (x4994) {
true
} else {
false
}
x3432 = x5021
val x4995 = if (x4988) {
0
} else {
val x4991 = x4987.next
x4991
}
val x5022 = if (x4994) {
x4995
} else {
x4995
}
x3433 = x5022
()
}
x5411
}
x5413
}
val x5416 = x3431
val x5417 = x3432
val x5418 = x3433
val x5419 = new ParseResultAnon1863173035(x5416,x5417,x5418)
val x5420 = println(x5419)
x5420
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
nVars=6000
nVars=7000
compilation: ok
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/URI_scheme,,,80),false,39)
ParseResultAnon1863173035(Anon1863173035(https,developer.mozilla.org,/en-US/docs/Web/JavaScript/Guide/Regular_Expressions,redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FRegular_Expressions,,80),false,156)
ParseResultAnon1863173035(Anon1863173035(http,en.wikipedia.org,/wiki/List_of_HTTP_headers,,Responses,80),false,59)
ParseResultAnon1863173035(Anon1863173035(ldap,ldap1.example.net,/o=University%20of%20Michigan,,,,80),false,59)
